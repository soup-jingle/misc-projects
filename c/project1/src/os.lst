 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 90112
    3                      ; Data size: 33576
    4                      ; Text size: 37716
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0xb000
    8                      ;;; 
    9                      ;;; Initialization code for programs running in the DLX simulator.
   10                      ;;; Copyright (c) 1999 by Ethan Miller
   11                      ;;; 
   12                      ;;;
   14  0000b000          	.text
   15  00001000          	.align 2
   17                      ;;;----------------------------------------------------------------------
   18                      ;;; osinit
   19                      ;;;
   20                      ;;; This is the first function called by the simulator, even before main.
   21                      ;;; Since it's called BEFORE any "real" routines, we can use any registers
   22                      ;;; we want as long as we don't mess up the stack or frame pointers.
   23                      ;;;
   24                      ;;; This routine loads the interrupt vector to point to the interrupt
   25                      ;;; handler later in this file.  It should never return, because _main
   26                      ;;; should call exitsim() or exit() rather than returning here.
   27                      ;;; 
   28                      ;;; After initialization is done, this routine jumps to _main to start the
   29                      ;;; C code portion of the operating system.
   30                      ;;;----------------------------------------------------------------------
   31  00001000          	.proc _osinit
   32  00001000          	.global _osinit
   33  00001000          	_osinit:
   34                      ;; Set up the interrupt handler
   35  00001000  3c010000	lhi	r1,(_intrhandler>>16)&0xffff
   36  00001004  24211010	addui	r1,r1,_intrhandler&0xffff
   37  00001008  00204030	movi2s	intrvec,r1
   38                      ;; Never returns because exitsim is called first
   39  0000100c  08005bc4	j	_main
   40  00001010          	.endproc _osinit
   42                      ;;;----------------------------------------------------------------------
   43                      ;;; intrhandler
   44                      ;;;
   45                      ;;; Called when an interrupt or trap is received by the CPU.  It stores the
   46                      ;;; current register set on the system stack.  It then pushes the parameters
   47                      ;;; to the C interrupt handler onto the stack: the ISR, IAR, and CAUSE
   48                      ;;; registers along with the original stack pointer.  The C interrupt
   49                      ;;; handler can then copy arguments from the original stack, performing
   50                      ;;; user -> system translations if necessary.
   51                      ;;; 
   52                      ;;;----------------------------------------------------------------------
   53  00001010          	.proc _intrhandler
   54  00001010          	.global _intrhandler
   55  00001010          	_intrhandler:
   56                      ;; We can use r31 as scratch space because its value was saved in
   57                      ;; ir31.  However, we must save the "real" value of r31 on the
   58                      ;; stack.
   60                      ;; Always store the registers on the system stack.  This way, we don't
   61                      ;; have to worry about translating things from user -> system.  We
   62                      ;; use r31 as the base register because its value was saved in ir31.
   64                      ;; If this was a user process, load r29 with the current system
   65                      ;; stack pointer.  If it was a system process, just use the
   66                      ;; current stack pointer.
   67  00001010  0060f831	movs2i	r31,isr
   68  00001014  33ff0040	andi	r31,r31,0x40
   69  00001018  17e0001c	bnez	r31,intrSystem_LF0
   70  0000101c  3c1f0000	lhi	r31,(_currentPCB>>16)&0xffff
   71  00001020  27fffe14	addui	r31,r31,_currentPCB&0xffff
   72  00001024  8fff0000	lw	r31,(r31)
   73  00001028  8fff0004	lw	r31,4(r31)
   74                      ;; Save the original (user) stack pointer
   75  0000102c  affdff48	sw	-184(r31),r29; we haven't yet bumped SP, and 156-340 = -184
   76                      ;; Copy the system stack pointer into r29 (current stack pointer)
   77  00001030  37fd0000	ori	r29,r31,0
   78  00001034  10000004	beqz	r0,intrSaveReg_LF0; skip over the system part....
   79  00001038          	intrSystem_LF0:
   80                      ;; Use the stack pointer we're already using
   81                      ;; Save r29 because we won't save it later
   82  00001038  afbdff48	sw	-184(r29),r29; we haven't yet bumped SP, and 156-340 = -184
   83  0000103c          	intrSaveReg_LF0:
   84                      ;; Adjust stack pointer for all the stuff we're going to push.  This
   85                      ;; is a bit more space than we need currently, but it leaves room
   86                      ;; for more stuff if needed.
   87  0000103c  2fbd0154	subui	r29,r29,#340
   88                      ;; Push all the stuff onto the stack
   89  00001040  afa1002c	sw	44(r29),r1
   90  00001044  afa20030	sw	48(r29),r2
   91  00001048  afa30034	sw	52(r29),r3
   92  0000104c  afa40038	sw	56(r29),r4
   93  00001050  afa5003c	sw	60(r29),r5
   94  00001054  afa60040	sw	64(r29),r6
   95  00001058  afa70044	sw	68(r29),r7
   96  0000105c  afa80048	sw	72(r29),r8
   97  00001060  afa9004c	sw	76(r29),r9
   98  00001064  afaa0050	sw	80(r29),r10
   99  00001068  afab0054	sw	84(r29),r11
  100  0000106c  afac0058	sw	88(r29),r12
  101  00001070  afad005c	sw	92(r29),r13
  102  00001074  afae0060	sw	96(r29),r14
  103  00001078  afaf0064	sw	100(r29),r15
  104  0000107c  afb00068	sw	104(r29),r16
  105  00001080  afb1006c	sw	108(r29),r17
  106  00001084  afb20070	sw	112(r29),r18
  107  00001088  afb30074	sw	116(r29),r19
  108  0000108c  afb40078	sw	120(r29),r20
  109  00001090  afb5007c	sw	124(r29),r21
  110  00001094  afb60080	sw	128(r29),r22
  111  00001098  afb70084	sw	132(r29),r23
  112  0000109c  afb80088	sw	136(r29),r24
  113  000010a0  afb9008c	sw	140(r29),r25
  114  000010a4  afba0090	sw	144(r29),r26
  115  000010a8  afbb0094	sw	148(r29),r27
  116  000010ac  afbc0098	sw	152(r29),r28
  117                      ;; Skip r29 - stored earlier!
  118  000010b0  afbe00a0	sw	160(r29),r30
  119                      ;; Load the value of r31 from the special register and then save it
  120  000010b4  00401831	movs2i	r3,ir31
  121  000010b8  afa300a4	sw	164(r29),r3
  122                      ;; Store the floating-point registers
  123  000010bc  bfa000a8	sd	168(r29),f0
  124  000010c0  bfa200b0	sd	176(r29),f2
  125  000010c4  bfa400b8	sd	184(r29),f4
  126  000010c8  bfa600c0	sd	192(r29),f6
  127  000010cc  bfa800c8	sd	200(r29),f8
  128  000010d0  bfaa00d0	sd	208(r29),f10
  129  000010d4  bfac00d8	sd	216(r29),f12
  130  000010d8  bfae00e0	sd	224(r29),f14
  131  000010dc  bfb000e8	sd	232(r29),f16
  132  000010e0  bfb200f0	sd	240(r29),f18
  133  000010e4  bfb400f8	sd	248(r29),f20
  134  000010e8  bfb60100	sd	256(r29),f22
  135  000010ec  bfb80108	sd	264(r29),f24
  136  000010f0  bfba0110	sd	272(r29),f26
  137  000010f4  bfbc0118	sd	280(r29),f28
  138  000010f8  bfbe0120	sd	288(r29),f30
  139                      ;; NOTE: we don't save the interrupt vector register because it
  140                      ;; doesn't change from process to process.
  141                      ;; NOTE: we don't save the status register because most of the flags
  142                      ;; are the same from process to process if they're in the interrupt
  143                      ;; handler.  Of course, we DO save the ISR.
  144  000010fc  00802031	movs2i	r4,iar
  145  00001100  afa40128	sw	296(r29),r4
  146  00001104  00602831	movs2i	r5,isr
  147  00001108  afa5012c	sw	300(r29),r5
  148  0000110c  00c03031	movs2i	r6,cause
  149  00001110  afa60130	sw	304(r29),r6
  150  00001114  01201831	movs2i	r3,fault
  151  00001118  afa30134	sw	308(r29),r3
  152  0000111c  01801831	movs2i	r3,ptbase
  153  00001120  afa30138	sw	312(r29),r3
  154  00001124  01a01831	movs2i	r3,ptsize
  155  00001128  afa3013c	sw	316(r29),r3
  156  0000112c  01c01831	movs2i	r3,ptbits
  157  00001130  afa30140	sw	320(r29),r3
  159                      ;; Push the interrupt information onto the stack
  160  00001134  afa60000	sw	0(r29),r6; push CAUSE
  161  00001138  afa40004	sw	4(r29),r4; push IAR
  162  0000113c  afa50008	sw	8(r29),r5; push ISR
  163                      ;; Get the original stack pointer
  164  00001140  8fa1009c	lw	r1,156(r29)
  165  00001144  afa1000c	sw	12(r29),r1
  166                      ;; Save the previous interrupt stack frame address in the current frame
  167  00001148  3c010000	lhi	r1,(_currentPCB>>16)&0xffff
  168  0000114c  2421fe14	addui	r1,r1,_currentPCB&0xffff
  169  00001150  8c210000	lw	r1,(r1)
  170  00001154  8c220000	lw	r2,0(r1)
  171  00001158  afa20028	sw	40(r29),r2
  172                      ;; Save this frame address in the PCB.  This is used so the OS can
  173                      ;; easily access the current interrupt save frame
  174  0000115c  ac3d0000	sw	0(r1),r29
  175                      ;; Call the "real" interrupt handler.  This will possibly switch
  176                      ;; contexts.  This call never returns; instead, a separate routine
  177                      ;; (_intrreturn) is called to return from interrupts after restoring
  178                      ;; the current context.
  179  00001160  08007d50	j	_dointerrupt
  180  00001164  54000000	nop
  181  00001168          	.endproc _intrhandler
  183                      ;;;----------------------------------------------------------------------
  184                      ;;; intrreturn
  185                      ;;;
  186                      ;;; Return from an interrupt or trap.  This restores all of the previously
  187                      ;;; saved registers and then returns to where the program left off.  The
  188                      ;;; current contents of the registers are destroyed.  This routine uses
  189                      ;;; the saved interrupt frame pointer, so the stack pointer need not
  190                      ;;; be correct.  Note, though, that the register contents from the previous
  191                      ;;; process must have previously been saved - in other words, call this
  192                      ;;; routine from a trap or interrupt handler.
  193                      ;;;----------------------------------------------------------------------
  194  00001168          	.proc _intrreturn
  195  00001168          	.global _intrreturn
  196  00001168          	_intrreturn:
  197                      ;; Disable interrupts - this routine must be atomic, and interrupts
  198                      ;; may not be currently disabled.  Don't worry about saving registers
  199                      ;; because we're about to reload them anyway.
  200  00001168  0c0089e8	jal	_DisableIntrs
  201                      ;; Get our interrupt stack frame location and load it into the stack
  202                      ;; pointer.
  203  0000116c  3c010000	lhi	r1,(_currentPCB>>16)&0xffff
  204  00001170  2421fe14	addui	r1,r1,_currentPCB&0xffff
  205  00001174  8c210000	lw	r1,0(r1)
  206  00001178  8c3d0000	lw	r29,0(r1)
  207                      ;; Get the previous interrupt stack frame location and make it the
  208                      ;; current interrupt save frame.
  209  0000117c  8fa20028	lw	r2,40(r29)
  210  00001180  ac220000	sw	0(r1),r2
  212                      ;; Reload the registers for the new process.  We don't have to
  213                      ;; load in the exact opposite order as long as we're careful to
  214                      ;; get the right values back in.
  215  00001184  8fa30128	lw	r3,296(r29)
  216  00001188  00602030	movi2s	iar,r3
  217  0000118c  8fa3012c	lw	r3,300(r29)
  218  00001190  00601830	movi2s	isr,r3
  219  00001194  8fa30130	lw	r3,304(r29)
  220  00001198  00603030	movi2s	cause,r3
  221  0000119c  8fa30134	lw	r3,308(r29)
  222  000011a0  00604830	movi2s	fault,r3
  223  000011a4  8fa30138	lw	r3,312(r29)
  224  000011a8  00606030	movi2s	ptbase,r3
  225  000011ac  8fa3013c	lw	r3,316(r29)
  226  000011b0  00606830	movi2s	ptsize,r3
  227  000011b4  8fa30140	lw	r3,320(r29)
  228  000011b8  00607030	movi2s	ptbits,r3
  230                      ;; Reload the floating point registers
  231  000011bc  9fa000a8	ld	f0,168(r29)
  232  000011c0  9fa200b0	ld	f2,176(r29)
  233  000011c4  9fa400b8	ld	f4,184(r29)
  234  000011c8  9fa600c0	ld	f6,192(r29)
  235  000011cc  9fa800c8	ld	f8,200(r29)
  236  000011d0  9faa00d0	ld	f10,208(r29)
  237  000011d4  9fac00d8	ld	f12,216(r29)
  238  000011d8  9fae00e0	ld	f14,224(r29)
  239  000011dc  9fb000e8	ld	f16,232(r29)
  240  000011e0  9fb200f0	ld	f18,240(r29)
  241  000011e4  9fb400f8	ld	f20,248(r29)
  242  000011e8  9fb60100	ld	f22,256(r29)
  243  000011ec  9fb80108	ld	f24,264(r29)
  244  000011f0  9fba0110	ld	f26,272(r29)
  245  000011f4  9fbc0118	ld	f28,280(r29)
  246  000011f8  9fbe0120	ld	f30,288(r29)
  248                      ;; Reload the integer registers.  We don't reload r0 because it's
  249                      ;; always 0.  We won't reload r29 here because we're using it as
  250                      ;; the stack pointer.  The same goes for r1, which we'll use as
  251                      ;; scratch so we can store r29.
  252                      ;; Skip r1 - restored later
  253  000011fc  8fa20030	lw	r2,48(r29)
  254  00001200  8fa30034	lw	r3,52(r29)
  255  00001204  8fa40038	lw	r4,56(r29)
  256  00001208  8fa5003c	lw	r5,60(r29)
  257  0000120c  8fa60040	lw	r6,64(r29)
  258  00001210  8fa70044	lw	r7,68(r29)
  259  00001214  8fa80048	lw	r8,72(r29)
  260  00001218  8fa9004c	lw	r9,76(r29)
  261  0000121c  8faa0050	lw	r10,80(r29)
  262  00001220  8fab0054	lw	r11,84(r29)
  263  00001224  8fac0058	lw	r12,88(r29)
  264  00001228  8fad005c	lw	r13,92(r29)
  265  0000122c  8fae0060	lw	r14,96(r29)
  266  00001230  8faf0064	lw	r15,100(r29)
  267  00001234  8fb00068	lw	r16,104(r29)
  268  00001238  8fb1006c	lw	r17,108(r29)
  269  0000123c  8fb20070	lw	r18,112(r29)
  270  00001240  8fb30074	lw	r19,116(r29)
  271  00001244  8fb40078	lw	r20,120(r29)
  272  00001248  8fb5007c	lw	r21,124(r29)
  273  0000124c  8fb60080	lw	r22,128(r29)
  274  00001250  8fb70084	lw	r23,132(r29)
  275  00001254  8fb80088	lw	r24,136(r29)
  276  00001258  8fb9008c	lw	r25,140(r29)
  277  0000125c  8fba0090	lw	r26,144(r29)
  278  00001260  8fbb0094	lw	r27,148(r29)
  279  00001264  8fbc0098	lw	r28,152(r29)
  280                      ;; Skip r29 - restored later
  281  00001268  8fbe00a0	lw	r30,160(r29)
  282  0000126c  8fbf00a4	lw	r31,164(r29)
  284  00001270  27bd0154	addui	r29,r29,#340
  285                      ;; Save the current value of the stack pointer after adjusting it
  286                      ;; Note that this will "destroy" the stack values below this interrupt
  287                      ;; stack frame.  This is exactly what we want!
  288  00001274  ac3d0004	sw	4(r1),r29
  289  00001278  37a10000	ori	r1,r29,#0
  290  0000127c  8c3dff48	lw	r29,-184(r1); 156-340 = -184
  291  00001280  8c21fed8	lw	r1,-296(r1); 44-340 = -296
  292  00001284  40000000	rfe
  293  00001288          	.endproc _intrreturn
  295                      ;;;----------------------------------------------------------------------
  296                      ;;; SetIntrs
  297                      ;;;
  298                      ;;; This routine sets the interrupt level to the value passed (0 -> all
  299                      ;;; interrupts enabled; 0xf -> all interrupts disabled).  It returns the
  300                      ;;; former value for the interrupt flags.
  301                      ;;;----------------------------------------------------------------------
  302  00001288          	.proc _SetIntrs
  303  00001288          	.global _SetIntrs
  304  00001288          	_SetIntrs:
  305  00001288  2fbd0010	subui	r29,r29,#16
  306  0000128c  afa2000c	sw	12(r29),r2; save r2
  307  00001290  8fa20010	lw	r2,16(r29); Get the new interrupt level
  308  00001294  3042000f	andi	r2,r2,#0x0f; Mask off interrupt levels
  309  00001298  00a00831	movs2i	r1,status
  310  0000129c  afa10008	sw	8(r29),r1; Store the old interrupt values
  311  000012a0  3021fff0	andi	r1,r1,#0xfff0; Mask off old interrupt level
  312  000012a4  00410825	or	r1,r2,r1; OR in new interrupt level
  313  000012a8  00202830	movi2s	status,r1
  314  000012ac  8fa10008	lw	r1,8(r29); Get back the original interrupt level
  315  000012b0  3021000f	andi	r1,r1,#0x0f; Mask off all but interrupt levels
  316  000012b4  8fa2000c	lw	r2,12(r29); restore r2
  317  000012b8  27bd0010	addui	r29,r29,#16; restore stack pointer
  318  000012bc  4be00000	jr	r31
  319  000012c0  54000000	nop
  320  000012c4          	.endproc _SetIntrs
  322  000012c4          	.proc _CurrentIntrs
  323  000012c4          	.global _CurrentIntrs
  324  000012c4          	_CurrentIntrs:
  325  000012c4  00a00831	movs2i	r1,status
  326  000012c8  3021000f	andi	r1,r1,#0xf
  327  000012cc  4be00000	jr	r31
  328  000012d0  54000000	nop
  329  000012d4          	.endproc _CurrentIntrs
  330                      ;;;----------------------------------------------------------------------
  331                      ;;; _ProcessSleep
  332                      ;;;
  333                      ;;; If a context switch from elsewhere in the kernel is desired, take a
  334                      ;;; trap and call this routine from the trap handler.
  335                      ;;;----------------------------------------------------------------------
  336  000012d4          	.proc _ProcessSleep
  337  000012d4          	.global _ProcessSleep
  338  000012d4          	_ProcessSleep:
  339  000012d4  44000410	trap	#0x410; This is a process sleep trap
  340  000012d8  54000000	nop
  341  000012dc  4be00000	jr	r31
  342  000012e0  54000000	nop
  343  000012e4          	.endproc _ProcessSleep
  344                      ;
  345                      ; Stub functions for DLX traps.
  346                      ;
  347                      ; Aaron Sawdey 1996; released to the Public Domain.
  348                      ;
  350  000012e4          	.align 2
  351  000012e4          	.proc _random
  352  000012e4          	.global _random
  353  000012e4          	_random:
  354  000012e4  44002020	trap	#0x2020
  355  000012e8  4be00000	jr	r31
  356  000012ec  54000000	nop
  357  000012f0          	.endproc _random
  359  000012f0          	.proc _srandom
  360  000012f0          	.global _srandom
  361  000012f0          	_srandom:
  362  000012f0  44002021	trap	#0x2021
  363  000012f4  4be00000	jr	r31
  364  000012f8  54000000	nop
  365  000012fc          	.endproc _srandom
  366                      ; Compiled by GCC
  367  000012fc          	.data
  368  0000b000          	.align 2
  369  0000b000          	_rcsid_LF2:
  370  0000b000  3a206669	.ascii "$Id: filesys.c,v 1.1 2000/09/20 01:50:19 elm Exp elm $\000"
  370  0000b004  6c657379	
  370  0000b008  732e632c	
  370  0000b00c  7620312e	
  370  0000b010  31203230	
  370  0000b014  30302f30	
  370  0000b018  392f3230	
  370  0000b01c  2030313a	
  370  0000b020  35303a31	
  370  0000b024  3920656c	
  370  0000b028  6d204578	
  370  0000b02c  7020656c	
  370  0000b030  6d203030	
  370  0000b034  30      	
  371  0000b035          	.text
  372  000012fc          	.align 2
  373  000012fc          	.proc _isspace
  374  000012fc          	.global _isspace
  375  000012fc          	_isspace:
  376                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
  377  000012fc  afbefffc	sw	-4(r29),r30; push fp
  378  00001300  001df020	add	r30,r0,r29; fp = sp
  379  00001304  afbffff8	sw	-8(r29),r31; push ret addr
  380  00001308  2fbd0010	subui	r29,r29,#16; alloc local storage
  381  0000130c  afa20000	sw	0(r29),r2
  382  00001310  83c20003	lb	r2,3(r30)
  383  00001314  201f0000	addi	r31,r0,#0
  384  00001318  304100ff	andi	r1,r2,#0x00ff
  385  0000131c  60210020	seqi	r1,r1,#32
  386  00001320  14200018	bnez	r1,L6_LF2
  387  00001324  54000000	nop; not filled.
  388  00001328  2041fff7	addi	r1,r2,#-9
  389  0000132c  302100ff	andi	r1,r1,#0x00ff
  390  00001330  70210001	sleui	r1,r1,#1
  391  00001334  10200008	beqz	r1,L5_LF2
  392  00001338  54000000	nop; not filled.
  393  0000133c          	L6_LF2:
  394  0000133c  201f0001	addi	r31,r0,#1
  395  00001340          	L5_LF2:
  396  00001340  001f0820	add	r1,r0,r31
  397  00001344  8fa20000	lw	r2,0(r29)
  398  00001348  8fdffff8	lw	r31,-8(r30)
  399  0000134c  001ee820	add	r29,r0,r30
  400  00001350  8fdefffc	lw	r30,-4(r30)
  401  00001354  4be00000	jr	r31
  402  00001358  54000000	nop
  403  0000135c          	.endproc _isspace
  404  0000135c          	.align 2
  405  0000135c          	.proc _isxdigit
  406  0000135c          	.global _isxdigit
  407  0000135c          	_isxdigit:
  408                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
  409  0000135c  afbefffc	sw	-4(r29),r30; push fp
  410  00001360  001df020	add	r30,r0,r29; fp = sp
  411  00001364  afbffff8	sw	-8(r29),r31; push ret addr
  412  00001368  2fbd0010	subui	r29,r29,#16; alloc local storage
  413  0000136c  afa20000	sw	0(r29),r2
  414  00001370  83df0003	lb	r31,3(r30)
  415  00001374  20020000	addi	r2,r0,#0
  416  00001378  23e1ffd0	addi	r1,r31,#-48
  417  0000137c  302100ff	andi	r1,r1,#0x00ff
  418  00001380  70210009	sleui	r1,r1,#9
  419  00001384  14200028	bnez	r1,L12_LF2
  420  00001388  54000000	nop; not filled.
  421  0000138c  23e1ff9f	addi	r1,r31,#-97
  422  00001390  302100ff	andi	r1,r1,#0x00ff
  423  00001394  70210005	sleui	r1,r1,#5
  424  00001398  14200014	bnez	r1,L12_LF2
  425  0000139c  54000000	nop; not filled.
  426  000013a0  33e100ff	andi	r1,r31,#0x00ff
  427  000013a4  64210041	snei	r1,r1,#65
  428  000013a8  14200008	bnez	r1,L11_LF2
  429  000013ac  54000000	nop; not filled.
  430  000013b0          	L12_LF2:
  431  000013b0  20020001	addi	r2,r0,#1
  432  000013b4          	L11_LF2:
  433  000013b4  00020820	add	r1,r0,r2
  434  000013b8  8fa20000	lw	r2,0(r29)
  435  000013bc  8fdffff8	lw	r31,-8(r30)
  436  000013c0  001ee820	add	r29,r0,r30
  437  000013c4  8fdefffc	lw	r30,-4(r30)
  438  000013c8  4be00000	jr	r31
  439  000013cc  54000000	nop
  440  000013d0          	.endproc _isxdigit
  441  000013d0          	.align 2
  442  000013d0          	.proc _DisableIntrs
  443  000013d0          	.global _DisableIntrs
  444  000013d0          	_DisableIntrs:
  445                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
  446  000013d0  afbefffc	sw	-4(r29),r30; push fp
  447  000013d4  001df020	add	r30,r0,r29; fp = sp
  448  000013d8  afbffff8	sw	-8(r29),r31; push ret addr
  449  000013dc  2fbd0010	subui	r29,r29,#16; alloc local storage
  450  000013e0  afa20000	sw	0(r29),r2
  451  000013e4  23bdfff8	addi	r29,r29,#-8
  452  000013e8  2002000f	addi	r2,r0,#15
  453  000013ec  afa20000	sw	(r29),r2
  454  000013f0  0ffffe94	jal	_SetIntrs
  455  000013f4  54000000	nop; not filled.
  456  000013f8  23bd0008	addi	r29,r29,#8
  457  000013fc  8fa20000	lw	r2,0(r29)
  458  00001400  8fdffff8	lw	r31,-8(r30)
  459  00001404  001ee820	add	r29,r0,r30
  460  00001408  8fdefffc	lw	r30,-4(r30)
  461  0000140c  4be00000	jr	r31
  462  00001410  54000000	nop
  463  00001414          	.endproc _DisableIntrs
  464  00001414          	.align 2
  465  00001414          	.proc _EnableIntrs
  466  00001414          	.global _EnableIntrs
  467  00001414          	_EnableIntrs:
  468                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
  469  00001414  afbefffc	sw	-4(r29),r30; push fp
  470  00001418  001df020	add	r30,r0,r29; fp = sp
  471  0000141c  afbffff8	sw	-8(r29),r31; push ret addr
  472  00001420  2fbd0010	subui	r29,r29,#16; alloc local storage
  473  00001424  afa20000	sw	0(r29),r2
  474  00001428  23bdfff8	addi	r29,r29,#-8
  475  0000142c  20020000	addi	r2,r0,#0
  476  00001430  afa20000	sw	(r29),r2
  477  00001434  0ffffe50	jal	_SetIntrs
  478  00001438  54000000	nop; not filled.
  479  0000143c  23bd0008	addi	r29,r29,#8
  480  00001440  8fa20000	lw	r2,0(r29)
  481  00001444  8fdffff8	lw	r31,-8(r30)
  482  00001448  001ee820	add	r29,r0,r30
  483  0000144c  8fdefffc	lw	r30,-4(r30)
  484  00001450  4be00000	jr	r31
  485  00001454  54000000	nop
  486  00001458          	.endproc _EnableIntrs
  487  00001458          	.align 2
  488  00001458          	.proc _RestoreIntrs
  489  00001458          	.global _RestoreIntrs
  490  00001458          	_RestoreIntrs:
  491                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
  492  00001458  afbefffc	sw	-4(r29),r30; push fp
  493  0000145c  001df020	add	r30,r0,r29; fp = sp
  494  00001460  afbffff8	sw	-8(r29),r31; push ret addr
  495  00001464  2fbd0010	subui	r29,r29,#16; alloc local storage
  496  00001468  afa20000	sw	0(r29),r2
  497  0000146c  23bdfff8	addi	r29,r29,#-8
  498  00001470  8fc20000	lw	r2,(r30)
  499  00001474  afa20000	sw	(r29),r2
  500  00001478  0ffffe0c	jal	_SetIntrs
  501  0000147c  54000000	nop; not filled.
  502  00001480  23bd0008	addi	r29,r29,#8
  503  00001484  8fa20000	lw	r2,0(r29)
  504  00001488  8fdffff8	lw	r31,-8(r30)
  505  0000148c  001ee820	add	r29,r0,r30
  506  00001490  8fdefffc	lw	r30,-4(r30)
  507  00001494  4be00000	jr	r31
  508  00001498  54000000	nop
  509  0000149c          	.endproc _RestoreIntrs
  510  0000149c          	.align 2
  511  0000149c          	.proc _QueueLinkInit
  512  0000149c          	.global _QueueLinkInit
  513  0000149c          	_QueueLinkInit:
  514                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
  515  0000149c  afbefffc	sw	-4(r29),r30; push fp
  516  000014a0  001df020	add	r30,r0,r29; fp = sp
  517  000014a4  afbffff8	sw	-8(r29),r31; push ret addr
  518  000014a8  2fbd0010	subui	r29,r29,#16; alloc local storage
  519  000014ac  afa20000	sw	0(r29),r2
  520  000014b0  8fc10000	lw	r1,(r30)
  521  000014b4  8fc20004	lw	r2,4(r30)
  522  000014b8  201f0000	addi	r31,r0,#0
  523  000014bc  ac3f0000	sw	(r1),r31
  524  000014c0  ac22000c	sw	12(r1),r2
  525  000014c4  8fa20000	lw	r2,0(r29)
  526  000014c8  8fdffff8	lw	r31,-8(r30)
  527  000014cc  001ee820	add	r29,r0,r30
  528  000014d0  8fdefffc	lw	r30,-4(r30)
  529  000014d4  4be00000	jr	r31
  530  000014d8  54000000	nop
  531  000014dc          	.endproc _QueueLinkInit
  532  000014dc          	.align 2
  533  000014dc          	.proc _QueueNext
  534  000014dc          	.global _QueueNext
  535  000014dc          	_QueueNext:
  536                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
  537  000014dc  afbefffc	sw	-4(r29),r30; push fp
  538  000014e0  001df020	add	r30,r0,r29; fp = sp
  539  000014e4  afbffff8	sw	-8(r29),r31; push ret addr
  540  000014e8  2fbd0008	subui	r29,r29,#8; alloc local storage
  541  000014ec  8fc10000	lw	r1,(r30)
  542  000014f0  8c210000	lw	r1,(r1)
  543  000014f4  8fdffff8	lw	r31,-8(r30)
  544  000014f8  001ee820	add	r29,r0,r30
  545  000014fc  8fdefffc	lw	r30,-4(r30)
  546  00001500  4be00000	jr	r31
  547  00001504  54000000	nop
  548  00001508          	.endproc _QueueNext
  549  00001508          	.align 2
  550  00001508          	.proc _QueuePrev
  551  00001508          	.global _QueuePrev
  552  00001508          	_QueuePrev:
  553                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
  554  00001508  afbefffc	sw	-4(r29),r30; push fp
  555  0000150c  001df020	add	r30,r0,r29; fp = sp
  556  00001510  afbffff8	sw	-8(r29),r31; push ret addr
  557  00001514  2fbd0008	subui	r29,r29,#8; alloc local storage
  558  00001518  8fc10000	lw	r1,(r30)
  559  0000151c  8c210004	lw	r1,4(r1)
  560  00001520  8fdffff8	lw	r31,-8(r30)
  561  00001524  001ee820	add	r29,r0,r30
  562  00001528  8fdefffc	lw	r30,-4(r30)
  563  0000152c  4be00000	jr	r31
  564  00001530  54000000	nop
  565  00001534          	.endproc _QueuePrev
  566  00001534          	.align 2
  567  00001534          	.proc _QueueFirst
  568  00001534          	.global _QueueFirst
  569  00001534          	_QueueFirst:
  570                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
  571  00001534  afbefffc	sw	-4(r29),r30; push fp
  572  00001538  001df020	add	r30,r0,r29; fp = sp
  573  0000153c  afbffff8	sw	-8(r29),r31; push ret addr
  574  00001540  2fbd0008	subui	r29,r29,#8; alloc local storage
  575  00001544  8fc10000	lw	r1,(r30)
  576  00001548  8c210000	lw	r1,(r1)
  577  0000154c  8fdffff8	lw	r31,-8(r30)
  578  00001550  001ee820	add	r29,r0,r30
  579  00001554  8fdefffc	lw	r30,-4(r30)
  580  00001558  4be00000	jr	r31
  581  0000155c  54000000	nop
  582  00001560          	.endproc _QueueFirst
  583  00001560          	.align 2
  584  00001560          	.proc _QueueLast
  585  00001560          	.global _QueueLast
  586  00001560          	_QueueLast:
  587                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
  588  00001560  afbefffc	sw	-4(r29),r30; push fp
  589  00001564  001df020	add	r30,r0,r29; fp = sp
  590  00001568  afbffff8	sw	-8(r29),r31; push ret addr
  591  0000156c  2fbd0008	subui	r29,r29,#8; alloc local storage
  592  00001570  8fc10000	lw	r1,(r30)
  593  00001574  8c210004	lw	r1,4(r1)
  594  00001578  8fdffff8	lw	r31,-8(r30)
  595  0000157c  001ee820	add	r29,r0,r30
  596  00001580  8fdefffc	lw	r30,-4(r30)
  597  00001584  4be00000	jr	r31
  598  00001588  54000000	nop
  599  0000158c          	.endproc _QueueLast
  600  0000158c          	.align 2
  601  0000158c          	.proc _QueueInsertAfter
  602  0000158c          	.global _QueueInsertAfter
  603  0000158c          	_QueueInsertAfter:
  604                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
  605  0000158c  afbefffc	sw	-4(r29),r30; push fp
  606  00001590  001df020	add	r30,r0,r29; fp = sp
  607  00001594  afbffff8	sw	-8(r29),r31; push ret addr
  608  00001598  2fbd0010	subui	r29,r29,#16; alloc local storage
  609  0000159c  afa20000	sw	0(r29),r2
  610  000015a0  afa30004	sw	4(r29),r3
  611  000015a4  8fc30000	lw	r3,(r30)
  612  000015a8  8fc20004	lw	r2,4(r30)
  613  000015ac  8fc10008	lw	r1,8(r30)
  614  000015b0  ac230008	sw	8(r1),r3
  615  000015b4  ac220004	sw	4(r1),r2
  616  000015b8  8c5f0000	lw	r31,(r2)
  617  000015bc  ac3f0000	sw	(r1),r31
  618  000015c0  ac410000	sw	(r2),r1
  619  000015c4  8c220000	lw	r2,(r1)
  620  000015c8  ac410004	sw	4(r2),r1
  621  000015cc  8c610008	lw	r1,8(r3)
  622  000015d0  20210001	addi	r1,r1,#1
  623  000015d4  ac610008	sw	8(r3),r1
  624  000015d8  8fa20000	lw	r2,0(r29)
  625  000015dc  8fa30004	lw	r3,4(r29)
  626  000015e0  8fdffff8	lw	r31,-8(r30)
  627  000015e4  001ee820	add	r29,r0,r30
  628  000015e8  8fdefffc	lw	r30,-4(r30)
  629  000015ec  4be00000	jr	r31
  630  000015f0  54000000	nop
  631  000015f4          	.endproc _QueueInsertAfter
  632  000015f4          	.align 2
  633  000015f4          	.proc _QueueInsertFirst
  634  000015f4          	.global _QueueInsertFirst
  635  000015f4          	_QueueInsertFirst:
  636                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
  637  000015f4  afbefffc	sw	-4(r29),r30; push fp
  638  000015f8  001df020	add	r30,r0,r29; fp = sp
  639  000015fc  afbffff8	sw	-8(r29),r31; push ret addr
  640  00001600  2fbd0010	subui	r29,r29,#16; alloc local storage
  641  00001604  afa20000	sw	0(r29),r2
  642  00001608  afa30004	sw	4(r29),r3
  643  0000160c  8fc30000	lw	r3,(r30)
  644  00001610  8fc10004	lw	r1,4(r30)
  645  00001614  ac230008	sw	8(r1),r3
  646  00001618  ac230004	sw	4(r1),r3
  647  0000161c  8c7f0000	lw	r31,(r3)
  648  00001620  ac3f0000	sw	(r1),r31
  649  00001624  ac610000	sw	(r3),r1
  650  00001628  8c220000	lw	r2,(r1)
  651  0000162c  ac410004	sw	4(r2),r1
  652  00001630  8c610008	lw	r1,8(r3)
  653  00001634  20210001	addi	r1,r1,#1
  654  00001638  ac610008	sw	8(r3),r1
  655  0000163c  8fa20000	lw	r2,0(r29)
  656  00001640  8fa30004	lw	r3,4(r29)
  657  00001644  8fdffff8	lw	r31,-8(r30)
  658  00001648  001ee820	add	r29,r0,r30
  659  0000164c  8fdefffc	lw	r30,-4(r30)
  660  00001650  4be00000	jr	r31
  661  00001654  54000000	nop
  662  00001658          	.endproc _QueueInsertFirst
  663  00001658          	.align 2
  664  00001658          	.proc _QueueInsertLast
  665  00001658          	.global _QueueInsertLast
  666  00001658          	_QueueInsertLast:
  667                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
  668  00001658  afbefffc	sw	-4(r29),r30; push fp
  669  0000165c  001df020	add	r30,r0,r29; fp = sp
  670  00001660  afbffff8	sw	-8(r29),r31; push ret addr
  671  00001664  2fbd0010	subui	r29,r29,#16; alloc local storage
  672  00001668  afa20000	sw	0(r29),r2
  673  0000166c  afa30004	sw	4(r29),r3
  674  00001670  8fc30000	lw	r3,(r30)
  675  00001674  8fc10004	lw	r1,4(r30)
  676  00001678  8c620004	lw	r2,4(r3)
  677  0000167c  ac230008	sw	8(r1),r3
  678  00001680  ac220004	sw	4(r1),r2
  679  00001684  8c5f0000	lw	r31,(r2)
  680  00001688  ac3f0000	sw	(r1),r31
  681  0000168c  ac410000	sw	(r2),r1
  682  00001690  8c220000	lw	r2,(r1)
  683  00001694  ac410004	sw	4(r2),r1
  684  00001698  8c610008	lw	r1,8(r3)
  685  0000169c  20210001	addi	r1,r1,#1
  686  000016a0  ac610008	sw	8(r3),r1
  687  000016a4  8fa20000	lw	r2,0(r29)
  688  000016a8  8fa30004	lw	r3,4(r29)
  689  000016ac  8fdffff8	lw	r31,-8(r30)
  690  000016b0  001ee820	add	r29,r0,r30
  691  000016b4  8fdefffc	lw	r30,-4(r30)
  692  000016b8  4be00000	jr	r31
  693  000016bc  54000000	nop
  694  000016c0          	.endproc _QueueInsertLast
  695  000016c0          	.align 2
  696  000016c0          	.proc _QueueRemove
  697  000016c0          	.global _QueueRemove
  698  000016c0          	_QueueRemove:
  699                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
  700  000016c0  afbefffc	sw	-4(r29),r30; push fp
  701  000016c4  001df020	add	r30,r0,r29; fp = sp
  702  000016c8  afbffff8	sw	-8(r29),r31; push ret addr
  703  000016cc  2fbd0010	subui	r29,r29,#16; alloc local storage
  704  000016d0  afa20000	sw	0(r29),r2
  705  000016d4  afa30004	sw	4(r29),r3
  706  000016d8  8fdf0000	lw	r31,(r30)
  707  000016dc  8fe10008	lw	r1,8(r31)
  708  000016e0  8c210008	lw	r1,8(r1)
  709  000016e4  6c210000	sgti	r1,r1,#0
  710  000016e8  1020002c	beqz	r1,L44_LF2
  711  000016ec  54000000	nop; not filled.
  712  000016f0  8fe10004	lw	r1,4(r31)
  713  000016f4  8fe30000	lw	r3,(r31)
  714  000016f8  ac230000	sw	(r1),r3
  715  000016fc  8fe10000	lw	r1,(r31)
  716  00001700  8fe30004	lw	r3,4(r31)
  717  00001704  ac230004	sw	4(r1),r3
  718  00001708  8fe20008	lw	r2,8(r31)
  719  0000170c  8c410008	lw	r1,8(r2)
  720  00001710  2021ffff	addi	r1,r1,#-1
  721  00001714  ac410008	sw	8(r2),r1
  722  00001718          	L44_LF2:
  723  00001718  20030000	addi	r3,r0,#0
  724  0000171c  afe30000	sw	(r31),r3
  725  00001720  8fa20000	lw	r2,0(r29)
  726  00001724  8fa30004	lw	r3,4(r29)
  727  00001728  8fdffff8	lw	r31,-8(r30)
  728  0000172c  001ee820	add	r29,r0,r30
  729  00001730  8fdefffc	lw	r30,-4(r30)
  730  00001734  4be00000	jr	r31
  731  00001738  54000000	nop
  732  0000173c          	.endproc _QueueRemove
  733  0000173c          	.align 2
  734  0000173c          	.proc _QueueLength
  735  0000173c          	.global _QueueLength
  736  0000173c          	_QueueLength:
  737                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
  738  0000173c  afbefffc	sw	-4(r29),r30; push fp
  739  00001740  001df020	add	r30,r0,r29; fp = sp
  740  00001744  afbffff8	sw	-8(r29),r31; push ret addr
  741  00001748  2fbd0008	subui	r29,r29,#8; alloc local storage
  742  0000174c  8fc10000	lw	r1,(r30)
  743  00001750  8c210008	lw	r1,8(r1)
  744  00001754  8fdffff8	lw	r31,-8(r30)
  745  00001758  001ee820	add	r29,r0,r30
  746  0000175c  8fdefffc	lw	r30,-4(r30)
  747  00001760  4be00000	jr	r31
  748  00001764  54000000	nop
  749  00001768          	.endproc _QueueLength
  750  00001768          	.align 2
  751  00001768          	.proc _QueueEmpty
  752  00001768          	.global _QueueEmpty
  753  00001768          	_QueueEmpty:
  754                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
  755  00001768  afbefffc	sw	-4(r29),r30; push fp
  756  0000176c  001df020	add	r30,r0,r29; fp = sp
  757  00001770  afbffff8	sw	-8(r29),r31; push ret addr
  758  00001774  2fbd0008	subui	r29,r29,#8; alloc local storage
  759  00001778  8fc10000	lw	r1,(r30)
  760  0000177c  8c210008	lw	r1,8(r1)
  761  00001780  60210000	seqi	r1,r1,#0
  762  00001784  8fdffff8	lw	r31,-8(r30)
  763  00001788  001ee820	add	r29,r0,r30
  764  0000178c  8fdefffc	lw	r30,-4(r30)
  765  00001790  4be00000	jr	r31
  766  00001794  54000000	nop
  767  00001798          	.endproc _QueueEmpty
  768  00001798          	.data
  769  0000b035          	.align 2
  770  0000b038          	LC0_LF2:
  771  0000b038  41747465	.ascii "Attepmting to open %s mode=%d.\n\000"
  771  0000b03c  706d7469	
  771  0000b040  6e672074	
  771  0000b044  6f206f70	
  771  0000b048  656e2025	
  771  0000b04c  73206d6f	
  771  0000b050  64653d25	
  771  0000b054  642e0a00	
  772  0000b058          	.align 2
  773  0000b058          	LC1_LF2:
  774  0000b058  646c783a	.ascii "dlx:\000"
  774  0000b05c  00      	
  775  0000b05d          	.align 2
  776  0000b060          	LC2_LF2:
  777  0000b060  46696c65	.ascii "File %s opening in file system %d.\n\000"
  777  0000b064  20257320	
  777  0000b068  6f70656e	
  777  0000b06c  696e6720	
  777  0000b070  696e2066	
  777  0000b074  696c6520	
  777  0000b078  73797374	
  777  0000b07c  656d2025	
  777  0000b080  642e0a00	
  778  0000b084          	.align 2
  779  0000b084          	LC3_LF2:
  780  0000b084  4f70656e	.ascii "Opened %s in FS %d, mode=%d slot=%d.\n\000"
  780  0000b088  65642025	
  780  0000b08c  7320696e	
  780  0000b090  20465320	
  780  0000b094  25642c20	
  780  0000b098  6d6f6465	
  780  0000b09c  3d256420	
  780  0000b0a0  736c6f74	
  780  0000b0a4  3d25642e	
  780  0000b0a8  0a00    	
  781  0000b0aa          	.text
  782  00001798          	.align 2
  783  00001798          	.proc _FsOpen
  784  00001798          	.global _FsOpen
  785  00001798          	_FsOpen:
  786                      ;  Function 'FsOpen'; 0 bytes of locals, 7 regs to save.
  787  00001798  afbefffc	sw	-4(r29),r30; push fp
  788  0000179c  001df020	add	r30,r0,r29; fp = sp
  789  000017a0  afbffff8	sw	-8(r29),r31; push ret addr
  790  000017a4  2fbd0028	subui	r29,r29,#40; alloc local storage
  791  000017a8  afa20000	sw	0(r29),r2
  792  000017ac  afa30004	sw	4(r29),r3
  793  000017b0  afa40008	sw	8(r29),r4
  794  000017b4  afa5000c	sw	12(r29),r5
  795  000017b8  afa60010	sw	16(r29),r6
  796  000017bc  afa70014	sw	20(r29),r7
  797  000017c0  afa80018	sw	24(r29),r8
  798  000017c4  8fc40000	lw	r4,(r30)
  799  000017c8  8fc50004	lw	r5,4(r30)
  800  000017cc  23bdfff8	addi	r29,r29,#-8
  801  000017d0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
  802  000017d4  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
  803  000017d8  afa20000	sw	(r29),r2
  804  000017dc  20080066	addi	r8,r0,#102
  805  000017e0  afa80004	sw	4(r29),r8
  806  000017e4  0c002630	jal	_dindex
  807  000017e8  54000000	nop; not filled.
  808  000017ec  23bd0008	addi	r29,r29,#8
  809  000017f0  64210000	snei	r1,r1,#0
  810  000017f4  1420002c	bnez	r1,L56_LF2
  811  000017f8  54000000	nop; not filled.
  812  000017fc  23bdfff8	addi	r29,r29,#-8
  813  00001800  afa20000	sw	(r29),r2
  814  00001804  2008002b	addi	r8,r0,#43
  815  00001808  afa80004	sw	4(r29),r8
  816  0000180c  0c002608	jal	_dindex
  817  00001810  54000000	nop; not filled.
  818  00001814  23bd0008	addi	r29,r29,#8
  819  00001818  64210000	snei	r1,r1,#0
  820  0000181c  10200028	beqz	r1,L55_LF2
  821  00001820  54000000	nop; not filled.
  822  00001824          	L56_LF2:
  823  00001824  23bdfff0	addi	r29,r29,#-16
  824  00001828  3c080000	lhi	r8,((LC0_LF2)>>16)&0xffff
  825  0000182c  2508b038	addui	r8,r8,(LC0_LF2)&0xffff
  826  00001830  afa80000	sw	(r29),r8
  827  00001834  afa40004	sw	4(r29),r4
  828  00001838  afa50008	sw	8(r29),r5
  829  0000183c  0c008b08	jal	_printf
  830  00001840  54000000	nop; not filled.
  831  00001844  23bd0010	addi	r29,r29,#16
  832  00001848          	L55_LF2:
  833  00001848  30a50003	andi	r5,r5,#3
  834  0000184c  64a10000	snei	r1,r5,#0
  835  00001850  10200044	beqz	r1,L74_LF2
  836  00001854  54000000	nop; not filled.
  837  00001858  20030000	addi	r3,r0,#0
  838  0000185c  3c060000	lhi	r6,((_openfiles_LF2)>>16)&0xffff
  839  00001860  24c6b110	addui	r6,r6,(_openfiles_LF2)&0xffff
  840  00001864  00061020	add	r2,r0,r6
  841  00001868          	L61_LF2:
  842  00001868  8c410004	lw	r1,4(r2)
  843  0000186c  64210000	snei	r1,r1,#0
  844  00001870  10200018	beqz	r1,L59_LF2
  845  00001874  54000000	nop; not filled.
  846  00001878  2042010c	addi	r2,r2,#268
  847  0000187c  20630001	addi	r3,r3,#1
  848  00001880  7061001f	slei	r1,r3,#31
  849  00001884  1420ffe0	bnez	r1,L61_LF2
  850  00001888  54000000	nop; not filled.
  851  0000188c          	L59_LF2:
  852  0000188c  6c61001f	sgti	r1,r3,#31
  853  00001890  10200010	beqz	r1,L64_LF2
  854  00001894  54000000	nop; not filled.
  855  00001898          	L74_LF2:
  856  00001898  2001ffff	addi	r1,r0,#-1
  857  0000189c  08000224	j	L73_LF2
  858  000018a0  54000000	nop; not filled.
  859  000018a4          	L64_LF2:
  860  000018a4  50610004	slli	r1,r3,#0x4
  861  000018a8  00230820	add	r1,r1,r3
  862  000018ac  50210002	slli	r1,r1,#0x2
  863  000018b0  00230822	sub	r1,r1,r3
  864  000018b4  50210002	slli	r1,r1,#0x2
  865  000018b8  00261020	add	r2,r1,r6
  866  000018bc  ac450004	sw	4(r2),r5
  867  000018c0  23bdfff0	addi	r29,r29,#-16
  868  000018c4  afa40000	sw	(r29),r4
  869  000018c8  3c010000	lhi	r1,((LC1_LF2)>>16)&0xffff
  870  000018cc  2421b058	addui	r1,r1,(LC1_LF2)&0xffff
  871  000018d0  afa10004	sw	4(r29),r1
  872  000018d4  20080004	addi	r8,r0,#4
  873  000018d8  afa80008	sw	8(r29),r8
  874  000018dc  0c0021f4	jal	_dstrncmp
  875  000018e0  54000000	nop; not filled.
  876  000018e4  23bd0010	addi	r29,r29,#16
  877  000018e8  64210000	snei	r1,r1,#0
  878  000018ec  14200014	bnez	r1,L65_LF2
  879  000018f0  54000000	nop; not filled.
  880  000018f4  20840004	addi	r4,r4,#4
  881  000018f8  20080001	addi	r8,r0,#1
  882  000018fc  08000008	j	L75_LF2
  883  00001900  54000000	nop; not filled.
  884  00001904          	L65_LF2:
  885  00001904  20080000	addi	r8,r0,#0
  886  00001908          	L75_LF2:
  887  00001908  ac480000	sw	(r2),r8
  888  0000190c  23bdfff8	addi	r29,r29,#-8
  889  00001910  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
  890  00001914  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
  891  00001918  afa20000	sw	(r29),r2
  892  0000191c  20080066	addi	r8,r0,#102
  893  00001920  afa80004	sw	4(r29),r8
  894  00001924  0c0024f0	jal	_dindex
  895  00001928  54000000	nop; not filled.
  896  0000192c  23bd0008	addi	r29,r29,#8
  897  00001930  64210000	snei	r1,r1,#0
  898  00001934  1420002c	bnez	r1,L68_LF2
  899  00001938  54000000	nop; not filled.
  900  0000193c  23bdfff8	addi	r29,r29,#-8
  901  00001940  afa20000	sw	(r29),r2
  902  00001944  2008002b	addi	r8,r0,#43
  903  00001948  afa80004	sw	4(r29),r8
  904  0000194c  0c0024c8	jal	_dindex
  905  00001950  54000000	nop; not filled.
  906  00001954  23bd0008	addi	r29,r29,#8
  907  00001958  64210000	snei	r1,r1,#0
  908  0000195c  1020004c	beqz	r1,L67_LF2
  909  00001960  54000000	nop; not filled.
  910  00001964          	L68_LF2:
  911  00001964  23bdfff0	addi	r29,r29,#-16
  912  00001968  3c080000	lhi	r8,((LC2_LF2)>>16)&0xffff
  913  0000196c  2508b060	addui	r8,r8,(LC2_LF2)&0xffff
  914  00001970  afa80000	sw	(r29),r8
  915  00001974  afa40004	sw	4(r29),r4
  916  00001978  50610004	slli	r1,r3,#0x4
  917  0000197c  00230820	add	r1,r1,r3
  918  00001980  50210002	slli	r1,r1,#0x2
  919  00001984  00230822	sub	r1,r1,r3
  920  00001988  50210002	slli	r1,r1,#0x2
  921  0000198c  3c080000	lhi	r8,((_openfiles_LF2)>>16)&0xffff
  922  00001990  2508b110	addui	r8,r8,(_openfiles_LF2)&0xffff
  923  00001994  00280820	add	r1,r1,r8
  924  00001998  8c210000	lw	r1,(r1)
  925  0000199c  afa10008	sw	8(r29),r1
  926  000019a0  0c0089a4	jal	_printf
  927  000019a4  54000000	nop; not filled.
  928  000019a8  23bd0010	addi	r29,r29,#16
  929  000019ac          	L67_LF2:
  930  000019ac  23bdfff0	addi	r29,r29,#-16
  931  000019b0  50610004	slli	r1,r3,#0x4
  932  000019b4  00230820	add	r1,r1,r3
  933  000019b8  50210002	slli	r1,r1,#0x2
  934  000019bc  00230822	sub	r1,r1,r3
  935  000019c0  50260002	slli	r6,r1,#0x2
  936  000019c4  3c080000	lhi	r8,((_openfiles_LF2)>>16)&0xffff
  937  000019c8  2508b110	addui	r8,r8,(_openfiles_LF2)&0xffff
  938  000019cc  00c83820	add	r7,r6,r8
  939  000019d0  8ce20000	lw	r2,(r7)
  940  000019d4  50410001	slli	r1,r2,#0x1
  941  000019d8  00220820	add	r1,r1,r2
  942  000019dc  50210003	slli	r1,r1,#0x3
  943  000019e0  3c080000	lhi	r8,((_fs_LF2)>>16)&0xffff
  944  000019e4  2508b0e0	addui	r8,r8,(_fs_LF2)&0xffff
  945  000019e8  00280820	add	r1,r1,r8
  946  000019ec  afa30000	sw	(r29),r3
  947  000019f0  afa40004	sw	4(r29),r4
  948  000019f4  afa50008	sw	8(r29),r5
  949  000019f8  8c210000	lw	r1,(r1)
  950  000019fc  4c200000	jalr	r1
  951  00001a00  54000000	nop; not filled.
  952  00001a04  00011020	add	r2,r0,r1
  953  00001a08  23bd0010	addi	r29,r29,#16
  954  00001a0c  68410000	slti	r1,r2,#0
  955  00001a10  10200024	beqz	r1,L69_LF2
  956  00001a14  54000000	nop; not filled.
  957  00001a18  3c080000	lhi	r8,((_openfiles_LF2)>>16)&0xffff
  958  00001a1c  2508b110	addui	r8,r8,(_openfiles_LF2)&0xffff
  959  00001a20  00c80820	add	r1,r6,r8
  960  00001a24  20080000	addi	r8,r0,#0
  961  00001a28  ac280004	sw	4(r1),r8
  962  00001a2c  00020820	add	r1,r0,r2
  963  00001a30  08000090	j	L73_LF2
  964  00001a34  54000000	nop; not filled.
  965  00001a38          	L69_LF2:
  966  00001a38  23bdfff8	addi	r29,r29,#-8
  967  00001a3c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
  968  00001a40  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
  969  00001a44  afa20000	sw	(r29),r2
  970  00001a48  20080066	addi	r8,r0,#102
  971  00001a4c  afa80004	sw	4(r29),r8
  972  00001a50  0c0023c4	jal	_dindex
  973  00001a54  54000000	nop; not filled.
  974  00001a58  23bd0008	addi	r29,r29,#8
  975  00001a5c  64210000	snei	r1,r1,#0
  976  00001a60  1420002c	bnez	r1,L72_LF2
  977  00001a64  54000000	nop; not filled.
  978  00001a68  23bdfff8	addi	r29,r29,#-8
  979  00001a6c  afa20000	sw	(r29),r2
  980  00001a70  2008002b	addi	r8,r0,#43
  981  00001a74  afa80004	sw	4(r29),r8
  982  00001a78  0c00239c	jal	_dindex
  983  00001a7c  54000000	nop; not filled.
  984  00001a80  23bd0008	addi	r29,r29,#8
  985  00001a84  64210000	snei	r1,r1,#0
  986  00001a88  10200034	beqz	r1,L71_LF2
  987  00001a8c  54000000	nop; not filled.
  988  00001a90          	L72_LF2:
  989  00001a90  23bdffe8	addi	r29,r29,#-24
  990  00001a94  3c080000	lhi	r8,((LC3_LF2)>>16)&0xffff
  991  00001a98  2508b084	addui	r8,r8,(LC3_LF2)&0xffff
  992  00001a9c  afa80000	sw	(r29),r8
  993  00001aa0  afa40004	sw	4(r29),r4
  994  00001aa4  8ce70000	lw	r7,(r7)
  995  00001aa8  afa70008	sw	8(r29),r7
  996  00001aac  afa5000c	sw	12(r29),r5
  997  00001ab0  afa30010	sw	16(r29),r3
  998  00001ab4  0c008890	jal	_printf
  999  00001ab8  54000000	nop; not filled.
 1000  00001abc  23bd0018	addi	r29,r29,#24
 1001  00001ac0          	L71_LF2:
 1002  00001ac0  00030820	add	r1,r0,r3
 1003  00001ac4          	L73_LF2:
 1004  00001ac4  8fa20000	lw	r2,0(r29)
 1005  00001ac8  8fa30004	lw	r3,4(r29)
 1006  00001acc  8fa40008	lw	r4,8(r29)
 1007  00001ad0  8fa5000c	lw	r5,12(r29)
 1008  00001ad4  8fa60010	lw	r6,16(r29)
 1009  00001ad8  8fa70014	lw	r7,20(r29)
 1010  00001adc  8fa80018	lw	r8,24(r29)
 1011  00001ae0  8fdffff8	lw	r31,-8(r30)
 1012  00001ae4  001ee820	add	r29,r0,r30
 1013  00001ae8  8fdefffc	lw	r30,-4(r30)
 1014  00001aec  4be00000	jr	r31
 1015  00001af0  54000000	nop
 1016  00001af4          	.endproc _FsOpen
 1017  00001af4          	.align 2
 1018  00001af4          	.proc _FsClose
 1019  00001af4          	.global _FsClose
 1020  00001af4          	_FsClose:
 1021                      ;  Function 'FsClose'; 0 bytes of locals, 3 regs to save.
 1022  00001af4  afbefffc	sw	-4(r29),r30; push fp
 1023  00001af8  001df020	add	r30,r0,r29; fp = sp
 1024  00001afc  afbffff8	sw	-8(r29),r31; push ret addr
 1025  00001b00  2fbd0018	subui	r29,r29,#24; alloc local storage
 1026  00001b04  afa20000	sw	0(r29),r2
 1027  00001b08  afa30004	sw	4(r29),r3
 1028  00001b0c  afa40008	sw	8(r29),r4
 1029  00001b10  8fdf0000	lw	r31,(r30)
 1030  00001b14  20020000	addi	r2,r0,#0
 1031  00001b18  23e1ffff	addi	r1,r31,#-1
 1032  00001b1c  7021001e	sleui	r1,r1,#30
 1033  00001b20  10200038	beqz	r1,L84_LF2
 1034  00001b24  54000000	nop; not filled.
 1035  00001b28  53e10004	slli	r1,r31,#0x4
 1036  00001b2c  003f0820	add	r1,r1,r31
 1037  00001b30  50210002	slli	r1,r1,#0x2
 1038  00001b34  003f0822	sub	r1,r1,r31
 1039  00001b38  50210002	slli	r1,r1,#0x2
 1040  00001b3c  3c040000	lhi	r4,((_openfiles_LF2)>>16)&0xffff
 1041  00001b40  2484b110	addui	r4,r4,(_openfiles_LF2)&0xffff
 1042  00001b44  00240820	add	r1,r1,r4
 1043  00001b48  8c210004	lw	r1,4(r1)
 1044  00001b4c  64210000	snei	r1,r1,#0
 1045  00001b50  10200008	beqz	r1,L84_LF2
 1046  00001b54  54000000	nop; not filled.
 1047  00001b58  20020001	addi	r2,r0,#1
 1048  00001b5c          	L84_LF2:
 1049  00001b5c  64410000	snei	r1,r2,#0
 1050  00001b60  10200074	beqz	r1,L82_LF2
 1051  00001b64  54000000	nop; not filled.
 1052  00001b68  23bdfff8	addi	r29,r29,#-8
 1053  00001b6c  53e10004	slli	r1,r31,#0x4
 1054  00001b70  003f0820	add	r1,r1,r31
 1055  00001b74  50210002	slli	r1,r1,#0x2
 1056  00001b78  003f0822	sub	r1,r1,r31
 1057  00001b7c  50230002	slli	r3,r1,#0x2
 1058  00001b80  3c040000	lhi	r4,((_openfiles_LF2)>>16)&0xffff
 1059  00001b84  2484b110	addui	r4,r4,(_openfiles_LF2)&0xffff
 1060  00001b88  00640820	add	r1,r3,r4
 1061  00001b8c  8c220000	lw	r2,(r1)
 1062  00001b90  50410001	slli	r1,r2,#0x1
 1063  00001b94  00220820	add	r1,r1,r2
 1064  00001b98  50210003	slli	r1,r1,#0x3
 1065  00001b9c  3c040000	lhi	r4,((_fs_LF2)>>16)&0xffff
 1066  00001ba0  2484b0e0	addui	r4,r4,(_fs_LF2)&0xffff
 1067  00001ba4  00240820	add	r1,r1,r4
 1068  00001ba8  afbf0000	sw	(r29),r31
 1069  00001bac  8c210010	lw	r1,16(r1)
 1070  00001bb0  4c200000	jalr	r1
 1071  00001bb4  54000000	nop; not filled.
 1072  00001bb8  23bd0008	addi	r29,r29,#8
 1073  00001bbc  3c040000	lhi	r4,((_openfiles_LF2)>>16)&0xffff
 1074  00001bc0  2484b110	addui	r4,r4,(_openfiles_LF2)&0xffff
 1075  00001bc4  00641020	add	r2,r3,r4
 1076  00001bc8  20040000	addi	r4,r0,#0
 1077  00001bcc  ac440004	sw	4(r2),r4
 1078  00001bd0  08000008	j	L86_LF2
 1079  00001bd4  54000000	nop; not filled.
 1080  00001bd8          	L82_LF2:
 1081  00001bd8  2001ffff	addi	r1,r0,#-1
 1082  00001bdc          	L86_LF2:
 1083  00001bdc  8fa20000	lw	r2,0(r29)
 1084  00001be0  8fa30004	lw	r3,4(r29)
 1085  00001be4  8fa40008	lw	r4,8(r29)
 1086  00001be8  8fdffff8	lw	r31,-8(r30)
 1087  00001bec  001ee820	add	r29,r0,r30
 1088  00001bf0  8fdefffc	lw	r30,-4(r30)
 1089  00001bf4  4be00000	jr	r31
 1090  00001bf8  54000000	nop
 1091  00001bfc          	.endproc _FsClose
 1092  00001bfc          	.align 2
 1093  00001bfc          	.proc _FsRead
 1094  00001bfc          	.global _FsRead
 1095  00001bfc          	_FsRead:
 1096                      ;  Function 'FsRead'; 0 bytes of locals, 2 regs to save.
 1097  00001bfc  afbefffc	sw	-4(r29),r30; push fp
 1098  00001c00  001df020	add	r30,r0,r29; fp = sp
 1099  00001c04  afbffff8	sw	-8(r29),r31; push ret addr
 1100  00001c08  2fbd0010	subui	r29,r29,#16; alloc local storage
 1101  00001c0c  afa20000	sw	0(r29),r2
 1102  00001c10  afa30004	sw	4(r29),r3
 1103  00001c14  8fdf0000	lw	r31,(r30)
 1104  00001c18  20020000	addi	r2,r0,#0
 1105  00001c1c  23e1ffff	addi	r1,r31,#-1
 1106  00001c20  7021001e	sleui	r1,r1,#30
 1107  00001c24  10200038	beqz	r1,L94_LF2
 1108  00001c28  54000000	nop; not filled.
 1109  00001c2c  53e10004	slli	r1,r31,#0x4
 1110  00001c30  003f0820	add	r1,r1,r31
 1111  00001c34  50210002	slli	r1,r1,#0x2
 1112  00001c38  003f0822	sub	r1,r1,r31
 1113  00001c3c  50210002	slli	r1,r1,#0x2
 1114  00001c40  3c030000	lhi	r3,((_openfiles_LF2)>>16)&0xffff
 1115  00001c44  2463b110	addui	r3,r3,(_openfiles_LF2)&0xffff
 1116  00001c48  00230820	add	r1,r1,r3
 1117  00001c4c  8c210004	lw	r1,4(r1)
 1118  00001c50  64210000	snei	r1,r1,#0
 1119  00001c54  10200008	beqz	r1,L94_LF2
 1120  00001c58  54000000	nop; not filled.
 1121  00001c5c  20020001	addi	r2,r0,#1
 1122  00001c60          	L94_LF2:
 1123  00001c60  64410000	snei	r1,r2,#0
 1124  00001c64  10200070	beqz	r1,L92_LF2
 1125  00001c68  54000000	nop; not filled.
 1126  00001c6c  23bdfff0	addi	r29,r29,#-16
 1127  00001c70  53e10004	slli	r1,r31,#0x4
 1128  00001c74  003f0820	add	r1,r1,r31
 1129  00001c78  50210002	slli	r1,r1,#0x2
 1130  00001c7c  003f0822	sub	r1,r1,r31
 1131  00001c80  50210002	slli	r1,r1,#0x2
 1132  00001c84  3c030000	lhi	r3,((_openfiles_LF2)>>16)&0xffff
 1133  00001c88  2463b110	addui	r3,r3,(_openfiles_LF2)&0xffff
 1134  00001c8c  00230820	add	r1,r1,r3
 1135  00001c90  8c220000	lw	r2,(r1)
 1136  00001c94  50410001	slli	r1,r2,#0x1
 1137  00001c98  00220820	add	r1,r1,r2
 1138  00001c9c  50210003	slli	r1,r1,#0x3
 1139  00001ca0  3c030000	lhi	r3,((_fs_LF2)>>16)&0xffff
 1140  00001ca4  2463b0e0	addui	r3,r3,(_fs_LF2)&0xffff
 1141  00001ca8  00230820	add	r1,r1,r3
 1142  00001cac  afbf0000	sw	(r29),r31
 1143  00001cb0  8fc30004	lw	r3,4(r30)
 1144  00001cb4  afa30004	sw	4(r29),r3
 1145  00001cb8  8fc30008	lw	r3,8(r30)
 1146  00001cbc  afa30008	sw	8(r29),r3
 1147  00001cc0  8c210004	lw	r1,4(r1)
 1148  00001cc4  4c200000	jalr	r1
 1149  00001cc8  54000000	nop; not filled.
 1150  00001ccc  23bd0010	addi	r29,r29,#16
 1151  00001cd0  08000008	j	L91_LF2
 1152  00001cd4  54000000	nop; not filled.
 1153  00001cd8          	L92_LF2:
 1154  00001cd8  2001ffff	addi	r1,r0,#-1
 1155  00001cdc          	L91_LF2:
 1156  00001cdc  8fa20000	lw	r2,0(r29)
 1157  00001ce0  8fa30004	lw	r3,4(r29)
 1158  00001ce4  8fdffff8	lw	r31,-8(r30)
 1159  00001ce8  001ee820	add	r29,r0,r30
 1160  00001cec  8fdefffc	lw	r30,-4(r30)
 1161  00001cf0  4be00000	jr	r31
 1162  00001cf4  54000000	nop
 1163  00001cf8          	.endproc _FsRead
 1164  00001cf8          	.align 2
 1165  00001cf8          	.proc _FsWrite
 1166  00001cf8          	.global _FsWrite
 1167  00001cf8          	_FsWrite:
 1168                      ;  Function 'FsWrite'; 0 bytes of locals, 2 regs to save.
 1169  00001cf8  afbefffc	sw	-4(r29),r30; push fp
 1170  00001cfc  001df020	add	r30,r0,r29; fp = sp
 1171  00001d00  afbffff8	sw	-8(r29),r31; push ret addr
 1172  00001d04  2fbd0010	subui	r29,r29,#16; alloc local storage
 1173  00001d08  afa20000	sw	0(r29),r2
 1174  00001d0c  afa30004	sw	4(r29),r3
 1175  00001d10  8fdf0000	lw	r31,(r30)
 1176  00001d14  20020000	addi	r2,r0,#0
 1177  00001d18  23e1ffff	addi	r1,r31,#-1
 1178  00001d1c  7021001e	sleui	r1,r1,#30
 1179  00001d20  10200038	beqz	r1,L103_LF2
 1180  00001d24  54000000	nop; not filled.
 1181  00001d28  53e10004	slli	r1,r31,#0x4
 1182  00001d2c  003f0820	add	r1,r1,r31
 1183  00001d30  50210002	slli	r1,r1,#0x2
 1184  00001d34  003f0822	sub	r1,r1,r31
 1185  00001d38  50210002	slli	r1,r1,#0x2
 1186  00001d3c  3c030000	lhi	r3,((_openfiles_LF2)>>16)&0xffff
 1187  00001d40  2463b110	addui	r3,r3,(_openfiles_LF2)&0xffff
 1188  00001d44  00230820	add	r1,r1,r3
 1189  00001d48  8c210004	lw	r1,4(r1)
 1190  00001d4c  64210000	snei	r1,r1,#0
 1191  00001d50  10200008	beqz	r1,L103_LF2
 1192  00001d54  54000000	nop; not filled.
 1193  00001d58  20020001	addi	r2,r0,#1
 1194  00001d5c          	L103_LF2:
 1195  00001d5c  64410000	snei	r1,r2,#0
 1196  00001d60  10200070	beqz	r1,L101_LF2
 1197  00001d64  54000000	nop; not filled.
 1198  00001d68  23bdfff0	addi	r29,r29,#-16
 1199  00001d6c  53e10004	slli	r1,r31,#0x4
 1200  00001d70  003f0820	add	r1,r1,r31
 1201  00001d74  50210002	slli	r1,r1,#0x2
 1202  00001d78  003f0822	sub	r1,r1,r31
 1203  00001d7c  50210002	slli	r1,r1,#0x2
 1204  00001d80  3c030000	lhi	r3,((_openfiles_LF2)>>16)&0xffff
 1205  00001d84  2463b110	addui	r3,r3,(_openfiles_LF2)&0xffff
 1206  00001d88  00230820	add	r1,r1,r3
 1207  00001d8c  8c220000	lw	r2,(r1)
 1208  00001d90  50410001	slli	r1,r2,#0x1
 1209  00001d94  00220820	add	r1,r1,r2
 1210  00001d98  50210003	slli	r1,r1,#0x3
 1211  00001d9c  3c030000	lhi	r3,((_fs_LF2)>>16)&0xffff
 1212  00001da0  2463b0e0	addui	r3,r3,(_fs_LF2)&0xffff
 1213  00001da4  00230820	add	r1,r1,r3
 1214  00001da8  afbf0000	sw	(r29),r31
 1215  00001dac  8fc30004	lw	r3,4(r30)
 1216  00001db0  afa30004	sw	4(r29),r3
 1217  00001db4  8fc30008	lw	r3,8(r30)
 1218  00001db8  afa30008	sw	8(r29),r3
 1219  00001dbc  8c210008	lw	r1,8(r1)
 1220  00001dc0  4c200000	jalr	r1
 1221  00001dc4  54000000	nop; not filled.
 1222  00001dc8  23bd0010	addi	r29,r29,#16
 1223  00001dcc  08000008	j	L100_LF2
 1224  00001dd0  54000000	nop; not filled.
 1225  00001dd4          	L101_LF2:
 1226  00001dd4  2001ffff	addi	r1,r0,#-1
 1227  00001dd8          	L100_LF2:
 1228  00001dd8  8fa20000	lw	r2,0(r29)
 1229  00001ddc  8fa30004	lw	r3,4(r29)
 1230  00001de0  8fdffff8	lw	r31,-8(r30)
 1231  00001de4  001ee820	add	r29,r0,r30
 1232  00001de8  8fdefffc	lw	r30,-4(r30)
 1233  00001dec  4be00000	jr	r31
 1234  00001df0  54000000	nop
 1235  00001df4          	.endproc _FsWrite
 1236  00001df4          	.align 2
 1237  00001df4          	.proc _FsSeek
 1238  00001df4          	.global _FsSeek
 1239  00001df4          	_FsSeek:
 1240                      ;  Function 'FsSeek'; 0 bytes of locals, 2 regs to save.
 1241  00001df4  afbefffc	sw	-4(r29),r30; push fp
 1242  00001df8  001df020	add	r30,r0,r29; fp = sp
 1243  00001dfc  afbffff8	sw	-8(r29),r31; push ret addr
 1244  00001e00  2fbd0010	subui	r29,r29,#16; alloc local storage
 1245  00001e04  afa20000	sw	0(r29),r2
 1246  00001e08  afa30004	sw	4(r29),r3
 1247  00001e0c  8fdf0000	lw	r31,(r30)
 1248  00001e10  20020000	addi	r2,r0,#0
 1249  00001e14  23e1ffff	addi	r1,r31,#-1
 1250  00001e18  7021001e	sleui	r1,r1,#30
 1251  00001e1c  10200038	beqz	r1,L112_LF2
 1252  00001e20  54000000	nop; not filled.
 1253  00001e24  53e10004	slli	r1,r31,#0x4
 1254  00001e28  003f0820	add	r1,r1,r31
 1255  00001e2c  50210002	slli	r1,r1,#0x2
 1256  00001e30  003f0822	sub	r1,r1,r31
 1257  00001e34  50210002	slli	r1,r1,#0x2
 1258  00001e38  3c030000	lhi	r3,((_openfiles_LF2)>>16)&0xffff
 1259  00001e3c  2463b110	addui	r3,r3,(_openfiles_LF2)&0xffff
 1260  00001e40  00230820	add	r1,r1,r3
 1261  00001e44  8c210004	lw	r1,4(r1)
 1262  00001e48  64210000	snei	r1,r1,#0
 1263  00001e4c  10200008	beqz	r1,L112_LF2
 1264  00001e50  54000000	nop; not filled.
 1265  00001e54  20020001	addi	r2,r0,#1
 1266  00001e58          	L112_LF2:
 1267  00001e58  64410000	snei	r1,r2,#0
 1268  00001e5c  10200070	beqz	r1,L110_LF2
 1269  00001e60  54000000	nop; not filled.
 1270  00001e64  23bdfff0	addi	r29,r29,#-16
 1271  00001e68  53e10004	slli	r1,r31,#0x4
 1272  00001e6c  003f0820	add	r1,r1,r31
 1273  00001e70  50210002	slli	r1,r1,#0x2
 1274  00001e74  003f0822	sub	r1,r1,r31
 1275  00001e78  50210002	slli	r1,r1,#0x2
 1276  00001e7c  3c030000	lhi	r3,((_openfiles_LF2)>>16)&0xffff
 1277  00001e80  2463b110	addui	r3,r3,(_openfiles_LF2)&0xffff
 1278  00001e84  00230820	add	r1,r1,r3
 1279  00001e88  8c220000	lw	r2,(r1)
 1280  00001e8c  50410001	slli	r1,r2,#0x1
 1281  00001e90  00220820	add	r1,r1,r2
 1282  00001e94  50210003	slli	r1,r1,#0x3
 1283  00001e98  3c030000	lhi	r3,((_fs_LF2)>>16)&0xffff
 1284  00001e9c  2463b0e0	addui	r3,r3,(_fs_LF2)&0xffff
 1285  00001ea0  00230820	add	r1,r1,r3
 1286  00001ea4  afbf0000	sw	(r29),r31
 1287  00001ea8  8fc30004	lw	r3,4(r30)
 1288  00001eac  afa30004	sw	4(r29),r3
 1289  00001eb0  8fc30008	lw	r3,8(r30)
 1290  00001eb4  afa30008	sw	8(r29),r3
 1291  00001eb8  8c21000c	lw	r1,12(r1)
 1292  00001ebc  4c200000	jalr	r1
 1293  00001ec0  54000000	nop; not filled.
 1294  00001ec4  23bd0010	addi	r29,r29,#16
 1295  00001ec8  08000008	j	L109_LF2
 1296  00001ecc  54000000	nop; not filled.
 1297  00001ed0          	L110_LF2:
 1298  00001ed0  2001ffff	addi	r1,r0,#-1
 1299  00001ed4          	L109_LF2:
 1300  00001ed4  8fa20000	lw	r2,0(r29)
 1301  00001ed8  8fa30004	lw	r3,4(r29)
 1302  00001edc  8fdffff8	lw	r31,-8(r30)
 1303  00001ee0  001ee820	add	r29,r0,r30
 1304  00001ee4  8fdefffc	lw	r30,-4(r30)
 1305  00001ee8  4be00000	jr	r31
 1306  00001eec  54000000	nop
 1307  00001ef0          	.endproc _FsSeek
 1308  00001ef0          	.align 2
 1309  00001ef0          	.proc _FsDelete
 1310  00001ef0          	.global _FsDelete
 1311  00001ef0          	_FsDelete:
 1312                      ;  Function 'FsDelete'; 0 bytes of locals, 2 regs to save.
 1313  00001ef0  afbefffc	sw	-4(r29),r30; push fp
 1314  00001ef4  001df020	add	r30,r0,r29; fp = sp
 1315  00001ef8  afbffff8	sw	-8(r29),r31; push ret addr
 1316  00001efc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1317  00001f00  afa20000	sw	0(r29),r2
 1318  00001f04  afa30004	sw	4(r29),r3
 1319  00001f08  8fc20000	lw	r2,(r30)
 1320  00001f0c  23bdfff0	addi	r29,r29,#-16
 1321  00001f10  afa20000	sw	(r29),r2
 1322  00001f14  3c010000	lhi	r1,((LC1_LF2)>>16)&0xffff
 1323  00001f18  2421b058	addui	r1,r1,(LC1_LF2)&0xffff
 1324  00001f1c  afa10004	sw	4(r29),r1
 1325  00001f20  20030004	addi	r3,r0,#4
 1326  00001f24  afa30008	sw	8(r29),r3
 1327  00001f28  0c001ba8	jal	_dstrncmp
 1328  00001f2c  54000000	nop; not filled.
 1329  00001f30  23bd0010	addi	r29,r29,#16
 1330  00001f34  64210000	snei	r1,r1,#0
 1331  00001f38  1420001c	bnez	r1,L118_LF2
 1332  00001f3c  54000000	nop; not filled.
 1333  00001f40  20420004	addi	r2,r2,#4
 1334  00001f44  23bdfff8	addi	r29,r29,#-8
 1335  00001f48  3c010000	lhi	r1,((_fs_LF2+44)>>16)&0xffff
 1336  00001f4c  2421b10c	addui	r1,r1,(_fs_LF2+44)&0xffff
 1337  00001f50  08000010	j	L120_LF2
 1338  00001f54  54000000	nop; not filled.
 1339  00001f58          	L118_LF2:
 1340  00001f58  23bdfff8	addi	r29,r29,#-8
 1341  00001f5c  3c010000	lhi	r1,((_fs_LF2+20)>>16)&0xffff
 1342  00001f60  2421b0f4	addui	r1,r1,(_fs_LF2+20)&0xffff
 1343  00001f64          	L120_LF2:
 1344  00001f64  afa20000	sw	(r29),r2
 1345  00001f68  8c210000	lw	r1,(r1)
 1346  00001f6c  4c200000	jalr	r1
 1347  00001f70  54000000	nop; not filled.
 1348  00001f74  23bd0008	addi	r29,r29,#8
 1349  00001f78  8fa20000	lw	r2,0(r29)
 1350  00001f7c  8fa30004	lw	r3,4(r29)
 1351  00001f80  8fdffff8	lw	r31,-8(r30)
 1352  00001f84  001ee820	add	r29,r0,r30
 1353  00001f88  8fdefffc	lw	r30,-4(r30)
 1354  00001f8c  4be00000	jr	r31
 1355  00001f90  54000000	nop
 1356  00001f94          	.endproc _FsDelete
 1357  00001f94          	.data
 1358  0000b0aa          	.align 2
 1359  0000b0ac          	LC4_LF2:
 1360  0000b0ac  41747465	.ascii "Attempting to open file %s into desc %d, mode %d.\n\000"
 1360  0000b0b0  6d707469	
 1360  0000b0b4  6e672074	
 1360  0000b0b8  6f206f70	
 1360  0000b0bc  656e2066	
 1360  0000b0c0  696c6520	
 1360  0000b0c4  25732069	
 1360  0000b0c8  6e746f20	
 1360  0000b0cc  64657363	
 1360  0000b0d0  2025642c	
 1360  0000b0d4  206d6f64	
 1360  0000b0d8  65202564	
 1360  0000b0dc  2e0a00  	
 1361  0000b0df          	.text
 1362  00001f94          	.align 2
 1363  00001f94          	.proc _FsUnixOpen
 1364  00001f94          	.global _FsUnixOpen
 1365  00001f94          	_FsUnixOpen:
 1366                      ;  Function 'FsUnixOpen'; 0 bytes of locals, 5 regs to save.
 1367  00001f94  afbefffc	sw	-4(r29),r30; push fp
 1368  00001f98  001df020	add	r30,r0,r29; fp = sp
 1369  00001f9c  afbffff8	sw	-8(r29),r31; push ret addr
 1370  00001fa0  2fbd0020	subui	r29,r29,#32; alloc local storage
 1371  00001fa4  afa20000	sw	0(r29),r2
 1372  00001fa8  afa30004	sw	4(r29),r3
 1373  00001fac  afa40008	sw	8(r29),r4
 1374  00001fb0  afa5000c	sw	12(r29),r5
 1375  00001fb4  afa60010	sw	16(r29),r6
 1376  00001fb8  8fc40000	lw	r4,(r30)
 1377  00001fbc  8fc30004	lw	r3,4(r30)
 1378  00001fc0  8fc50008	lw	r5,8(r30)
 1379  00001fc4  23bdfff8	addi	r29,r29,#-8
 1380  00001fc8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 1381  00001fcc  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 1382  00001fd0  afa20000	sw	(r29),r2
 1383  00001fd4  20060066	addi	r6,r0,#102
 1384  00001fd8  afa60004	sw	4(r29),r6
 1385  00001fdc  0c001e38	jal	_dindex
 1386  00001fe0  54000000	nop; not filled.
 1387  00001fe4  23bd0008	addi	r29,r29,#8
 1388  00001fe8  64210000	snei	r1,r1,#0
 1389  00001fec  1420002c	bnez	r1,L127_LF2
 1390  00001ff0  54000000	nop; not filled.
 1391  00001ff4  23bdfff8	addi	r29,r29,#-8
 1392  00001ff8  afa20000	sw	(r29),r2
 1393  00001ffc  2006002b	addi	r6,r0,#43
 1394  00002000  afa60004	sw	4(r29),r6
 1395  00002004  0c001e10	jal	_dindex
 1396  00002008  54000000	nop; not filled.
 1397  0000200c  23bd0008	addi	r29,r29,#8
 1398  00002010  64210000	snei	r1,r1,#0
 1399  00002014  1020002c	beqz	r1,L126_LF2
 1400  00002018  54000000	nop; not filled.
 1401  0000201c          	L127_LF2:
 1402  0000201c  23bdfff0	addi	r29,r29,#-16
 1403  00002020  3c060000	lhi	r6,((LC4_LF2)>>16)&0xffff
 1404  00002024  24c6b0ac	addui	r6,r6,(LC4_LF2)&0xffff
 1405  00002028  afa60000	sw	(r29),r6
 1406  0000202c  afa30004	sw	4(r29),r3
 1407  00002030  afa40008	sw	8(r29),r4
 1408  00002034  afa5000c	sw	12(r29),r5
 1409  00002038  0c00830c	jal	_printf
 1410  0000203c  54000000	nop; not filled.
 1411  00002040  23bd0010	addi	r29,r29,#16
 1412  00002044          	L126_LF2:
 1413  00002044  23bdfff8	addi	r29,r29,#-8
 1414  00002048  afa30000	sw	(r29),r3
 1415  0000204c  afa50004	sw	4(r29),r5
 1416  00002050  0c008264	jal	_open
 1417  00002054  54000000	nop; not filled.
 1418  00002058  00011820	add	r3,r0,r1
 1419  0000205c  50810004	slli	r1,r4,#0x4
 1420  00002060  00240820	add	r1,r1,r4
 1421  00002064  50210002	slli	r1,r1,#0x2
 1422  00002068  00240822	sub	r1,r1,r4
 1423  0000206c  50210002	slli	r1,r1,#0x2
 1424  00002070  3c060000	lhi	r6,((_openfiles_LF2)>>16)&0xffff
 1425  00002074  24c6b110	addui	r6,r6,(_openfiles_LF2)&0xffff
 1426  00002078  00260820	add	r1,r1,r6
 1427  0000207c  ac230108	sw	264(r1),r3
 1428  00002080  23bd0008	addi	r29,r29,#8
 1429  00002084  68620000	slti	r2,r3,#0
 1430  00002088  00030820	add	r1,r0,r3
 1431  0000208c  14400008	bnez	r2,L128_LF2
 1432  00002090  54000000	nop; not filled.
 1433  00002094  20010001	addi	r1,r0,#1
 1434  00002098          	L128_LF2:
 1435  00002098  8fa20000	lw	r2,0(r29)
 1436  0000209c  8fa30004	lw	r3,4(r29)
 1437  000020a0  8fa40008	lw	r4,8(r29)
 1438  000020a4  8fa5000c	lw	r5,12(r29)
 1439  000020a8  8fa60010	lw	r6,16(r29)
 1440  000020ac  8fdffff8	lw	r31,-8(r30)
 1441  000020b0  001ee820	add	r29,r0,r30
 1442  000020b4  8fdefffc	lw	r30,-4(r30)
 1443  000020b8  4be00000	jr	r31
 1444  000020bc  54000000	nop
 1445  000020c0          	.endproc _FsUnixOpen
 1446  000020c0          	.align 2
 1447  000020c0          	.proc _FsUnixRead
 1448  000020c0          	.global _FsUnixRead
 1449  000020c0          	_FsUnixRead:
 1450                      ;  Function 'FsUnixRead'; 0 bytes of locals, 4 regs to save.
 1451  000020c0  afbefffc	sw	-4(r29),r30; push fp
 1452  000020c4  001df020	add	r30,r0,r29; fp = sp
 1453  000020c8  afbffff8	sw	-8(r29),r31; push ret addr
 1454  000020cc  2fbd0018	subui	r29,r29,#24; alloc local storage
 1455  000020d0  afa20000	sw	0(r29),r2
 1456  000020d4  afa30004	sw	4(r29),r3
 1457  000020d8  afa40008	sw	8(r29),r4
 1458  000020dc  afa5000c	sw	12(r29),r5
 1459  000020e0  8fc20000	lw	r2,(r30)
 1460  000020e4  8fc30004	lw	r3,4(r30)
 1461  000020e8  8fc40008	lw	r4,8(r30)
 1462  000020ec  23bdfff0	addi	r29,r29,#-16
 1463  000020f0  50410004	slli	r1,r2,#0x4
 1464  000020f4  00220820	add	r1,r1,r2
 1465  000020f8  50210002	slli	r1,r1,#0x2
 1466  000020fc  00220822	sub	r1,r1,r2
 1467  00002100  50210002	slli	r1,r1,#0x2
 1468  00002104  3c050000	lhi	r5,((_openfiles_LF2)>>16)&0xffff
 1469  00002108  24a5b110	addui	r5,r5,(_openfiles_LF2)&0xffff
 1470  0000210c  00250820	add	r1,r1,r5
 1471  00002110  8c210108	lw	r1,264(r1)
 1472  00002114  afa10000	sw	(r29),r1
 1473  00002118  afa30004	sw	4(r29),r3
 1474  0000211c  afa40008	sw	8(r29),r4
 1475  00002120  0c0081ac	jal	_read
 1476  00002124  54000000	nop; not filled.
 1477  00002128  23bd0010	addi	r29,r29,#16
 1478  0000212c  8fa20000	lw	r2,0(r29)
 1479  00002130  8fa30004	lw	r3,4(r29)
 1480  00002134  8fa40008	lw	r4,8(r29)
 1481  00002138  8fa5000c	lw	r5,12(r29)
 1482  0000213c  8fdffff8	lw	r31,-8(r30)
 1483  00002140  001ee820	add	r29,r0,r30
 1484  00002144  8fdefffc	lw	r30,-4(r30)
 1485  00002148  4be00000	jr	r31
 1486  0000214c  54000000	nop
 1487  00002150          	.endproc _FsUnixRead
 1488  00002150          	.align 2
 1489  00002150          	.proc _FsUnixWrite
 1490  00002150          	.global _FsUnixWrite
 1491  00002150          	_FsUnixWrite:
 1492                      ;  Function 'FsUnixWrite'; 0 bytes of locals, 4 regs to save.
 1493  00002150  afbefffc	sw	-4(r29),r30; push fp
 1494  00002154  001df020	add	r30,r0,r29; fp = sp
 1495  00002158  afbffff8	sw	-8(r29),r31; push ret addr
 1496  0000215c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1497  00002160  afa20000	sw	0(r29),r2
 1498  00002164  afa30004	sw	4(r29),r3
 1499  00002168  afa40008	sw	8(r29),r4
 1500  0000216c  afa5000c	sw	12(r29),r5
 1501  00002170  8fc20000	lw	r2,(r30)
 1502  00002174  8fc30004	lw	r3,4(r30)
 1503  00002178  8fc40008	lw	r4,8(r30)
 1504  0000217c  23bdfff0	addi	r29,r29,#-16
 1505  00002180  50410004	slli	r1,r2,#0x4
 1506  00002184  00220820	add	r1,r1,r2
 1507  00002188  50210002	slli	r1,r1,#0x2
 1508  0000218c  00220822	sub	r1,r1,r2
 1509  00002190  50210002	slli	r1,r1,#0x2
 1510  00002194  3c050000	lhi	r5,((_openfiles_LF2)>>16)&0xffff
 1511  00002198  24a5b110	addui	r5,r5,(_openfiles_LF2)&0xffff
 1512  0000219c  00250820	add	r1,r1,r5
 1513  000021a0  8c210108	lw	r1,264(r1)
 1514  000021a4  afa10000	sw	(r29),r1
 1515  000021a8  afa30004	sw	4(r29),r3
 1516  000021ac  afa40008	sw	8(r29),r4
 1517  000021b0  0c008128	jal	_write
 1518  000021b4  54000000	nop; not filled.
 1519  000021b8  23bd0010	addi	r29,r29,#16
 1520  000021bc  8fa20000	lw	r2,0(r29)
 1521  000021c0  8fa30004	lw	r3,4(r29)
 1522  000021c4  8fa40008	lw	r4,8(r29)
 1523  000021c8  8fa5000c	lw	r5,12(r29)
 1524  000021cc  8fdffff8	lw	r31,-8(r30)
 1525  000021d0  001ee820	add	r29,r0,r30
 1526  000021d4  8fdefffc	lw	r30,-4(r30)
 1527  000021d8  4be00000	jr	r31
 1528  000021dc  54000000	nop
 1529  000021e0          	.endproc _FsUnixWrite
 1530  000021e0          	.align 2
 1531  000021e0          	.proc _FsUnixSeek
 1532  000021e0          	.global _FsUnixSeek
 1533  000021e0          	_FsUnixSeek:
 1534                      ;  Function 'FsUnixSeek'; 0 bytes of locals, 4 regs to save.
 1535  000021e0  afbefffc	sw	-4(r29),r30; push fp
 1536  000021e4  001df020	add	r30,r0,r29; fp = sp
 1537  000021e8  afbffff8	sw	-8(r29),r31; push ret addr
 1538  000021ec  2fbd0018	subui	r29,r29,#24; alloc local storage
 1539  000021f0  afa20000	sw	0(r29),r2
 1540  000021f4  afa30004	sw	4(r29),r3
 1541  000021f8  afa40008	sw	8(r29),r4
 1542  000021fc  afa5000c	sw	12(r29),r5
 1543  00002200  8fc20000	lw	r2,(r30)
 1544  00002204  8fc30004	lw	r3,4(r30)
 1545  00002208  8fc40008	lw	r4,8(r30)
 1546  0000220c  23bdfff0	addi	r29,r29,#-16
 1547  00002210  50410004	slli	r1,r2,#0x4
 1548  00002214  00220820	add	r1,r1,r2
 1549  00002218  50210002	slli	r1,r1,#0x2
 1550  0000221c  00220822	sub	r1,r1,r2
 1551  00002220  50210002	slli	r1,r1,#0x2
 1552  00002224  3c050000	lhi	r5,((_openfiles_LF2)>>16)&0xffff
 1553  00002228  24a5b110	addui	r5,r5,(_openfiles_LF2)&0xffff
 1554  0000222c  00250820	add	r1,r1,r5
 1555  00002230  8c210108	lw	r1,264(r1)
 1556  00002234  afa10000	sw	(r29),r1
 1557  00002238  afa30004	sw	4(r29),r3
 1558  0000223c  afa40008	sw	8(r29),r4
 1559  00002240  0c0080a4	jal	_lseek
 1560  00002244  54000000	nop; not filled.
 1561  00002248  23bd0010	addi	r29,r29,#16
 1562  0000224c  8fa20000	lw	r2,0(r29)
 1563  00002250  8fa30004	lw	r3,4(r29)
 1564  00002254  8fa40008	lw	r4,8(r29)
 1565  00002258  8fa5000c	lw	r5,12(r29)
 1566  0000225c  8fdffff8	lw	r31,-8(r30)
 1567  00002260  001ee820	add	r29,r0,r30
 1568  00002264  8fdefffc	lw	r30,-4(r30)
 1569  00002268  4be00000	jr	r31
 1570  0000226c  54000000	nop
 1571  00002270          	.endproc _FsUnixSeek
 1572  00002270          	.align 2
 1573  00002270          	.proc _FsUnixClose
 1574  00002270          	.global _FsUnixClose
 1575  00002270          	_FsUnixClose:
 1576                      ;  Function 'FsUnixClose'; 0 bytes of locals, 2 regs to save.
 1577  00002270  afbefffc	sw	-4(r29),r30; push fp
 1578  00002274  001df020	add	r30,r0,r29; fp = sp
 1579  00002278  afbffff8	sw	-8(r29),r31; push ret addr
 1580  0000227c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1581  00002280  afa20000	sw	0(r29),r2
 1582  00002284  afa30004	sw	4(r29),r3
 1583  00002288  8fc20000	lw	r2,(r30)
 1584  0000228c  23bdfff8	addi	r29,r29,#-8
 1585  00002290  50410004	slli	r1,r2,#0x4
 1586  00002294  00220820	add	r1,r1,r2
 1587  00002298  50210002	slli	r1,r1,#0x2
 1588  0000229c  00220822	sub	r1,r1,r2
 1589  000022a0  50210002	slli	r1,r1,#0x2
 1590  000022a4  3c030000	lhi	r3,((_openfiles_LF2)>>16)&0xffff
 1591  000022a8  2463b110	addui	r3,r3,(_openfiles_LF2)&0xffff
 1592  000022ac  00230820	add	r1,r1,r3
 1593  000022b0  8c210108	lw	r1,264(r1)
 1594  000022b4  afa10000	sw	(r29),r1
 1595  000022b8  0c008008	jal	_close
 1596  000022bc  54000000	nop; not filled.
 1597  000022c0  23bd0008	addi	r29,r29,#8
 1598  000022c4  8fa20000	lw	r2,0(r29)
 1599  000022c8  8fa30004	lw	r3,4(r29)
 1600  000022cc  8fdffff8	lw	r31,-8(r30)
 1601  000022d0  001ee820	add	r29,r0,r30
 1602  000022d4  8fdefffc	lw	r30,-4(r30)
 1603  000022d8  4be00000	jr	r31
 1604  000022dc  54000000	nop
 1605  000022e0          	.endproc _FsUnixClose
 1606  000022e0          	.align 2
 1607  000022e0          	.proc _FsUnixDelete
 1608  000022e0          	.global _FsUnixDelete
 1609  000022e0          	_FsUnixDelete:
 1610                      ;  Function 'FsUnixDelete'; 0 bytes of locals, 0 regs to save.
 1611  000022e0  afbefffc	sw	-4(r29),r30; push fp
 1612  000022e4  001df020	add	r30,r0,r29; fp = sp
 1613  000022e8  afbffff8	sw	-8(r29),r31; push ret addr
 1614  000022ec  2fbd0008	subui	r29,r29,#8; alloc local storage
 1615  000022f0  2001ffff	addi	r1,r0,#-1
 1616  000022f4  8fdffff8	lw	r31,-8(r30)
 1617  000022f8  001ee820	add	r29,r0,r30
 1618  000022fc  8fdefffc	lw	r30,-4(r30)
 1619  00002300  4be00000	jr	r31
 1620  00002304  54000000	nop
 1621  00002308          	.endproc _FsUnixDelete
 1622  00002308          	.align 2
 1623  00002308          	.proc _FsDlxIo
 1624  00002308          	.global _FsDlxIo
 1625  00002308          	_FsDlxIo:
 1626                      ;  Function 'FsDlxIo'; 0 bytes of locals, 0 regs to save.
 1627  00002308  afbefffc	sw	-4(r29),r30; push fp
 1628  0000230c  001df020	add	r30,r0,r29; fp = sp
 1629  00002310  afbffff8	sw	-8(r29),r31; push ret addr
 1630  00002314  2fbd0008	subui	r29,r29,#8; alloc local storage
 1631  00002318  20010001	addi	r1,r0,#1
 1632  0000231c  8fdffff8	lw	r31,-8(r30)
 1633  00002320  001ee820	add	r29,r0,r30
 1634  00002324  8fdefffc	lw	r30,-4(r30)
 1635  00002328  4be00000	jr	r31
 1636  0000232c  54000000	nop
 1637  00002330          	.endproc _FsDlxIo
 1638  00002330          	.align 2
 1639  00002330          	.proc _FsDlxRead
 1640  00002330          	.global _FsDlxRead
 1641  00002330          	_FsDlxRead:
 1642                      ;  Function 'FsDlxRead'; 0 bytes of locals, 0 regs to save.
 1643  00002330  afbefffc	sw	-4(r29),r30; push fp
 1644  00002334  001df020	add	r30,r0,r29; fp = sp
 1645  00002338  afbffff8	sw	-8(r29),r31; push ret addr
 1646  0000233c  2fbd0008	subui	r29,r29,#8; alloc local storage
 1647  00002340  20010001	addi	r1,r0,#1
 1648  00002344  8fdffff8	lw	r31,-8(r30)
 1649  00002348  001ee820	add	r29,r0,r30
 1650  0000234c  8fdefffc	lw	r30,-4(r30)
 1651  00002350  4be00000	jr	r31
 1652  00002354  54000000	nop
 1653  00002358          	.endproc _FsDlxRead
 1654  00002358          	.align 2
 1655  00002358          	.proc _FsDlxWrite
 1656  00002358          	.global _FsDlxWrite
 1657  00002358          	_FsDlxWrite:
 1658                      ;  Function 'FsDlxWrite'; 0 bytes of locals, 0 regs to save.
 1659  00002358  afbefffc	sw	-4(r29),r30; push fp
 1660  0000235c  001df020	add	r30,r0,r29; fp = sp
 1661  00002360  afbffff8	sw	-8(r29),r31; push ret addr
 1662  00002364  2fbd0008	subui	r29,r29,#8; alloc local storage
 1663  00002368  20010001	addi	r1,r0,#1
 1664  0000236c  8fdffff8	lw	r31,-8(r30)
 1665  00002370  001ee820	add	r29,r0,r30
 1666  00002374  8fdefffc	lw	r30,-4(r30)
 1667  00002378  4be00000	jr	r31
 1668  0000237c  54000000	nop
 1669  00002380          	.endproc _FsDlxWrite
 1670  00002380          	.align 2
 1671  00002380          	.proc _FsDlxOpen
 1672  00002380          	.global _FsDlxOpen
 1673  00002380          	_FsDlxOpen:
 1674                      ;  Function 'FsDlxOpen'; 0 bytes of locals, 1 regs to save.
 1675  00002380  afbefffc	sw	-4(r29),r30; push fp
 1676  00002384  001df020	add	r30,r0,r29; fp = sp
 1677  00002388  afbffff8	sw	-8(r29),r31; push ret addr
 1678  0000238c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1679  00002390  afa20000	sw	0(r29),r2
 1680  00002394  8fc10000	lw	r1,(r30)
 1681  00002398  50220004	slli	r2,r1,#0x4
 1682  0000239c  00411020	add	r2,r2,r1
 1683  000023a0  50420002	slli	r2,r2,#0x2
 1684  000023a4  00410822	sub	r1,r2,r1
 1685  000023a8  50210002	slli	r1,r1,#0x2
 1686  000023ac  3c1f0000	lhi	r31,((_openfiles_LF2)>>16)&0xffff
 1687  000023b0  27ffb110	addui	r31,r31,(_openfiles_LF2)&0xffff
 1688  000023b4  003f0820	add	r1,r1,r31
 1689  000023b8  201f0000	addi	r31,r0,#0
 1690  000023bc  ac3f0108	sw	264(r1),r31
 1691  000023c0  20010001	addi	r1,r0,#1
 1692  000023c4  8fa20000	lw	r2,0(r29)
 1693  000023c8  8fdffff8	lw	r31,-8(r30)
 1694  000023cc  001ee820	add	r29,r0,r30
 1695  000023d0  8fdefffc	lw	r30,-4(r30)
 1696  000023d4  4be00000	jr	r31
 1697  000023d8  54000000	nop
 1698  000023dc          	.endproc _FsDlxOpen
 1699  000023dc          	.align 2
 1700  000023dc          	.proc _FsDlxSeek
 1701  000023dc          	.global _FsDlxSeek
 1702  000023dc          	_FsDlxSeek:
 1703                      ;  Function 'FsDlxSeek'; 0 bytes of locals, 1 regs to save.
 1704  000023dc  afbefffc	sw	-4(r29),r30; push fp
 1705  000023e0  001df020	add	r30,r0,r29; fp = sp
 1706  000023e4  afbffff8	sw	-8(r29),r31; push ret addr
 1707  000023e8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1708  000023ec  afa20000	sw	0(r29),r2
 1709  000023f0  8fc10000	lw	r1,(r30)
 1710  000023f4  50220004	slli	r2,r1,#0x4
 1711  000023f8  00411020	add	r2,r2,r1
 1712  000023fc  50420002	slli	r2,r2,#0x2
 1713  00002400  00410822	sub	r1,r2,r1
 1714  00002404  50210002	slli	r1,r1,#0x2
 1715  00002408  3c1f0000	lhi	r31,((_openfiles_LF2)>>16)&0xffff
 1716  0000240c  27ffb110	addui	r31,r31,(_openfiles_LF2)&0xffff
 1717  00002410  003f0820	add	r1,r1,r31
 1718  00002414  8c210108	lw	r1,264(r1)
 1719  00002418  8fa20000	lw	r2,0(r29)
 1720  0000241c  8fdffff8	lw	r31,-8(r30)
 1721  00002420  001ee820	add	r29,r0,r30
 1722  00002424  8fdefffc	lw	r30,-4(r30)
 1723  00002428  4be00000	jr	r31
 1724  0000242c  54000000	nop
 1725  00002430          	.endproc _FsDlxSeek
 1726  00002430          	.align 2
 1727  00002430          	.proc _FsDlxClose
 1728  00002430          	.global _FsDlxClose
 1729  00002430          	_FsDlxClose:
 1730                      ;  Function 'FsDlxClose'; 0 bytes of locals, 0 regs to save.
 1731  00002430  afbefffc	sw	-4(r29),r30; push fp
 1732  00002434  001df020	add	r30,r0,r29; fp = sp
 1733  00002438  afbffff8	sw	-8(r29),r31; push ret addr
 1734  0000243c  2fbd0008	subui	r29,r29,#8; alloc local storage
 1735  00002440  20010001	addi	r1,r0,#1
 1736  00002444  8fdffff8	lw	r31,-8(r30)
 1737  00002448  001ee820	add	r29,r0,r30
 1738  0000244c  8fdefffc	lw	r30,-4(r30)
 1739  00002450  4be00000	jr	r31
 1740  00002454  54000000	nop
 1741  00002458          	.endproc _FsDlxClose
 1742  00002458          	.align 2
 1743  00002458          	.proc _FsDlxDelete
 1744  00002458          	.global _FsDlxDelete
 1745  00002458          	_FsDlxDelete:
 1746                      ;  Function 'FsDlxDelete'; 0 bytes of locals, 0 regs to save.
 1747  00002458  afbefffc	sw	-4(r29),r30; push fp
 1748  0000245c  001df020	add	r30,r0,r29; fp = sp
 1749  00002460  afbffff8	sw	-8(r29),r31; push ret addr
 1750  00002464  2fbd0008	subui	r29,r29,#8; alloc local storage
 1751  00002468  20010001	addi	r1,r0,#1
 1752  0000246c  8fdffff8	lw	r31,-8(r30)
 1753  00002470  001ee820	add	r29,r0,r30
 1754  00002474  8fdefffc	lw	r30,-4(r30)
 1755  00002478  4be00000	jr	r31
 1756  0000247c  54000000	nop
 1757  00002480          	.endproc _FsDlxDelete
 1758  00002480          	.align 2
 1759  00002480          	.proc _FsModuleInit
 1760  00002480          	.global _FsModuleInit
 1761  00002480          	_FsModuleInit:
 1762                      ;  Function 'FsModuleInit'; 0 bytes of locals, 2 regs to save.
 1763  00002480  afbefffc	sw	-4(r29),r30; push fp
 1764  00002484  001df020	add	r30,r0,r29; fp = sp
 1765  00002488  afbffff8	sw	-8(r29),r31; push ret addr
 1766  0000248c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1767  00002490  afa20000	sw	0(r29),r2
 1768  00002494  afa30004	sw	4(r29),r3
 1769  00002498  3c1f0000	lhi	r31,((_openfiles_LF2)>>16)&0xffff
 1770  0000249c  27ffb110	addui	r31,r31,(_openfiles_LF2)&0xffff
 1771  000024a0  23e22074	addi	r2,r31,#8308
 1772  000024a4          	L182_LF2:
 1773  000024a4  20030000	addi	r3,r0,#0
 1774  000024a8  afe30004	sw	4(r31),r3
 1775  000024ac  23ff010c	addi	r31,r31,#268
 1776  000024b0  03e2082c	sle	r1,r31,r2
 1777  000024b4  1420ffec	bnez	r1,L182_LF2
 1778  000024b8  54000000	nop; not filled.
 1779  000024bc  3c010000	lhi	r1,((_fs_LF2)>>16)&0xffff
 1780  000024c0  2421b0e0	addui	r1,r1,(_fs_LF2)&0xffff
 1781  000024c4  3c030000	lhi	r3,((_FsUnixOpen)>>16)&0xffff
 1782  000024c8  24631f94	addui	r3,r3,(_FsUnixOpen)&0xffff
 1783  000024cc  ac230000	sw	(r1),r3
 1784  000024d0  3c030000	lhi	r3,((_FsUnixClose)>>16)&0xffff
 1785  000024d4  24632270	addui	r3,r3,(_FsUnixClose)&0xffff
 1786  000024d8  ac230010	sw	16(r1),r3
 1787  000024dc  3c030000	lhi	r3,((_FsUnixRead)>>16)&0xffff
 1788  000024e0  246320c0	addui	r3,r3,(_FsUnixRead)&0xffff
 1789  000024e4  ac230004	sw	4(r1),r3
 1790  000024e8  3c030000	lhi	r3,((_FsUnixWrite)>>16)&0xffff
 1791  000024ec  24632150	addui	r3,r3,(_FsUnixWrite)&0xffff
 1792  000024f0  ac230008	sw	8(r1),r3
 1793  000024f4  3c030000	lhi	r3,((_FsUnixSeek)>>16)&0xffff
 1794  000024f8  246321e0	addui	r3,r3,(_FsUnixSeek)&0xffff
 1795  000024fc  ac23000c	sw	12(r1),r3
 1796  00002500  3c030000	lhi	r3,((_FsUnixDelete)>>16)&0xffff
 1797  00002504  246322e0	addui	r3,r3,(_FsUnixDelete)&0xffff
 1798  00002508  ac230014	sw	20(r1),r3
 1799  0000250c  3c030000	lhi	r3,((_FsDlxOpen)>>16)&0xffff
 1800  00002510  24632380	addui	r3,r3,(_FsDlxOpen)&0xffff
 1801  00002514  ac230018	sw	24(r1),r3
 1802  00002518  3c030000	lhi	r3,((_FsDlxClose)>>16)&0xffff
 1803  0000251c  24632430	addui	r3,r3,(_FsDlxClose)&0xffff
 1804  00002520  ac230028	sw	40(r1),r3
 1805  00002524  3c030000	lhi	r3,((_FsDlxRead)>>16)&0xffff
 1806  00002528  24632330	addui	r3,r3,(_FsDlxRead)&0xffff
 1807  0000252c  ac23001c	sw	28(r1),r3
 1808  00002530  3c030000	lhi	r3,((_FsDlxWrite)>>16)&0xffff
 1809  00002534  24632358	addui	r3,r3,(_FsDlxWrite)&0xffff
 1810  00002538  ac230020	sw	32(r1),r3
 1811  0000253c  3c030000	lhi	r3,((_FsDlxSeek)>>16)&0xffff
 1812  00002540  246323dc	addui	r3,r3,(_FsDlxSeek)&0xffff
 1813  00002544  ac230024	sw	36(r1),r3
 1814  00002548  3c030000	lhi	r3,((_FsDlxDelete)>>16)&0xffff
 1815  0000254c  24632458	addui	r3,r3,(_FsDlxDelete)&0xffff
 1816  00002550  ac23002c	sw	44(r1),r3
 1817  00002554  8fa20000	lw	r2,0(r29)
 1818  00002558  8fa30004	lw	r3,4(r29)
 1819  0000255c  8fdffff8	lw	r31,-8(r30)
 1820  00002560  001ee820	add	r29,r0,r30
 1821  00002564  8fdefffc	lw	r30,-4(r30)
 1822  00002568  4be00000	jr	r31
 1823  0000256c  54000000	nop
 1824  00002570          	.endproc _FsModuleInit
 1825  00002570          	.data
 1826  0000b0df          	.align 2
 1827  0000b0e0          	_fs_LF2:
 1828  0000b0e0          	.space 48
 1829  0000b110          	.align 2
 1830  0000b110          	_openfiles_LF2:
 1831  0000b110          	.space 8576
 1832                      ; Compiled by GCC
 1834  0000d290          	.align 2
 1835  0000d290          	_rcsid_LF3:
 1836  0000d290  3a206d65	.ascii "$Id: memory.c,v 1.1 2000/09/20 01:50:19 elm Exp elm $\000"
 1836  0000d294  6d6f7279	
 1836  0000d298  2e632c76	
 1836  0000d29c  20312e31	
 1836  0000d2a0  20323030	
 1836  0000d2a4  302f3039	
 1836  0000d2a8  2f323020	
 1836  0000d2ac  30313a35	
 1836  0000d2b0  303a3139	
 1836  0000d2b4  20656c6d	
 1836  0000d2b8  20457870	
 1836  0000d2bc  20656c6d	
 1836  0000d2c0  20303030	
 1837  0000d2c4          	.text
 1838  00002570          	.align 2
 1839  00002570          	.proc _isspace
 1840  00002570          	.global _isspace
 1841  00002570          	_isspace:
 1842                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 1843  00002570  afbefffc	sw	-4(r29),r30; push fp
 1844  00002574  001df020	add	r30,r0,r29; fp = sp
 1845  00002578  afbffff8	sw	-8(r29),r31; push ret addr
 1846  0000257c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1847  00002580  afa20000	sw	0(r29),r2
 1848  00002584  83c20003	lb	r2,3(r30)
 1849  00002588  201f0000	addi	r31,r0,#0
 1850  0000258c  304100ff	andi	r1,r2,#0x00ff
 1851  00002590  60210020	seqi	r1,r1,#32
 1852  00002594  14200018	bnez	r1,L6_LF3
 1853  00002598  54000000	nop; not filled.
 1854  0000259c  2041fff7	addi	r1,r2,#-9
 1855  000025a0  302100ff	andi	r1,r1,#0x00ff
 1856  000025a4  70210001	sleui	r1,r1,#1
 1857  000025a8  10200008	beqz	r1,L5_LF3
 1858  000025ac  54000000	nop; not filled.
 1859  000025b0          	L6_LF3:
 1860  000025b0  201f0001	addi	r31,r0,#1
 1861  000025b4          	L5_LF3:
 1862  000025b4  001f0820	add	r1,r0,r31
 1863  000025b8  8fa20000	lw	r2,0(r29)
 1864  000025bc  8fdffff8	lw	r31,-8(r30)
 1865  000025c0  001ee820	add	r29,r0,r30
 1866  000025c4  8fdefffc	lw	r30,-4(r30)
 1867  000025c8  4be00000	jr	r31
 1868  000025cc  54000000	nop
 1869  000025d0          	.endproc _isspace
 1870  000025d0          	.align 2
 1871  000025d0          	.proc _isxdigit
 1872  000025d0          	.global _isxdigit
 1873  000025d0          	_isxdigit:
 1874                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 1875  000025d0  afbefffc	sw	-4(r29),r30; push fp
 1876  000025d4  001df020	add	r30,r0,r29; fp = sp
 1877  000025d8  afbffff8	sw	-8(r29),r31; push ret addr
 1878  000025dc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1879  000025e0  afa20000	sw	0(r29),r2
 1880  000025e4  83df0003	lb	r31,3(r30)
 1881  000025e8  20020000	addi	r2,r0,#0
 1882  000025ec  23e1ffd0	addi	r1,r31,#-48
 1883  000025f0  302100ff	andi	r1,r1,#0x00ff
 1884  000025f4  70210009	sleui	r1,r1,#9
 1885  000025f8  14200028	bnez	r1,L12_LF3
 1886  000025fc  54000000	nop; not filled.
 1887  00002600  23e1ff9f	addi	r1,r31,#-97
 1888  00002604  302100ff	andi	r1,r1,#0x00ff
 1889  00002608  70210005	sleui	r1,r1,#5
 1890  0000260c  14200014	bnez	r1,L12_LF3
 1891  00002610  54000000	nop; not filled.
 1892  00002614  33e100ff	andi	r1,r31,#0x00ff
 1893  00002618  64210041	snei	r1,r1,#65
 1894  0000261c  14200008	bnez	r1,L11_LF3
 1895  00002620  54000000	nop; not filled.
 1896  00002624          	L12_LF3:
 1897  00002624  20020001	addi	r2,r0,#1
 1898  00002628          	L11_LF3:
 1899  00002628  00020820	add	r1,r0,r2
 1900  0000262c  8fa20000	lw	r2,0(r29)
 1901  00002630  8fdffff8	lw	r31,-8(r30)
 1902  00002634  001ee820	add	r29,r0,r30
 1903  00002638  8fdefffc	lw	r30,-4(r30)
 1904  0000263c  4be00000	jr	r31
 1905  00002640  54000000	nop
 1906  00002644          	.endproc _isxdigit
 1907  00002644          	.align 2
 1908  00002644          	.proc _DisableIntrs
 1909  00002644          	.global _DisableIntrs
 1910  00002644          	_DisableIntrs:
 1911                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
 1912  00002644  afbefffc	sw	-4(r29),r30; push fp
 1913  00002648  001df020	add	r30,r0,r29; fp = sp
 1914  0000264c  afbffff8	sw	-8(r29),r31; push ret addr
 1915  00002650  2fbd0010	subui	r29,r29,#16; alloc local storage
 1916  00002654  afa20000	sw	0(r29),r2
 1917  00002658  23bdfff8	addi	r29,r29,#-8
 1918  0000265c  2002000f	addi	r2,r0,#15
 1919  00002660  afa20000	sw	(r29),r2
 1920  00002664  0fffec20	jal	_SetIntrs
 1921  00002668  54000000	nop; not filled.
 1922  0000266c  23bd0008	addi	r29,r29,#8
 1923  00002670  8fa20000	lw	r2,0(r29)
 1924  00002674  8fdffff8	lw	r31,-8(r30)
 1925  00002678  001ee820	add	r29,r0,r30
 1926  0000267c  8fdefffc	lw	r30,-4(r30)
 1927  00002680  4be00000	jr	r31
 1928  00002684  54000000	nop
 1929  00002688          	.endproc _DisableIntrs
 1930  00002688          	.align 2
 1931  00002688          	.proc _EnableIntrs
 1932  00002688          	.global _EnableIntrs
 1933  00002688          	_EnableIntrs:
 1934                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
 1935  00002688  afbefffc	sw	-4(r29),r30; push fp
 1936  0000268c  001df020	add	r30,r0,r29; fp = sp
 1937  00002690  afbffff8	sw	-8(r29),r31; push ret addr
 1938  00002694  2fbd0010	subui	r29,r29,#16; alloc local storage
 1939  00002698  afa20000	sw	0(r29),r2
 1940  0000269c  23bdfff8	addi	r29,r29,#-8
 1941  000026a0  20020000	addi	r2,r0,#0
 1942  000026a4  afa20000	sw	(r29),r2
 1943  000026a8  0fffebdc	jal	_SetIntrs
 1944  000026ac  54000000	nop; not filled.
 1945  000026b0  23bd0008	addi	r29,r29,#8
 1946  000026b4  8fa20000	lw	r2,0(r29)
 1947  000026b8  8fdffff8	lw	r31,-8(r30)
 1948  000026bc  001ee820	add	r29,r0,r30
 1949  000026c0  8fdefffc	lw	r30,-4(r30)
 1950  000026c4  4be00000	jr	r31
 1951  000026c8  54000000	nop
 1952  000026cc          	.endproc _EnableIntrs
 1953  000026cc          	.align 2
 1954  000026cc          	.proc _RestoreIntrs
 1955  000026cc          	.global _RestoreIntrs
 1956  000026cc          	_RestoreIntrs:
 1957                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
 1958  000026cc  afbefffc	sw	-4(r29),r30; push fp
 1959  000026d0  001df020	add	r30,r0,r29; fp = sp
 1960  000026d4  afbffff8	sw	-8(r29),r31; push ret addr
 1961  000026d8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1962  000026dc  afa20000	sw	0(r29),r2
 1963  000026e0  23bdfff8	addi	r29,r29,#-8
 1964  000026e4  8fc20000	lw	r2,(r30)
 1965  000026e8  afa20000	sw	(r29),r2
 1966  000026ec  0fffeb98	jal	_SetIntrs
 1967  000026f0  54000000	nop; not filled.
 1968  000026f4  23bd0008	addi	r29,r29,#8
 1969  000026f8  8fa20000	lw	r2,0(r29)
 1970  000026fc  8fdffff8	lw	r31,-8(r30)
 1971  00002700  001ee820	add	r29,r0,r30
 1972  00002704  8fdefffc	lw	r30,-4(r30)
 1973  00002708  4be00000	jr	r31
 1974  0000270c  54000000	nop
 1975  00002710          	.endproc _RestoreIntrs
 1976  00002710          	.align 2
 1977  00002710          	.proc _QueueLinkInit
 1978  00002710          	.global _QueueLinkInit
 1979  00002710          	_QueueLinkInit:
 1980                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
 1981  00002710  afbefffc	sw	-4(r29),r30; push fp
 1982  00002714  001df020	add	r30,r0,r29; fp = sp
 1983  00002718  afbffff8	sw	-8(r29),r31; push ret addr
 1984  0000271c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1985  00002720  afa20000	sw	0(r29),r2
 1986  00002724  8fc10000	lw	r1,(r30)
 1987  00002728  8fc20004	lw	r2,4(r30)
 1988  0000272c  201f0000	addi	r31,r0,#0
 1989  00002730  ac3f0000	sw	(r1),r31
 1990  00002734  ac22000c	sw	12(r1),r2
 1991  00002738  8fa20000	lw	r2,0(r29)
 1992  0000273c  8fdffff8	lw	r31,-8(r30)
 1993  00002740  001ee820	add	r29,r0,r30
 1994  00002744  8fdefffc	lw	r30,-4(r30)
 1995  00002748  4be00000	jr	r31
 1996  0000274c  54000000	nop
 1997  00002750          	.endproc _QueueLinkInit
 1998  00002750          	.align 2
 1999  00002750          	.proc _QueueNext
 2000  00002750          	.global _QueueNext
 2001  00002750          	_QueueNext:
 2002                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
 2003  00002750  afbefffc	sw	-4(r29),r30; push fp
 2004  00002754  001df020	add	r30,r0,r29; fp = sp
 2005  00002758  afbffff8	sw	-8(r29),r31; push ret addr
 2006  0000275c  2fbd0008	subui	r29,r29,#8; alloc local storage
 2007  00002760  8fc10000	lw	r1,(r30)
 2008  00002764  8c210000	lw	r1,(r1)
 2009  00002768  8fdffff8	lw	r31,-8(r30)
 2010  0000276c  001ee820	add	r29,r0,r30
 2011  00002770  8fdefffc	lw	r30,-4(r30)
 2012  00002774  4be00000	jr	r31
 2013  00002778  54000000	nop
 2014  0000277c          	.endproc _QueueNext
 2015  0000277c          	.align 2
 2016  0000277c          	.proc _QueuePrev
 2017  0000277c          	.global _QueuePrev
 2018  0000277c          	_QueuePrev:
 2019                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
 2020  0000277c  afbefffc	sw	-4(r29),r30; push fp
 2021  00002780  001df020	add	r30,r0,r29; fp = sp
 2022  00002784  afbffff8	sw	-8(r29),r31; push ret addr
 2023  00002788  2fbd0008	subui	r29,r29,#8; alloc local storage
 2024  0000278c  8fc10000	lw	r1,(r30)
 2025  00002790  8c210004	lw	r1,4(r1)
 2026  00002794  8fdffff8	lw	r31,-8(r30)
 2027  00002798  001ee820	add	r29,r0,r30
 2028  0000279c  8fdefffc	lw	r30,-4(r30)
 2029  000027a0  4be00000	jr	r31
 2030  000027a4  54000000	nop
 2031  000027a8          	.endproc _QueuePrev
 2032  000027a8          	.align 2
 2033  000027a8          	.proc _QueueFirst
 2034  000027a8          	.global _QueueFirst
 2035  000027a8          	_QueueFirst:
 2036                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
 2037  000027a8  afbefffc	sw	-4(r29),r30; push fp
 2038  000027ac  001df020	add	r30,r0,r29; fp = sp
 2039  000027b0  afbffff8	sw	-8(r29),r31; push ret addr
 2040  000027b4  2fbd0008	subui	r29,r29,#8; alloc local storage
 2041  000027b8  8fc10000	lw	r1,(r30)
 2042  000027bc  8c210000	lw	r1,(r1)
 2043  000027c0  8fdffff8	lw	r31,-8(r30)
 2044  000027c4  001ee820	add	r29,r0,r30
 2045  000027c8  8fdefffc	lw	r30,-4(r30)
 2046  000027cc  4be00000	jr	r31
 2047  000027d0  54000000	nop
 2048  000027d4          	.endproc _QueueFirst
 2049  000027d4          	.align 2
 2050  000027d4          	.proc _QueueLast
 2051  000027d4          	.global _QueueLast
 2052  000027d4          	_QueueLast:
 2053                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
 2054  000027d4  afbefffc	sw	-4(r29),r30; push fp
 2055  000027d8  001df020	add	r30,r0,r29; fp = sp
 2056  000027dc  afbffff8	sw	-8(r29),r31; push ret addr
 2057  000027e0  2fbd0008	subui	r29,r29,#8; alloc local storage
 2058  000027e4  8fc10000	lw	r1,(r30)
 2059  000027e8  8c210004	lw	r1,4(r1)
 2060  000027ec  8fdffff8	lw	r31,-8(r30)
 2061  000027f0  001ee820	add	r29,r0,r30
 2062  000027f4  8fdefffc	lw	r30,-4(r30)
 2063  000027f8  4be00000	jr	r31
 2064  000027fc  54000000	nop
 2065  00002800          	.endproc _QueueLast
 2066  00002800          	.align 2
 2067  00002800          	.proc _QueueInsertAfter
 2068  00002800          	.global _QueueInsertAfter
 2069  00002800          	_QueueInsertAfter:
 2070                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
 2071  00002800  afbefffc	sw	-4(r29),r30; push fp
 2072  00002804  001df020	add	r30,r0,r29; fp = sp
 2073  00002808  afbffff8	sw	-8(r29),r31; push ret addr
 2074  0000280c  2fbd0010	subui	r29,r29,#16; alloc local storage
 2075  00002810  afa20000	sw	0(r29),r2
 2076  00002814  afa30004	sw	4(r29),r3
 2077  00002818  8fc30000	lw	r3,(r30)
 2078  0000281c  8fc20004	lw	r2,4(r30)
 2079  00002820  8fc10008	lw	r1,8(r30)
 2080  00002824  ac230008	sw	8(r1),r3
 2081  00002828  ac220004	sw	4(r1),r2
 2082  0000282c  8c5f0000	lw	r31,(r2)
 2083  00002830  ac3f0000	sw	(r1),r31
 2084  00002834  ac410000	sw	(r2),r1
 2085  00002838  8c220000	lw	r2,(r1)
 2086  0000283c  ac410004	sw	4(r2),r1
 2087  00002840  8c610008	lw	r1,8(r3)
 2088  00002844  20210001	addi	r1,r1,#1
 2089  00002848  ac610008	sw	8(r3),r1
 2090  0000284c  8fa20000	lw	r2,0(r29)
 2091  00002850  8fa30004	lw	r3,4(r29)
 2092  00002854  8fdffff8	lw	r31,-8(r30)
 2093  00002858  001ee820	add	r29,r0,r30
 2094  0000285c  8fdefffc	lw	r30,-4(r30)
 2095  00002860  4be00000	jr	r31
 2096  00002864  54000000	nop
 2097  00002868          	.endproc _QueueInsertAfter
 2098  00002868          	.align 2
 2099  00002868          	.proc _QueueInsertFirst
 2100  00002868          	.global _QueueInsertFirst
 2101  00002868          	_QueueInsertFirst:
 2102                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
 2103  00002868  afbefffc	sw	-4(r29),r30; push fp
 2104  0000286c  001df020	add	r30,r0,r29; fp = sp
 2105  00002870  afbffff8	sw	-8(r29),r31; push ret addr
 2106  00002874  2fbd0010	subui	r29,r29,#16; alloc local storage
 2107  00002878  afa20000	sw	0(r29),r2
 2108  0000287c  afa30004	sw	4(r29),r3
 2109  00002880  8fc30000	lw	r3,(r30)
 2110  00002884  8fc10004	lw	r1,4(r30)
 2111  00002888  ac230008	sw	8(r1),r3
 2112  0000288c  ac230004	sw	4(r1),r3
 2113  00002890  8c7f0000	lw	r31,(r3)
 2114  00002894  ac3f0000	sw	(r1),r31
 2115  00002898  ac610000	sw	(r3),r1
 2116  0000289c  8c220000	lw	r2,(r1)
 2117  000028a0  ac410004	sw	4(r2),r1
 2118  000028a4  8c610008	lw	r1,8(r3)
 2119  000028a8  20210001	addi	r1,r1,#1
 2120  000028ac  ac610008	sw	8(r3),r1
 2121  000028b0  8fa20000	lw	r2,0(r29)
 2122  000028b4  8fa30004	lw	r3,4(r29)
 2123  000028b8  8fdffff8	lw	r31,-8(r30)
 2124  000028bc  001ee820	add	r29,r0,r30
 2125  000028c0  8fdefffc	lw	r30,-4(r30)
 2126  000028c4  4be00000	jr	r31
 2127  000028c8  54000000	nop
 2128  000028cc          	.endproc _QueueInsertFirst
 2129  000028cc          	.align 2
 2130  000028cc          	.proc _QueueInsertLast
 2131  000028cc          	.global _QueueInsertLast
 2132  000028cc          	_QueueInsertLast:
 2133                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
 2134  000028cc  afbefffc	sw	-4(r29),r30; push fp
 2135  000028d0  001df020	add	r30,r0,r29; fp = sp
 2136  000028d4  afbffff8	sw	-8(r29),r31; push ret addr
 2137  000028d8  2fbd0010	subui	r29,r29,#16; alloc local storage
 2138  000028dc  afa20000	sw	0(r29),r2
 2139  000028e0  afa30004	sw	4(r29),r3
 2140  000028e4  8fc30000	lw	r3,(r30)
 2141  000028e8  8fc10004	lw	r1,4(r30)
 2142  000028ec  8c620004	lw	r2,4(r3)
 2143  000028f0  ac230008	sw	8(r1),r3
 2144  000028f4  ac220004	sw	4(r1),r2
 2145  000028f8  8c5f0000	lw	r31,(r2)
 2146  000028fc  ac3f0000	sw	(r1),r31
 2147  00002900  ac410000	sw	(r2),r1
 2148  00002904  8c220000	lw	r2,(r1)
 2149  00002908  ac410004	sw	4(r2),r1
 2150  0000290c  8c610008	lw	r1,8(r3)
 2151  00002910  20210001	addi	r1,r1,#1
 2152  00002914  ac610008	sw	8(r3),r1
 2153  00002918  8fa20000	lw	r2,0(r29)
 2154  0000291c  8fa30004	lw	r3,4(r29)
 2155  00002920  8fdffff8	lw	r31,-8(r30)
 2156  00002924  001ee820	add	r29,r0,r30
 2157  00002928  8fdefffc	lw	r30,-4(r30)
 2158  0000292c  4be00000	jr	r31
 2159  00002930  54000000	nop
 2160  00002934          	.endproc _QueueInsertLast
 2161  00002934          	.align 2
 2162  00002934          	.proc _QueueRemove
 2163  00002934          	.global _QueueRemove
 2164  00002934          	_QueueRemove:
 2165                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
 2166  00002934  afbefffc	sw	-4(r29),r30; push fp
 2167  00002938  001df020	add	r30,r0,r29; fp = sp
 2168  0000293c  afbffff8	sw	-8(r29),r31; push ret addr
 2169  00002940  2fbd0010	subui	r29,r29,#16; alloc local storage
 2170  00002944  afa20000	sw	0(r29),r2
 2171  00002948  afa30004	sw	4(r29),r3
 2172  0000294c  8fdf0000	lw	r31,(r30)
 2173  00002950  8fe10008	lw	r1,8(r31)
 2174  00002954  8c210008	lw	r1,8(r1)
 2175  00002958  6c210000	sgti	r1,r1,#0
 2176  0000295c  1020002c	beqz	r1,L44_LF3
 2177  00002960  54000000	nop; not filled.
 2178  00002964  8fe10004	lw	r1,4(r31)
 2179  00002968  8fe30000	lw	r3,(r31)
 2180  0000296c  ac230000	sw	(r1),r3
 2181  00002970  8fe10000	lw	r1,(r31)
 2182  00002974  8fe30004	lw	r3,4(r31)
 2183  00002978  ac230004	sw	4(r1),r3
 2184  0000297c  8fe20008	lw	r2,8(r31)
 2185  00002980  8c410008	lw	r1,8(r2)
 2186  00002984  2021ffff	addi	r1,r1,#-1
 2187  00002988  ac410008	sw	8(r2),r1
 2188  0000298c          	L44_LF3:
 2189  0000298c  20030000	addi	r3,r0,#0
 2190  00002990  afe30000	sw	(r31),r3
 2191  00002994  8fa20000	lw	r2,0(r29)
 2192  00002998  8fa30004	lw	r3,4(r29)
 2193  0000299c  8fdffff8	lw	r31,-8(r30)
 2194  000029a0  001ee820	add	r29,r0,r30
 2195  000029a4  8fdefffc	lw	r30,-4(r30)
 2196  000029a8  4be00000	jr	r31
 2197  000029ac  54000000	nop
 2198  000029b0          	.endproc _QueueRemove
 2199  000029b0          	.align 2
 2200  000029b0          	.proc _QueueLength
 2201  000029b0          	.global _QueueLength
 2202  000029b0          	_QueueLength:
 2203                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
 2204  000029b0  afbefffc	sw	-4(r29),r30; push fp
 2205  000029b4  001df020	add	r30,r0,r29; fp = sp
 2206  000029b8  afbffff8	sw	-8(r29),r31; push ret addr
 2207  000029bc  2fbd0008	subui	r29,r29,#8; alloc local storage
 2208  000029c0  8fc10000	lw	r1,(r30)
 2209  000029c4  8c210008	lw	r1,8(r1)
 2210  000029c8  8fdffff8	lw	r31,-8(r30)
 2211  000029cc  001ee820	add	r29,r0,r30
 2212  000029d0  8fdefffc	lw	r30,-4(r30)
 2213  000029d4  4be00000	jr	r31
 2214  000029d8  54000000	nop
 2215  000029dc          	.endproc _QueueLength
 2216  000029dc          	.align 2
 2217  000029dc          	.proc _QueueEmpty
 2218  000029dc          	.global _QueueEmpty
 2219  000029dc          	_QueueEmpty:
 2220                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
 2221  000029dc  afbefffc	sw	-4(r29),r30; push fp
 2222  000029e0  001df020	add	r30,r0,r29; fp = sp
 2223  000029e4  afbffff8	sw	-8(r29),r31; push ret addr
 2224  000029e8  2fbd0008	subui	r29,r29,#8; alloc local storage
 2225  000029ec  8fc10000	lw	r1,(r30)
 2226  000029f0  8c210008	lw	r1,8(r1)
 2227  000029f4  60210000	seqi	r1,r1,#0
 2228  000029f8  8fdffff8	lw	r31,-8(r30)
 2229  000029fc  001ee820	add	r29,r0,r30
 2230  00002a00  8fdefffc	lw	r30,-4(r30)
 2231  00002a04  4be00000	jr	r31
 2232  00002a08  54000000	nop
 2233  00002a0c          	.endproc _QueueEmpty
 2234  00002a0c          	.data
 2235  0000d2c4          	.align 2
 2236  0000d2c4          	_negativeone_LF3:
 2237  0000d2c4  ffffffff	.word -1
 2238  0000d2c8          	.text
 2239  00002a0c          	.align 2
 2240  00002a0c          	.proc _MemoryGetSize
 2241  00002a0c          	.global _MemoryGetSize
 2242  00002a0c          	_MemoryGetSize:
 2243                      ;  Function 'MemoryGetSize'; 0 bytes of locals, 0 regs to save.
 2244  00002a0c  afbefffc	sw	-4(r29),r30; push fp
 2245  00002a10  001df020	add	r30,r0,r29; fp = sp
 2246  00002a14  afbffff8	sw	-8(r29),r31; push ret addr
 2247  00002a18  2fbd0008	subui	r29,r29,#8; alloc local storage
 2248  00002a1c  3c01ffff	lhi	r1,#-1
 2249  00002a20  24210000	addui	r1,r1,#0
 2250  00002a24  8c210000	lw	r1,(r1)
 2251  00002a28  8fdffff8	lw	r31,-8(r30)
 2252  00002a2c  001ee820	add	r29,r0,r30
 2253  00002a30  8fdefffc	lw	r30,-4(r30)
 2254  00002a34  4be00000	jr	r31
 2255  00002a38  54000000	nop
 2256  00002a3c          	.endproc _MemoryGetSize
 2257  00002a3c          	.data
 2258  0000d2c8          	.align 2
 2259  0000d2c8          	LC0_LF3:
 2260  0000d2c8  53657420	.ascii "Set freemap entry %d to 0x%x.\n\000"
 2260  0000d2cc  66726565	
 2260  0000d2d0  6d617020	
 2260  0000d2d4  656e7472	
 2260  0000d2d8  79202564	
 2260  0000d2dc  20746f20	
 2260  0000d2e0  30782578	
 2260  0000d2e4  2e0a00  	
 2261  0000d2e7          	.text
 2262  00002a3c          	.align 2
 2263  00002a3c          	.proc _MemorySetFreemap
 2264  00002a3c          	.global _MemorySetFreemap
 2265  00002a3c          	_MemorySetFreemap:
 2266                      ;  Function 'MemorySetFreemap'; 0 bytes of locals, 5 regs to save.
 2267  00002a3c  afbefffc	sw	-4(r29),r30; push fp
 2268  00002a40  001df020	add	r30,r0,r29; fp = sp
 2269  00002a44  afbffff8	sw	-8(r29),r31; push ret addr
 2270  00002a48  2fbd0020	subui	r29,r29,#32; alloc local storage
 2271  00002a4c  afa20000	sw	0(r29),r2
 2272  00002a50  afa30004	sw	4(r29),r3
 2273  00002a54  afa40008	sw	8(r29),r4
 2274  00002a58  afa5000c	sw	12(r29),r5
 2275  00002a5c  afa60010	sw	16(r29),r6
 2276  00002a60  8fc30000	lw	r3,(r30)
 2277  00002a64  8fdf0004	lw	r31,4(r30)
 2278  00002a68  00031020	add	r2,r0,r3
 2279  00002a6c  74610000	sgei	r1,r3,#0
 2280  00002a70  14200008	bnez	r1,L61_LF3
 2281  00002a74  54000000	nop; not filled.
 2282  00002a78  2062001f	addi	r2,r3,#31
 2283  00002a7c          	L61_LF3:
 2284  00002a7c  5c450005	srai	r5,r2,#0x5
 2285  00002a80  50a10005	slli	r1,r5,#0x5
 2286  00002a84  00611822	sub	r3,r3,r1
 2287  00002a88  20010001	addi	r1,r0,#1
 2288  00002a8c  00231004	sll	r2,r1,r3
 2289  00002a90  3c010000	lhi	r1,((_negativeone_LF3)>>16)&0xffff
 2290  00002a94  2421d2c4	addui	r1,r1,(_negativeone_LF3)&0xffff
 2291  00002a98  8c210000	lw	r1,(r1)
 2292  00002a9c  00411026	xor	r2,r2,r1
 2293  00002aa0  50a10002	slli	r1,r5,#0x2
 2294  00002aa4  3c060000	lhi	r6,((_freepages_LF3)>>16)&0xffff
 2295  00002aa8  24c6d420	addui	r6,r6,(_freepages_LF3)&0xffff
 2296  00002aac  00262020	add	r4,r1,r6
 2297  00002ab0  8c810000	lw	r1,(r4)
 2298  00002ab4  00221024	and	r2,r1,r2
 2299  00002ab8  03e30804	sll	r1,r31,r3
 2300  00002abc  00410825	or	r1,r2,r1
 2301  00002ac0  ac810000	sw	(r4),r1
 2302  00002ac4  23bdfff8	addi	r29,r29,#-8
 2303  00002ac8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2304  00002acc  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 2305  00002ad0  afa20000	sw	(r29),r2
 2306  00002ad4  2006006d	addi	r6,r0,#109
 2307  00002ad8  afa60004	sw	4(r29),r6
 2308  00002adc  0c001338	jal	_dindex
 2309  00002ae0  54000000	nop; not filled.
 2310  00002ae4  23bd0008	addi	r29,r29,#8
 2311  00002ae8  64210000	snei	r1,r1,#0
 2312  00002aec  1420002c	bnez	r1,L65_LF3
 2313  00002af0  54000000	nop; not filled.
 2314  00002af4  23bdfff8	addi	r29,r29,#-8
 2315  00002af8  afa20000	sw	(r29),r2
 2316  00002afc  2006002b	addi	r6,r0,#43
 2317  00002b00  afa60004	sw	4(r29),r6
 2318  00002b04  0c001310	jal	_dindex
 2319  00002b08  54000000	nop; not filled.
 2320  00002b0c  23bd0008	addi	r29,r29,#8
 2321  00002b10  64210000	snei	r1,r1,#0
 2322  00002b14  1020002c	beqz	r1,L64_LF3
 2323  00002b18  54000000	nop; not filled.
 2324  00002b1c          	L65_LF3:
 2325  00002b1c  23bdfff0	addi	r29,r29,#-16
 2326  00002b20  3c060000	lhi	r6,((LC0_LF3)>>16)&0xffff
 2327  00002b24  24c6d2c8	addui	r6,r6,(LC0_LF3)&0xffff
 2328  00002b28  afa60000	sw	(r29),r6
 2329  00002b2c  afa50004	sw	4(r29),r5
 2330  00002b30  8c840000	lw	r4,(r4)
 2331  00002b34  afa40008	sw	8(r29),r4
 2332  00002b38  0c00780c	jal	_printf
 2333  00002b3c  54000000	nop; not filled.
 2334  00002b40  23bd0010	addi	r29,r29,#16
 2335  00002b44          	L64_LF3:
 2336  00002b44  8fa20000	lw	r2,0(r29)
 2337  00002b48  8fa30004	lw	r3,4(r29)
 2338  00002b4c  8fa40008	lw	r4,8(r29)
 2339  00002b50  8fa5000c	lw	r5,12(r29)
 2340  00002b54  8fa60010	lw	r6,16(r29)
 2341  00002b58  8fdffff8	lw	r31,-8(r30)
 2342  00002b5c  001ee820	add	r29,r0,r30
 2343  00002b60  8fdefffc	lw	r30,-4(r30)
 2344  00002b64  4be00000	jr	r31
 2345  00002b68  54000000	nop
 2346  00002b6c          	.endproc _MemorySetFreemap
 2347  00002b6c          	.data
 2348  0000d2e7          	.align 2
 2349  0000d2e8          	LC1_LF3:
 2350  0000d2e8  4d617020	.ascii "Map has %d entries, memory size is 0x%x.\n\000"
 2350  0000d2ec  68617320	
 2350  0000d2f0  25642065	
 2350  0000d2f4  6e747269	
 2350  0000d2f8  65732c20	
 2350  0000d2fc  6d656d6f	
 2350  0000d300  72792073	
 2350  0000d304  697a6520	
 2350  0000d308  69732030	
 2350  0000d30c  7825782e	
 2350  0000d310  0a00    	
 2351  0000d312          	.align 2
 2352  0000d314          	LC2_LF3:
 2353  0000d314  46726565	.ascii "Free pages start with page # 0x%x.\n\000"
 2353  0000d318  20706167	
 2353  0000d31c  65732073	
 2353  0000d320  74617274	
 2353  0000d324  20776974	
 2353  0000d328  68207061	
 2353  0000d32c  67652023	
 2353  0000d330  20307825	
 2353  0000d334  782e0a00	
 2354  0000d338          	.align 2
 2355  0000d338          	LC3_LF3:
 2356  0000d338  496e6974	.ascii "Initialized %d free pages.\n\000"
 2356  0000d33c  69616c69	
 2356  0000d340  7a656420	
 2356  0000d344  25642066	
 2356  0000d348  72656520	
 2356  0000d34c  70616765	
 2356  0000d350  732e0a00	
 2357  0000d354          	.text
 2358  00002b6c          	.align 2
 2359  00002b6c          	.proc _MemoryModuleInit
 2360  00002b6c          	.global _MemoryModuleInit
 2361  00002b6c          	_MemoryModuleInit:
 2362                      ;  Function 'MemoryModuleInit'; 0 bytes of locals, 10 regs to save.
 2363  00002b6c  afbefffc	sw	-4(r29),r30; push fp
 2364  00002b70  001df020	add	r30,r0,r29; fp = sp
 2365  00002b74  afbffff8	sw	-8(r29),r31; push ret addr
 2366  00002b78  2fbd0030	subui	r29,r29,#48; alloc local storage
 2367  00002b7c  afa20000	sw	0(r29),r2
 2368  00002b80  afa30004	sw	4(r29),r3
 2369  00002b84  afa40008	sw	8(r29),r4
 2370  00002b88  afa5000c	sw	12(r29),r5
 2371  00002b8c  afa60010	sw	16(r29),r6
 2372  00002b90  afa70014	sw	20(r29),r7
 2373  00002b94  afa80018	sw	24(r29),r8
 2374  00002b98  afa9001c	sw	28(r29),r9
 2375  00002b9c  afaa0020	sw	32(r29),r10
 2376  00002ba0  afab0024	sw	36(r29),r11
 2377  00002ba4  3c01ffff	lhi	r1,#-1
 2378  00002ba8  24210000	addui	r1,r1,#0
 2379  00002bac  8c220000	lw	r2,(r1)
 2380  00002bb0  74410000	sgei	r1,r2,#0
 2381  00002bb4  14200008	bnez	r1,L68_LF3
 2382  00002bb8  54000000	nop; not filled.
 2383  00002bbc  2442ffff	addui	r2,r2,#65535
 2384  00002bc0          	L68_LF3:
 2385  00002bc0  5c480010	srai	r8,r2,#0x10
 2386  00002bc4  3c030000	lhi	r3,((_pagestart_LF3)>>16)&0xffff
 2387  00002bc8  2463d414	addui	r3,r3,(_pagestart_LF3)&0xffff
 2388  00002bcc  3c010001	lhi	r1,((_lastosaddress)>>16)&0xffff
 2389  00002bd0  2421331c	addui	r1,r1,(_lastosaddress)&0xffff
 2390  00002bd4  8c210000	lw	r1,(r1)
 2391  00002bd8  2422fffc	addui	r2,r1,#65532
 2392  00002bdc  74410000	sgei	r1,r2,#0
 2393  00002be0  14200008	bnez	r1,L69_LF3
 2394  00002be4  54000000	nop; not filled.
 2395  00002be8  2442ffff	addui	r2,r2,#65535
 2396  00002bec          	L69_LF3:
 2397  00002bec  5c410010	srai	r1,r2,#0x10
 2398  00002bf0  ac610000	sw	(r3),r1
 2399  00002bf4  3c030000	lhi	r3,((_freemapmax_LF3)>>16)&0xffff
 2400  00002bf8  2463d418	addui	r3,r3,(_freemapmax_LF3)&0xffff
 2401  00002bfc  2102001f	addi	r2,r8,#31
 2402  00002c00  74410000	sgei	r1,r2,#0
 2403  00002c04  14200008	bnez	r1,L70_LF3
 2404  00002c08  54000000	nop; not filled.
 2405  00002c0c  2102003e	addi	r2,r8,#62
 2406  00002c10          	L70_LF3:
 2407  00002c10  5c410005	srai	r1,r2,#0x5
 2408  00002c14  ac610000	sw	(r3),r1
 2409  00002c18  23bdfff8	addi	r29,r29,#-8
 2410  00002c1c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2411  00002c20  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 2412  00002c24  afa20000	sw	(r29),r2
 2413  00002c28  200b006d	addi	r11,r0,#109
 2414  00002c2c  afab0004	sw	4(r29),r11
 2415  00002c30  0c0011e4	jal	_dindex
 2416  00002c34  54000000	nop; not filled.
 2417  00002c38  23bd0008	addi	r29,r29,#8
 2418  00002c3c  64210000	snei	r1,r1,#0
 2419  00002c40  1420002c	bnez	r1,L72_LF3
 2420  00002c44  54000000	nop; not filled.
 2421  00002c48  23bdfff8	addi	r29,r29,#-8
 2422  00002c4c  afa20000	sw	(r29),r2
 2423  00002c50  200b002b	addi	r11,r0,#43
 2424  00002c54  afab0004	sw	4(r29),r11
 2425  00002c58  0c0011bc	jal	_dindex
 2426  00002c5c  54000000	nop; not filled.
 2427  00002c60  23bd0008	addi	r29,r29,#8
 2428  00002c64  64210000	snei	r1,r1,#0
 2429  00002c68  1020002c	beqz	r1,L71_LF3
 2430  00002c6c  54000000	nop; not filled.
 2431  00002c70          	L72_LF3:
 2432  00002c70  23bdfff0	addi	r29,r29,#-16
 2433  00002c74  3c0b0000	lhi	r11,((LC1_LF3)>>16)&0xffff
 2434  00002c78  256bd2e8	addui	r11,r11,(LC1_LF3)&0xffff
 2435  00002c7c  afab0000	sw	(r29),r11
 2436  00002c80  8c610000	lw	r1,(r3)
 2437  00002c84  afa10004	sw	4(r29),r1
 2438  00002c88  afa80008	sw	8(r29),r8
 2439  00002c8c  0c0076b8	jal	_printf
 2440  00002c90  54000000	nop; not filled.
 2441  00002c94  23bd0010	addi	r29,r29,#16
 2442  00002c98          	L71_LF3:
 2443  00002c98  23bdfff8	addi	r29,r29,#-8
 2444  00002c9c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2445  00002ca0  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 2446  00002ca4  afa20000	sw	(r29),r2
 2447  00002ca8  200b006d	addi	r11,r0,#109
 2448  00002cac  afab0004	sw	4(r29),r11
 2449  00002cb0  0c001164	jal	_dindex
 2450  00002cb4  54000000	nop; not filled.
 2451  00002cb8  23bd0008	addi	r29,r29,#8
 2452  00002cbc  64210000	snei	r1,r1,#0
 2453  00002cc0  1420002c	bnez	r1,L74_LF3
 2454  00002cc4  54000000	nop; not filled.
 2455  00002cc8  23bdfff8	addi	r29,r29,#-8
 2456  00002ccc  afa20000	sw	(r29),r2
 2457  00002cd0  200b002b	addi	r11,r0,#43
 2458  00002cd4  afab0004	sw	4(r29),r11
 2459  00002cd8  0c00113c	jal	_dindex
 2460  00002cdc  54000000	nop; not filled.
 2461  00002ce0  23bd0008	addi	r29,r29,#8
 2462  00002ce4  64210000	snei	r1,r1,#0
 2463  00002ce8  10200030	beqz	r1,L73_LF3
 2464  00002cec  54000000	nop; not filled.
 2465  00002cf0          	L74_LF3:
 2466  00002cf0  23bdfff8	addi	r29,r29,#-8
 2467  00002cf4  3c0b0000	lhi	r11,((LC2_LF3)>>16)&0xffff
 2468  00002cf8  256bd314	addui	r11,r11,(LC2_LF3)&0xffff
 2469  00002cfc  afab0000	sw	(r29),r11
 2470  00002d00  3c010000	lhi	r1,((_pagestart_LF3)>>16)&0xffff
 2471  00002d04  2421d414	addui	r1,r1,(_pagestart_LF3)&0xffff
 2472  00002d08  8c210000	lw	r1,(r1)
 2473  00002d0c  afa10004	sw	4(r29),r1
 2474  00002d10  0c007634	jal	_printf
 2475  00002d14  54000000	nop; not filled.
 2476  00002d18  23bd0008	addi	r29,r29,#8
 2477  00002d1c          	L73_LF3:
 2478  00002d1c  20020000	addi	r2,r0,#0
 2479  00002d20  3c040000	lhi	r4,((_freemapmax_LF3)>>16)&0xffff
 2480  00002d24  2484d418	addui	r4,r4,(_freemapmax_LF3)&0xffff
 2481  00002d28  8c810000	lw	r1,(r4)
 2482  00002d2c  0041082a	slt	r1,r2,r1
 2483  00002d30  1020002c	beqz	r1,L76_LF3
 2484  00002d34  54000000	nop; not filled.
 2485  00002d38  3c030000	lhi	r3,((_freepages_LF3)>>16)&0xffff
 2486  00002d3c  2463d420	addui	r3,r3,(_freepages_LF3)&0xffff
 2487  00002d40          	L78_LF3:
 2488  00002d40  200b0000	addi	r11,r0,#0
 2489  00002d44  ac6b0000	sw	(r3),r11
 2490  00002d48  20630004	addi	r3,r3,#4
 2491  00002d4c  20420001	addi	r2,r2,#1
 2492  00002d50  8c810000	lw	r1,(r4)
 2493  00002d54  0041082a	slt	r1,r2,r1
 2494  00002d58  1420ffe4	bnez	r1,L78_LF3
 2495  00002d5c  54000000	nop; not filled.
 2496  00002d60          	L76_LF3:
 2497  00002d60  3c020000	lhi	r2,((_nfreepages_LF3)>>16)&0xffff
 2498  00002d64  2442d41c	addui	r2,r2,(_nfreepages_LF3)&0xffff
 2499  00002d68  200b0000	addi	r11,r0,#0
 2500  00002d6c  ac4b0000	sw	(r2),r11
 2501  00002d70  3c010000	lhi	r1,((_pagestart_LF3)>>16)&0xffff
 2502  00002d74  2421d414	addui	r1,r1,(_pagestart_LF3)&0xffff
 2503  00002d78  8c240000	lw	r4,(r1)
 2504  00002d7c  0088082a	slt	r1,r4,r8
 2505  00002d80  10200104	beqz	r1,L81_LF3
 2506  00002d84  54000000	nop; not filled.
 2507  00002d88  00023820	add	r7,r0,r2
 2508  00002d8c  200a0001	addi	r10,r0,#1
 2509  00002d90  3c090000	lhi	r9,((_negativeone_LF3)>>16)&0xffff
 2510  00002d94  2529d2c4	addui	r9,r9,(_negativeone_LF3)&0xffff
 2511  00002d98          	L83_LF3:
 2512  00002d98  8ce10000	lw	r1,(r7)
 2513  00002d9c  20210001	addi	r1,r1,#1
 2514  00002da0  ace10000	sw	(r7),r1
 2515  00002da4  00041020	add	r2,r0,r4
 2516  00002da8  74810000	sgei	r1,r4,#0
 2517  00002dac  14200008	bnez	r1,L85_LF3
 2518  00002db0  54000000	nop; not filled.
 2519  00002db4  2082001f	addi	r2,r4,#31
 2520  00002db8          	L85_LF3:
 2521  00002db8  5c460005	srai	r6,r2,#0x5
 2522  00002dbc  50c10005	slli	r1,r6,#0x5
 2523  00002dc0  00810822	sub	r1,r4,r1
 2524  00002dc4  01411804	sll	r3,r10,r1
 2525  00002dc8  8d210000	lw	r1,(r9)
 2526  00002dcc  00611026	xor	r2,r3,r1
 2527  00002dd0  50c10002	slli	r1,r6,#0x2
 2528  00002dd4  3c0b0000	lhi	r11,((_freepages_LF3)>>16)&0xffff
 2529  00002dd8  256bd420	addui	r11,r11,(_freepages_LF3)&0xffff
 2530  00002ddc  002b2820	add	r5,r1,r11
 2531  00002de0  8ca10000	lw	r1,(r5)
 2532  00002de4  00220824	and	r1,r1,r2
 2533  00002de8  00230825	or	r1,r1,r3
 2534  00002dec  aca10000	sw	(r5),r1
 2535  00002df0  23bdfff8	addi	r29,r29,#-8
 2536  00002df4  3c0b0000	lhi	r11,((_debugstr)>>16)&0xffff
 2537  00002df8  256bfd4a	addui	r11,r11,(_debugstr)&0xffff
 2538  00002dfc  afab0000	sw	(r29),r11
 2539  00002e00  200b006d	addi	r11,r0,#109
 2540  00002e04  afab0004	sw	4(r29),r11
 2541  00002e08  0c00100c	jal	_dindex
 2542  00002e0c  54000000	nop; not filled.
 2543  00002e10  23bd0008	addi	r29,r29,#8
 2544  00002e14  64210000	snei	r1,r1,#0
 2545  00002e18  14200034	bnez	r1,L89_LF3
 2546  00002e1c  54000000	nop; not filled.
 2547  00002e20  23bdfff8	addi	r29,r29,#-8
 2548  00002e24  3c0b0000	lhi	r11,((_debugstr)>>16)&0xffff
 2549  00002e28  256bfd4a	addui	r11,r11,(_debugstr)&0xffff
 2550  00002e2c  afab0000	sw	(r29),r11
 2551  00002e30  200b002b	addi	r11,r0,#43
 2552  00002e34  afab0004	sw	4(r29),r11
 2553  00002e38  0c000fdc	jal	_dindex
 2554  00002e3c  54000000	nop; not filled.
 2555  00002e40  23bd0008	addi	r29,r29,#8
 2556  00002e44  64210000	snei	r1,r1,#0
 2557  00002e48  1020002c	beqz	r1,L82_LF3
 2558  00002e4c  54000000	nop; not filled.
 2559  00002e50          	L89_LF3:
 2560  00002e50  23bdfff0	addi	r29,r29,#-16
 2561  00002e54  3c0b0000	lhi	r11,((LC0_LF3)>>16)&0xffff
 2562  00002e58  256bd2c8	addui	r11,r11,(LC0_LF3)&0xffff
 2563  00002e5c  afab0000	sw	(r29),r11
 2564  00002e60  afa60004	sw	4(r29),r6
 2565  00002e64  8ca50000	lw	r5,(r5)
 2566  00002e68  afa50008	sw	8(r29),r5
 2567  00002e6c  0c0074d8	jal	_printf
 2568  00002e70  54000000	nop; not filled.
 2569  00002e74  23bd0010	addi	r29,r29,#16
 2570  00002e78          	L82_LF3:
 2571  00002e78  20840001	addi	r4,r4,#1
 2572  00002e7c  0088082a	slt	r1,r4,r8
 2573  00002e80  1420ff14	bnez	r1,L83_LF3
 2574  00002e84  54000000	nop; not filled.
 2575  00002e88          	L81_LF3:
 2576  00002e88  23bdfff8	addi	r29,r29,#-8
 2577  00002e8c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2578  00002e90  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 2579  00002e94  afa20000	sw	(r29),r2
 2580  00002e98  200b006d	addi	r11,r0,#109
 2581  00002e9c  afab0004	sw	4(r29),r11
 2582  00002ea0  0c000f74	jal	_dindex
 2583  00002ea4  54000000	nop; not filled.
 2584  00002ea8  23bd0008	addi	r29,r29,#8
 2585  00002eac  64210000	snei	r1,r1,#0
 2586  00002eb0  1420002c	bnez	r1,L92_LF3
 2587  00002eb4  54000000	nop; not filled.
 2588  00002eb8  23bdfff8	addi	r29,r29,#-8
 2589  00002ebc  afa20000	sw	(r29),r2
 2590  00002ec0  200b002b	addi	r11,r0,#43
 2591  00002ec4  afab0004	sw	4(r29),r11
 2592  00002ec8  0c000f4c	jal	_dindex
 2593  00002ecc  54000000	nop; not filled.
 2594  00002ed0  23bd0008	addi	r29,r29,#8
 2595  00002ed4  64210000	snei	r1,r1,#0
 2596  00002ed8  10200030	beqz	r1,L91_LF3
 2597  00002edc  54000000	nop; not filled.
 2598  00002ee0          	L92_LF3:
 2599  00002ee0  23bdfff8	addi	r29,r29,#-8
 2600  00002ee4  3c0b0000	lhi	r11,((LC3_LF3)>>16)&0xffff
 2601  00002ee8  256bd338	addui	r11,r11,(LC3_LF3)&0xffff
 2602  00002eec  afab0000	sw	(r29),r11
 2603  00002ef0  3c010000	lhi	r1,((_nfreepages_LF3)>>16)&0xffff
 2604  00002ef4  2421d41c	addui	r1,r1,(_nfreepages_LF3)&0xffff
 2605  00002ef8  8c210000	lw	r1,(r1)
 2606  00002efc  afa10004	sw	4(r29),r1
 2607  00002f00  0c007444	jal	_printf
 2608  00002f04  54000000	nop; not filled.
 2609  00002f08  23bd0008	addi	r29,r29,#8
 2610  00002f0c          	L91_LF3:
 2611  00002f0c  8fa20000	lw	r2,0(r29)
 2612  00002f10  8fa30004	lw	r3,4(r29)
 2613  00002f14  8fa40008	lw	r4,8(r29)
 2614  00002f18  8fa5000c	lw	r5,12(r29)
 2615  00002f1c  8fa60010	lw	r6,16(r29)
 2616  00002f20  8fa70014	lw	r7,20(r29)
 2617  00002f24  8fa80018	lw	r8,24(r29)
 2618  00002f28  8fa9001c	lw	r9,28(r29)
 2619  00002f2c  8faa0020	lw	r10,32(r29)
 2620  00002f30  8fab0024	lw	r11,36(r29)
 2621  00002f34  8fdffff8	lw	r31,-8(r30)
 2622  00002f38  001ee820	add	r29,r0,r30
 2623  00002f3c  8fdefffc	lw	r30,-4(r30)
 2624  00002f40  4be00000	jr	r31
 2625  00002f44  54000000	nop
 2626  00002f48          	.endproc _MemoryModuleInit
 2627  00002f48          	.data
 2628  0000d354          	.align 2
 2629  0000d354          	_mapnum42_LF3:
 2630  0000d354  00000000	.word 0
 2631  0000d358          	.align 2
 2632  0000d358          	LC4_LF3:
 2633  0000d358  416c6c6f	.ascii "Allocating memory, starting with page %d\n\000"
 2633  0000d35c  63617469	
 2633  0000d360  6e67206d	
 2633  0000d364  656d6f72	
 2633  0000d368  792c2073	
 2633  0000d36c  74617274	
 2633  0000d370  696e6720	
 2633  0000d374  77697468	
 2633  0000d378  20706167	
 2633  0000d37c  65202564	
 2633  0000d380  0a00    	
 2634  0000d382          	.align 2
 2635  0000d384          	LC5_LF3:
 2636  0000d384  416c6c6f	.ascii "Allocated memory, from map %d, page %d, map=0x%x.\n\000"
 2636  0000d388  63617465	
 2636  0000d38c  64206d65	
 2636  0000d390  6d6f7279	
 2636  0000d394  2c206672	
 2636  0000d398  6f6d206d	
 2636  0000d39c  61702025	
 2636  0000d3a0  642c2070	
 2636  0000d3a4  61676520	
 2636  0000d3a8  25642c20	
 2636  0000d3ac  6d61703d	
 2636  0000d3b0  30782578	
 2636  0000d3b4  2e0a00  	
 2637  0000d3b7          	.text
 2638  00002f48          	.align 2
 2639  00002f48          	.proc _MemoryAllocPage
 2640  00002f48          	.global _MemoryAllocPage
 2641  00002f48          	_MemoryAllocPage:
 2642                      ;  Function 'MemoryAllocPage'; 0 bytes of locals, 6 regs to save.
 2643  00002f48  afbefffc	sw	-4(r29),r30; push fp
 2644  00002f4c  001df020	add	r30,r0,r29; fp = sp
 2645  00002f50  afbffff8	sw	-8(r29),r31; push ret addr
 2646  00002f54  2fbd0020	subui	r29,r29,#32; alloc local storage
 2647  00002f58  afa20000	sw	0(r29),r2
 2648  00002f5c  afa30004	sw	4(r29),r3
 2649  00002f60  afa40008	sw	8(r29),r4
 2650  00002f64  afa5000c	sw	12(r29),r5
 2651  00002f68  afa60010	sw	16(r29),r6
 2652  00002f6c  afa70014	sw	20(r29),r7
 2653  00002f70  3c010000	lhi	r1,((_nfreepages_LF3)>>16)&0xffff
 2654  00002f74  2421d41c	addui	r1,r1,(_nfreepages_LF3)&0xffff
 2655  00002f78  8c210000	lw	r1,(r1)
 2656  00002f7c  64210000	snei	r1,r1,#0
 2657  00002f80  14200010	bnez	r1,L111_LF3
 2658  00002f84  54000000	nop; not filled.
 2659  00002f88  20010000	addi	r1,r0,#0
 2660  00002f8c  08000238	j	L127_LF3
 2661  00002f90  54000000	nop; not filled.
 2662  00002f94          	L111_LF3:
 2663  00002f94  23bdfff8	addi	r29,r29,#-8
 2664  00002f98  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2665  00002f9c  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 2666  00002fa0  afa20000	sw	(r29),r2
 2667  00002fa4  2007006d	addi	r7,r0,#109
 2668  00002fa8  afa70004	sw	4(r29),r7
 2669  00002fac  0c000e68	jal	_dindex
 2670  00002fb0  54000000	nop; not filled.
 2671  00002fb4  23bd0008	addi	r29,r29,#8
 2672  00002fb8  64210000	snei	r1,r1,#0
 2673  00002fbc  1420002c	bnez	r1,L113_LF3
 2674  00002fc0  54000000	nop; not filled.
 2675  00002fc4  23bdfff8	addi	r29,r29,#-8
 2676  00002fc8  afa20000	sw	(r29),r2
 2677  00002fcc  2007002b	addi	r7,r0,#43
 2678  00002fd0  afa70004	sw	4(r29),r7
 2679  00002fd4  0c000e40	jal	_dindex
 2680  00002fd8  54000000	nop; not filled.
 2681  00002fdc  23bd0008	addi	r29,r29,#8
 2682  00002fe0  64210000	snei	r1,r1,#0
 2683  00002fe4  10200030	beqz	r1,L112_LF3
 2684  00002fe8  54000000	nop; not filled.
 2685  00002fec          	L113_LF3:
 2686  00002fec  23bdfff8	addi	r29,r29,#-8
 2687  00002ff0  3c070000	lhi	r7,((LC4_LF3)>>16)&0xffff
 2688  00002ff4  24e7d358	addui	r7,r7,(LC4_LF3)&0xffff
 2689  00002ff8  afa70000	sw	(r29),r7
 2690  00002ffc  3c010000	lhi	r1,((_mapnum42_LF3)>>16)&0xffff
 2691  00003000  2421d354	addui	r1,r1,(_mapnum42_LF3)&0xffff
 2692  00003004  8c210000	lw	r1,(r1)
 2693  00003008  afa10004	sw	4(r29),r1
 2694  0000300c  0c007338	jal	_printf
 2695  00003010  54000000	nop; not filled.
 2696  00003014  23bd0008	addi	r29,r29,#8
 2697  00003018          	L112_LF3:
 2698  00003018  3c020000	lhi	r2,((_mapnum42_LF3)>>16)&0xffff
 2699  0000301c  2442d354	addui	r2,r2,(_mapnum42_LF3)&0xffff
 2700  00003020  8c410000	lw	r1,(r2)
 2701  00003024  3c040000	lhi	r4,((_freepages_LF3)>>16)&0xffff
 2702  00003028  2484d420	addui	r4,r4,(_freepages_LF3)&0xffff
 2703  0000302c  50210002	slli	r1,r1,#0x2
 2704  00003030  00240820	add	r1,r1,r4
 2705  00003034  8c210000	lw	r1,(r1)
 2706  00003038  64210000	snei	r1,r1,#0
 2707  0000303c  1420004c	bnez	r1,L115_LF3
 2708  00003040  54000000	nop; not filled.
 2709  00003044  3c010000	lhi	r1,((_freemapmax_LF3)>>16)&0xffff
 2710  00003048  2421d418	addui	r1,r1,(_freemapmax_LF3)&0xffff
 2711  0000304c  8c230000	lw	r3,(r1)
 2712  00003050          	L116_LF3:
 2713  00003050  8c410000	lw	r1,(r2)
 2714  00003054  20210001	addi	r1,r1,#1
 2715  00003058  ac410000	sw	(r2),r1
 2716  0000305c  0023082d	sge	r1,r1,r3
 2717  00003060  1020000c	beqz	r1,L114_LF3
 2718  00003064  54000000	nop; not filled.
 2719  00003068  20070000	addi	r7,r0,#0
 2720  0000306c  ac470000	sw	(r2),r7
 2721  00003070          	L114_LF3:
 2722  00003070  8c410000	lw	r1,(r2)
 2723  00003074  50210002	slli	r1,r1,#0x2
 2724  00003078  00240820	add	r1,r1,r4
 2725  0000307c  8c210000	lw	r1,(r1)
 2726  00003080  64210000	snei	r1,r1,#0
 2727  00003084  1020ffc8	beqz	r1,L116_LF3
 2728  00003088  54000000	nop; not filled.
 2729  0000308c          	L115_LF3:
 2730  0000308c  3c010000	lhi	r1,((_mapnum42_LF3)>>16)&0xffff
 2731  00003090  2421d354	addui	r1,r1,(_mapnum42_LF3)&0xffff
 2732  00003094  8c210000	lw	r1,(r1)
 2733  00003098  50210002	slli	r1,r1,#0x2
 2734  0000309c  3c070000	lhi	r7,((_freepages_LF3)>>16)&0xffff
 2735  000030a0  24e7d420	addui	r7,r7,(_freepages_LF3)&0xffff
 2736  000030a4  00270820	add	r1,r1,r7
 2737  000030a8  8c230000	lw	r3,(r1)
 2738  000030ac  201f0000	addi	r31,r0,#0
 2739  000030b0  30610001	andi	r1,r3,#1
 2740  000030b4  14200020	bnez	r1,L120_LF3
 2741  000030b8  54000000	nop; not filled.
 2742  000030bc  20020001	addi	r2,r0,#1
 2743  000030c0          	L121_LF3:
 2744  000030c0  23ff0001	addi	r31,r31,#1
 2745  000030c4  005f0804	sll	r1,r2,r31
 2746  000030c8  00610824	and	r1,r3,r1
 2747  000030cc  64210000	snei	r1,r1,#0
 2748  000030d0  1020ffec	beqz	r1,L121_LF3
 2749  000030d4  54000000	nop; not filled.
 2750  000030d8          	L120_LF3:
 2751  000030d8  20010001	addi	r1,r0,#1
 2752  000030dc  003f1004	sll	r2,r1,r31
 2753  000030e0  3c010000	lhi	r1,((_negativeone_LF3)>>16)&0xffff
 2754  000030e4  2421d2c4	addui	r1,r1,(_negativeone_LF3)&0xffff
 2755  000030e8  8c210000	lw	r1,(r1)
 2756  000030ec  00412026	xor	r4,r2,r1
 2757  000030f0  3c050000	lhi	r5,((_mapnum42_LF3)>>16)&0xffff
 2758  000030f4  24a5d354	addui	r5,r5,(_mapnum42_LF3)&0xffff
 2759  000030f8  8ca30000	lw	r3,(r5)
 2760  000030fc  3c060000	lhi	r6,((_freepages_LF3)>>16)&0xffff
 2761  00003100  24c6d420	addui	r6,r6,(_freepages_LF3)&0xffff
 2762  00003104  50610002	slli	r1,r3,#0x2
 2763  00003108  00261020	add	r2,r1,r6
 2764  0000310c  8c410000	lw	r1,(r2)
 2765  00003110  00240824	and	r1,r1,r4
 2766  00003114  ac410000	sw	(r2),r1
 2767  00003118  50610005	slli	r1,r3,#0x5
 2768  0000311c  003f1820	add	r3,r1,r31
 2769  00003120  23bdfff8	addi	r29,r29,#-8
 2770  00003124  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2771  00003128  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 2772  0000312c  afa20000	sw	(r29),r2
 2773  00003130  2007006d	addi	r7,r0,#109
 2774  00003134  afa70004	sw	4(r29),r7
 2775  00003138  0c000cdc	jal	_dindex
 2776  0000313c  54000000	nop; not filled.
 2777  00003140  23bd0008	addi	r29,r29,#8
 2778  00003144  64210000	snei	r1,r1,#0
 2779  00003148  1420002c	bnez	r1,L126_LF3
 2780  0000314c  54000000	nop; not filled.
 2781  00003150  23bdfff8	addi	r29,r29,#-8
 2782  00003154  afa20000	sw	(r29),r2
 2783  00003158  2007002b	addi	r7,r0,#43
 2784  0000315c  afa70004	sw	4(r29),r7
 2785  00003160  0c000cb4	jal	_dindex
 2786  00003164  54000000	nop; not filled.
 2787  00003168  23bd0008	addi	r29,r29,#8
 2788  0000316c  64210000	snei	r1,r1,#0
 2789  00003170  1020003c	beqz	r1,L125_LF3
 2790  00003174  54000000	nop; not filled.
 2791  00003178          	L126_LF3:
 2792  00003178  23bdfff0	addi	r29,r29,#-16
 2793  0000317c  3c070000	lhi	r7,((LC5_LF3)>>16)&0xffff
 2794  00003180  24e7d384	addui	r7,r7,(LC5_LF3)&0xffff
 2795  00003184  afa70000	sw	(r29),r7
 2796  00003188  8ca10000	lw	r1,(r5)
 2797  0000318c  afa10004	sw	4(r29),r1
 2798  00003190  afa30008	sw	8(r29),r3
 2799  00003194  50210002	slli	r1,r1,#0x2
 2800  00003198  00260820	add	r1,r1,r6
 2801  0000319c  8c210000	lw	r1,(r1)
 2802  000031a0  afa1000c	sw	12(r29),r1
 2803  000031a4  0c0071a0	jal	_printf
 2804  000031a8  54000000	nop; not filled.
 2805  000031ac  23bd0010	addi	r29,r29,#16
 2806  000031b0          	L125_LF3:
 2807  000031b0  3c010000	lhi	r1,((_nfreepages_LF3)>>16)&0xffff
 2808  000031b4  2421d41c	addui	r1,r1,(_nfreepages_LF3)&0xffff
 2809  000031b8  8c220000	lw	r2,(r1)
 2810  000031bc  2042ffff	addi	r2,r2,#-1
 2811  000031c0  ac220000	sw	(r1),r2
 2812  000031c4  00030820	add	r1,r0,r3
 2813  000031c8          	L127_LF3:
 2814  000031c8  8fa20000	lw	r2,0(r29)
 2815  000031cc  8fa30004	lw	r3,4(r29)
 2816  000031d0  8fa40008	lw	r4,8(r29)
 2817  000031d4  8fa5000c	lw	r5,12(r29)
 2818  000031d8  8fa60010	lw	r6,16(r29)
 2819  000031dc  8fa70014	lw	r7,20(r29)
 2820  000031e0  8fdffff8	lw	r31,-8(r30)
 2821  000031e4  001ee820	add	r29,r0,r30
 2822  000031e8  8fdefffc	lw	r30,-4(r30)
 2823  000031ec  4be00000	jr	r31
 2824  000031f0  54000000	nop
 2825  000031f4          	.endproc _MemoryAllocPage
 2826  000031f4          	.data
 2827  0000d3b7          	.align 2
 2828  0000d3b8          	LC6_LF3:
 2829  0000d3b8  46726565	.ascii "Freed page 0x%x, %d remaining.\n\000"
 2829  0000d3bc  64207061	
 2829  0000d3c0  67652030	
 2829  0000d3c4  7825782c	
 2829  0000d3c8  20256420	
 2829  0000d3cc  72656d61	
 2829  0000d3d0  696e696e	
 2829  0000d3d4  672e0a00	
 2830  0000d3d8          	.text
 2831  000031f4          	.align 2
 2832  000031f4          	.proc _MemoryFreePage
 2833  000031f4          	.global _MemoryFreePage
 2834  000031f4          	_MemoryFreePage:
 2835                      ;  Function 'MemoryFreePage'; 0 bytes of locals, 6 regs to save.
 2836  000031f4  afbefffc	sw	-4(r29),r30; push fp
 2837  000031f8  001df020	add	r30,r0,r29; fp = sp
 2838  000031fc  afbffff8	sw	-8(r29),r31; push ret addr
 2839  00003200  2fbd0020	subui	r29,r29,#32; alloc local storage
 2840  00003204  afa20000	sw	0(r29),r2
 2841  00003208  afa30004	sw	4(r29),r3
 2842  0000320c  afa40008	sw	8(r29),r4
 2843  00003210  afa5000c	sw	12(r29),r5
 2844  00003214  afa60010	sw	16(r29),r6
 2845  00003218  afa70014	sw	20(r29),r7
 2846  0000321c  8fc60000	lw	r6,(r30)
 2847  00003220  20030001	addi	r3,r0,#1
 2848  00003224  00061020	add	r2,r0,r6
 2849  00003228  74c10000	sgei	r1,r6,#0
 2850  0000322c  14200008	bnez	r1,L130_LF3
 2851  00003230  54000000	nop; not filled.
 2852  00003234  20c2001f	addi	r2,r6,#31
 2853  00003238          	L130_LF3:
 2854  00003238  5c450005	srai	r5,r2,#0x5
 2855  0000323c  50a10005	slli	r1,r5,#0x5
 2856  00003240  00c10822	sub	r1,r6,r1
 2857  00003244  00611804	sll	r3,r3,r1
 2858  00003248  3c010000	lhi	r1,((_negativeone_LF3)>>16)&0xffff
 2859  0000324c  2421d2c4	addui	r1,r1,(_negativeone_LF3)&0xffff
 2860  00003250  8c210000	lw	r1,(r1)
 2861  00003254  00611026	xor	r2,r3,r1
 2862  00003258  50a10002	slli	r1,r5,#0x2
 2863  0000325c  3c070000	lhi	r7,((_freepages_LF3)>>16)&0xffff
 2864  00003260  24e7d420	addui	r7,r7,(_freepages_LF3)&0xffff
 2865  00003264  00272020	add	r4,r1,r7
 2866  00003268  8c810000	lw	r1,(r4)
 2867  0000326c  00220824	and	r1,r1,r2
 2868  00003270  00230825	or	r1,r1,r3
 2869  00003274  ac810000	sw	(r4),r1
 2870  00003278  23bdfff8	addi	r29,r29,#-8
 2871  0000327c  3c070000	lhi	r7,((_debugstr)>>16)&0xffff
 2872  00003280  24e7fd4a	addui	r7,r7,(_debugstr)&0xffff
 2873  00003284  afa70000	sw	(r29),r7
 2874  00003288  2007006d	addi	r7,r0,#109
 2875  0000328c  afa70004	sw	4(r29),r7
 2876  00003290  0c000b84	jal	_dindex
 2877  00003294  54000000	nop; not filled.
 2878  00003298  23bd0008	addi	r29,r29,#8
 2879  0000329c  64210000	snei	r1,r1,#0
 2880  000032a0  14200034	bnez	r1,L134_LF3
 2881  000032a4  54000000	nop; not filled.
 2882  000032a8  23bdfff8	addi	r29,r29,#-8
 2883  000032ac  3c070000	lhi	r7,((_debugstr)>>16)&0xffff
 2884  000032b0  24e7fd4a	addui	r7,r7,(_debugstr)&0xffff
 2885  000032b4  afa70000	sw	(r29),r7
 2886  000032b8  2007002b	addi	r7,r0,#43
 2887  000032bc  afa70004	sw	4(r29),r7
 2888  000032c0  0c000b54	jal	_dindex
 2889  000032c4  54000000	nop; not filled.
 2890  000032c8  23bd0008	addi	r29,r29,#8
 2891  000032cc  64210000	snei	r1,r1,#0
 2892  000032d0  1020002c	beqz	r1,L129_LF3
 2893  000032d4  54000000	nop; not filled.
 2894  000032d8          	L134_LF3:
 2895  000032d8  23bdfff0	addi	r29,r29,#-16
 2896  000032dc  3c070000	lhi	r7,((LC0_LF3)>>16)&0xffff
 2897  000032e0  24e7d2c8	addui	r7,r7,(LC0_LF3)&0xffff
 2898  000032e4  afa70000	sw	(r29),r7
 2899  000032e8  afa50004	sw	4(r29),r5
 2900  000032ec  8c840000	lw	r4,(r4)
 2901  000032f0  afa40008	sw	8(r29),r4
 2902  000032f4  0c007050	jal	_printf
 2903  000032f8  54000000	nop; not filled.
 2904  000032fc  23bd0010	addi	r29,r29,#16
 2905  00003300          	L129_LF3:
 2906  00003300  3c020000	lhi	r2,((_nfreepages_LF3)>>16)&0xffff
 2907  00003304  2442d41c	addui	r2,r2,(_nfreepages_LF3)&0xffff
 2908  00003308  8c410000	lw	r1,(r2)
 2909  0000330c  20210001	addi	r1,r1,#1
 2910  00003310  ac410000	sw	(r2),r1
 2911  00003314  23bdfff8	addi	r29,r29,#-8
 2912  00003318  3c030000	lhi	r3,((_debugstr)>>16)&0xffff
 2913  0000331c  2463fd4a	addui	r3,r3,(_debugstr)&0xffff
 2914  00003320  afa30000	sw	(r29),r3
 2915  00003324  2007006d	addi	r7,r0,#109
 2916  00003328  afa70004	sw	4(r29),r7
 2917  0000332c  0c000ae8	jal	_dindex
 2918  00003330  54000000	nop; not filled.
 2919  00003334  23bd0008	addi	r29,r29,#8
 2920  00003338  64210000	snei	r1,r1,#0
 2921  0000333c  1420002c	bnez	r1,L136_LF3
 2922  00003340  54000000	nop; not filled.
 2923  00003344  23bdfff8	addi	r29,r29,#-8
 2924  00003348  afa30000	sw	(r29),r3
 2925  0000334c  2007002b	addi	r7,r0,#43
 2926  00003350  afa70004	sw	4(r29),r7
 2927  00003354  0c000ac0	jal	_dindex
 2928  00003358  54000000	nop; not filled.
 2929  0000335c  23bd0008	addi	r29,r29,#8
 2930  00003360  64210000	snei	r1,r1,#0
 2931  00003364  1020002c	beqz	r1,L135_LF3
 2932  00003368  54000000	nop; not filled.
 2933  0000336c          	L136_LF3:
 2934  0000336c  23bdfff0	addi	r29,r29,#-16
 2935  00003370  3c070000	lhi	r7,((LC6_LF3)>>16)&0xffff
 2936  00003374  24e7d3b8	addui	r7,r7,(LC6_LF3)&0xffff
 2937  00003378  afa70000	sw	(r29),r7
 2938  0000337c  afa60004	sw	4(r29),r6
 2939  00003380  8c420000	lw	r2,(r2)
 2940  00003384  afa20008	sw	8(r29),r2
 2941  00003388  0c006fbc	jal	_printf
 2942  0000338c  54000000	nop; not filled.
 2943  00003390  23bd0010	addi	r29,r29,#16
 2944  00003394          	L135_LF3:
 2945  00003394  8fa20000	lw	r2,0(r29)
 2946  00003398  8fa30004	lw	r3,4(r29)
 2947  0000339c  8fa40008	lw	r4,8(r29)
 2948  000033a0  8fa5000c	lw	r5,12(r29)
 2949  000033a4  8fa60010	lw	r6,16(r29)
 2950  000033a8  8fa70014	lw	r7,20(r29)
 2951  000033ac  8fdffff8	lw	r31,-8(r30)
 2952  000033b0  001ee820	add	r29,r0,r30
 2953  000033b4  8fdefffc	lw	r30,-4(r30)
 2954  000033b8  4be00000	jr	r31
 2955  000033bc  54000000	nop
 2956  000033c0          	.endproc _MemoryFreePage
 2957  000033c0          	.align 2
 2958  000033c0          	.proc _MemoryTranslateUserToSystem
 2959  000033c0          	.global _MemoryTranslateUserToSystem
 2960  000033c0          	_MemoryTranslateUserToSystem:
 2961                      ;  Function 'MemoryTranslateUserToSystem'; 0 bytes of locals, 3 regs to save.
 2962  000033c0  afbefffc	sw	-4(r29),r30; push fp
 2963  000033c4  001df020	add	r30,r0,r29; fp = sp
 2964  000033c8  afbffff8	sw	-8(r29),r31; push ret addr
 2965  000033cc  2fbd0018	subui	r29,r29,#24; alloc local storage
 2966  000033d0  afa20000	sw	0(r29),r2
 2967  000033d4  afa30004	sw	4(r29),r3
 2968  000033d8  afa40008	sw	8(r29),r4
 2969  000033dc  8fc30000	lw	r3,(r30)
 2970  000033e0  8fc10004	lw	r1,4(r30)
 2971  000033e4  583f0010	srli	r31,r1,#0x10
 2972  000033e8  3022ffff	andi	r2,r1,#0xffff
 2973  000033ec  8c6100a0	lw	r1,160(r3)
 2974  000033f0  03e1082b	sgt	r1,r31,r1
 2975  000033f4  14200024	bnez	r1,L140_LF3
 2976  000033f8  54000000	nop; not filled.
 2977  000033fc  53e10002	slli	r1,r31,#0x2
 2978  00003400  00230820	add	r1,r1,r3
 2979  00003404  8c210060	lw	r1,96(r1)
 2980  00003408  2004fff8	addi	r4,r0,#-8
 2981  0000340c  00240824	and	r1,r1,r4
 2982  00003410  00220820	add	r1,r1,r2
 2983  00003414  08000008	j	L141_LF3
 2984  00003418  54000000	nop; not filled.
 2985  0000341c          	L140_LF3:
 2986  0000341c  20010000	addi	r1,r0,#0
 2987  00003420          	L141_LF3:
 2988  00003420  8fa20000	lw	r2,0(r29)
 2989  00003424  8fa30004	lw	r3,4(r29)
 2990  00003428  8fa40008	lw	r4,8(r29)
 2991  0000342c  8fdffff8	lw	r31,-8(r30)
 2992  00003430  001ee820	add	r29,r0,r30
 2993  00003434  8fdefffc	lw	r30,-4(r30)
 2994  00003438  4be00000	jr	r31
 2995  0000343c  54000000	nop
 2996  00003440          	.endproc _MemoryTranslateUserToSystem
 2997  00003440          	.align 2
 2998  00003440          	.proc _MemoryCopySystemToUser
 2999  00003440          	.global _MemoryCopySystemToUser
 3000  00003440          	_MemoryCopySystemToUser:
 3001                      ;  Function 'MemoryCopySystemToUser'; 0 bytes of locals, 8 regs to save.
 3002  00003440  afbefffc	sw	-4(r29),r30; push fp
 3003  00003444  001df020	add	r30,r0,r29; fp = sp
 3004  00003448  afbffff8	sw	-8(r29),r31; push ret addr
 3005  0000344c  2fbd0028	subui	r29,r29,#40; alloc local storage
 3006  00003450  afa20000	sw	0(r29),r2
 3007  00003454  afa30004	sw	4(r29),r3
 3008  00003458  afa40008	sw	8(r29),r4
 3009  0000345c  afa5000c	sw	12(r29),r5
 3010  00003460  afa60010	sw	16(r29),r6
 3011  00003464  afa70014	sw	20(r29),r7
 3012  00003468  afa80018	sw	24(r29),r8
 3013  0000346c  afa9001c	sw	28(r29),r9
 3014  00003470  8fc70000	lw	r7,(r30)
 3015  00003474  8fc50004	lw	r5,4(r30)
 3016  00003478  8fc40008	lw	r4,8(r30)
 3017  0000347c  8fc3000c	lw	r3,12(r30)
 3018  00003480  20060000	addi	r6,r0,#0
 3019  00003484  6c610000	sgti	r1,r3,#0
 3020  00003488  102000a4	beqz	r1,L168_LF3
 3021  0000348c  54000000	nop; not filled.
 3022  00003490  3c080001	lhi	r8,#1
 3023  00003494  25080000	addui	r8,r8,#0
 3024  00003498          	L169_LF3:
 3025  00003498  58820010	srli	r2,r4,#0x10
 3026  0000349c  309fffff	andi	r31,r4,#0xffff
 3027  000034a0  8ce100a0	lw	r1,160(r7)
 3028  000034a4  0041082b	sgt	r1,r2,r1
 3029  000034a8  10200010	beqz	r1,L171_LF3
 3030  000034ac  54000000	nop; not filled.
 3031  000034b0  201f0000	addi	r31,r0,#0
 3032  000034b4  0800001c	j	L170_LF3
 3033  000034b8  54000000	nop; not filled.
 3034  000034bc          	L171_LF3:
 3035  000034bc  50410002	slli	r1,r2,#0x2
 3036  000034c0  00270820	add	r1,r1,r7
 3037  000034c4  8c210060	lw	r1,96(r1)
 3038  000034c8  2009fff8	addi	r9,r0,#-8
 3039  000034cc  00290824	and	r1,r1,r9
 3040  000034d0  003ff820	add	r31,r1,r31
 3041  000034d4          	L170_LF3:
 3042  000034d4  67e10000	snei	r1,r31,#0
 3043  000034d8  10200054	beqz	r1,L168_LF3
 3044  000034dc  54000000	nop; not filled.
 3045  000034e0  33e1ffff	andi	r1,r31,#65535
 3046  000034e4  01011022	sub	r2,r8,r1
 3047  000034e8  0043082b	sgt	r1,r2,r3
 3048  000034ec  10200008	beqz	r1,L173_LF3
 3049  000034f0  54000000	nop; not filled.
 3050  000034f4  00031020	add	r2,r0,r3
 3051  000034f8          	L173_LF3:
 3052  000034f8  23bdfff0	addi	r29,r29,#-16
 3053  000034fc  afa50000	sw	(r29),r5
 3054  00003500  afbf0004	sw	4(r29),r31
 3055  00003504  afa20008	sw	8(r29),r2
 3056  00003508  0c000c9c	jal	_bcopy
 3057  0000350c  54000000	nop; not filled.
 3058  00003510  23bd0010	addi	r29,r29,#16
 3059  00003514  00621822	sub	r3,r3,r2
 3060  00003518  00c23020	add	r6,r6,r2
 3061  0000351c  00a22820	add	r5,r5,r2
 3062  00003520  00822020	add	r4,r4,r2
 3063  00003524  6c610000	sgti	r1,r3,#0
 3064  00003528  1420ff6c	bnez	r1,L169_LF3
 3065  0000352c  54000000	nop; not filled.
 3066  00003530          	L168_LF3:
 3067  00003530  00060820	add	r1,r0,r6
 3068  00003534  8fa20000	lw	r2,0(r29)
 3069  00003538  8fa30004	lw	r3,4(r29)
 3070  0000353c  8fa40008	lw	r4,8(r29)
 3071  00003540  8fa5000c	lw	r5,12(r29)
 3072  00003544  8fa60010	lw	r6,16(r29)
 3073  00003548  8fa70014	lw	r7,20(r29)
 3074  0000354c  8fa80018	lw	r8,24(r29)
 3075  00003550  8fa9001c	lw	r9,28(r29)
 3076  00003554  8fdffff8	lw	r31,-8(r30)
 3077  00003558  001ee820	add	r29,r0,r30
 3078  0000355c  8fdefffc	lw	r30,-4(r30)
 3079  00003560  4be00000	jr	r31
 3080  00003564  54000000	nop
 3081  00003568          	.endproc _MemoryCopySystemToUser
 3082  00003568          	.align 2
 3083  00003568          	.proc _MemoryCopyUserToSystem
 3084  00003568          	.global _MemoryCopyUserToSystem
 3085  00003568          	_MemoryCopyUserToSystem:
 3086                      ;  Function 'MemoryCopyUserToSystem'; 0 bytes of locals, 8 regs to save.
 3087  00003568  afbefffc	sw	-4(r29),r30; push fp
 3088  0000356c  001df020	add	r30,r0,r29; fp = sp
 3089  00003570  afbffff8	sw	-8(r29),r31; push ret addr
 3090  00003574  2fbd0028	subui	r29,r29,#40; alloc local storage
 3091  00003578  afa20000	sw	0(r29),r2
 3092  0000357c  afa30004	sw	4(r29),r3
 3093  00003580  afa40008	sw	8(r29),r4
 3094  00003584  afa5000c	sw	12(r29),r5
 3095  00003588  afa60010	sw	16(r29),r6
 3096  0000358c  afa70014	sw	20(r29),r7
 3097  00003590  afa80018	sw	24(r29),r8
 3098  00003594  afa9001c	sw	28(r29),r9
 3099  00003598  8fc70000	lw	r7,(r30)
 3100  0000359c  8fc50008	lw	r5,8(r30)
 3101  000035a0  8fc40004	lw	r4,4(r30)
 3102  000035a4  8fc3000c	lw	r3,12(r30)
 3103  000035a8  20060000	addi	r6,r0,#0
 3104  000035ac  6c610000	sgti	r1,r3,#0
 3105  000035b0  102000a4	beqz	r1,L192_LF3
 3106  000035b4  54000000	nop; not filled.
 3107  000035b8  3c080001	lhi	r8,#1
 3108  000035bc  25080000	addui	r8,r8,#0
 3109  000035c0          	L193_LF3:
 3110  000035c0  58820010	srli	r2,r4,#0x10
 3111  000035c4  309fffff	andi	r31,r4,#0xffff
 3112  000035c8  8ce100a0	lw	r1,160(r7)
 3113  000035cc  0041082b	sgt	r1,r2,r1
 3114  000035d0  10200010	beqz	r1,L195_LF3
 3115  000035d4  54000000	nop; not filled.
 3116  000035d8  201f0000	addi	r31,r0,#0
 3117  000035dc  0800001c	j	L194_LF3
 3118  000035e0  54000000	nop; not filled.
 3119  000035e4          	L195_LF3:
 3120  000035e4  50410002	slli	r1,r2,#0x2
 3121  000035e8  00270820	add	r1,r1,r7
 3122  000035ec  8c210060	lw	r1,96(r1)
 3123  000035f0  2009fff8	addi	r9,r0,#-8
 3124  000035f4  00290824	and	r1,r1,r9
 3125  000035f8  003ff820	add	r31,r1,r31
 3126  000035fc          	L194_LF3:
 3127  000035fc  67e10000	snei	r1,r31,#0
 3128  00003600  10200054	beqz	r1,L192_LF3
 3129  00003604  54000000	nop; not filled.
 3130  00003608  33e1ffff	andi	r1,r31,#65535
 3131  0000360c  01011022	sub	r2,r8,r1
 3132  00003610  0043082b	sgt	r1,r2,r3
 3133  00003614  10200008	beqz	r1,L198_LF3
 3134  00003618  54000000	nop; not filled.
 3135  0000361c  00031020	add	r2,r0,r3
 3136  00003620          	L198_LF3:
 3137  00003620  23bdfff0	addi	r29,r29,#-16
 3138  00003624  afbf0000	sw	(r29),r31
 3139  00003628  afa50004	sw	4(r29),r5
 3140  0000362c  afa20008	sw	8(r29),r2
 3141  00003630  0c000b74	jal	_bcopy
 3142  00003634  54000000	nop; not filled.
 3143  00003638  23bd0010	addi	r29,r29,#16
 3144  0000363c  00621822	sub	r3,r3,r2
 3145  00003640  00c23020	add	r6,r6,r2
 3146  00003644  00a22820	add	r5,r5,r2
 3147  00003648  00822020	add	r4,r4,r2
 3148  0000364c  6c610000	sgti	r1,r3,#0
 3149  00003650  1420ff6c	bnez	r1,L193_LF3
 3150  00003654  54000000	nop; not filled.
 3151  00003658          	L192_LF3:
 3152  00003658  00060820	add	r1,r0,r6
 3153  0000365c  8fa20000	lw	r2,0(r29)
 3154  00003660  8fa30004	lw	r3,4(r29)
 3155  00003664  8fa40008	lw	r4,8(r29)
 3156  00003668  8fa5000c	lw	r5,12(r29)
 3157  0000366c  8fa60010	lw	r6,16(r29)
 3158  00003670  8fa70014	lw	r7,20(r29)
 3159  00003674  8fa80018	lw	r8,24(r29)
 3160  00003678  8fa9001c	lw	r9,28(r29)
 3161  0000367c  8fdffff8	lw	r31,-8(r30)
 3162  00003680  001ee820	add	r29,r0,r30
 3163  00003684  8fdefffc	lw	r30,-4(r30)
 3164  00003688  4be00000	jr	r31
 3165  0000368c  54000000	nop
 3166  00003690          	.endproc _MemoryCopyUserToSystem
 3167  00003690          	.align 2
 3168  00003690          	.proc _MemorySetupPte
 3169  00003690          	.global _MemorySetupPte
 3170  00003690          	_MemorySetupPte:
 3171                      ;  Function 'MemorySetupPte'; 0 bytes of locals, 0 regs to save.
 3172  00003690  afbefffc	sw	-4(r29),r30; push fp
 3173  00003694  001df020	add	r30,r0,r29; fp = sp
 3174  00003698  afbffff8	sw	-8(r29),r31; push ret addr
 3175  0000369c  2fbd0008	subui	r29,r29,#8; alloc local storage
 3176  000036a0  8fc10000	lw	r1,(r30)
 3177  000036a4  50210010	slli	r1,r1,#0x10
 3178  000036a8  34210001	ori	r1,r1,#1
 3179  000036ac  8fdffff8	lw	r31,-8(r30)
 3180  000036b0  001ee820	add	r29,r0,r30
 3181  000036b4  8fdefffc	lw	r30,-4(r30)
 3182  000036b8  4be00000	jr	r31
 3183  000036bc  54000000	nop
 3184  000036c0          	.endproc _MemorySetupPte
 3185  000036c0          	.align 2
 3186  000036c0          	.proc _MemoryFreePte
 3187  000036c0          	.global _MemoryFreePte
 3188  000036c0          	_MemoryFreePte:
 3189                      ;  Function 'MemoryFreePte'; 0 bytes of locals, 0 regs to save.
 3190  000036c0  afbefffc	sw	-4(r29),r30; push fp
 3191  000036c4  001df020	add	r30,r0,r29; fp = sp
 3192  000036c8  afbffff8	sw	-8(r29),r31; push ret addr
 3193  000036cc  2fbd0008	subui	r29,r29,#8; alloc local storage
 3194  000036d0  23bdfff8	addi	r29,r29,#-8
 3195  000036d4  97c10000	lhu	r1,(r30)
 3196  000036d8  afa10000	sw	(r29),r1
 3197  000036dc  0ffffb14	jal	_MemoryFreePage
 3198  000036e0  54000000	nop; not filled.
 3199  000036e4  23bd0008	addi	r29,r29,#8
 3200  000036e8  8fdffff8	lw	r31,-8(r30)
 3201  000036ec  001ee820	add	r29,r0,r30
 3202  000036f0  8fdefffc	lw	r30,-4(r30)
 3203  000036f4  4be00000	jr	r31
 3204  000036f8  54000000	nop
 3205  000036fc          	.endproc _MemoryFreePte
 3206  000036fc          	.align 2
 3207  000036fc          	.proc _MemoryPteToPage
 3208  000036fc          	.global _MemoryPteToPage
 3209  000036fc          	_MemoryPteToPage:
 3210                      ;  Function 'MemoryPteToPage'; 0 bytes of locals, 0 regs to save.
 3211  000036fc  afbefffc	sw	-4(r29),r30; push fp
 3212  00003700  001df020	add	r30,r0,r29; fp = sp
 3213  00003704  afbffff8	sw	-8(r29),r31; push ret addr
 3214  00003708  2fbd0008	subui	r29,r29,#8; alloc local storage
 3215  0000370c  8fc10000	lw	r1,(r30)
 3216  00003710  201ffff8	addi	r31,r0,#-8
 3217  00003714  003f0824	and	r1,r1,r31
 3218  00003718  8fdffff8	lw	r31,-8(r30)
 3219  0000371c  001ee820	add	r29,r0,r30
 3220  00003720  8fdefffc	lw	r30,-4(r30)
 3221  00003724  4be00000	jr	r31
 3222  00003728  54000000	nop
 3223  0000372c          	.endproc _MemoryPteToPage
 3224  0000372c          	.data
 3225  0000d3d8          	.align 2
 3226  0000d3d8          	_invalidOps61_LF3:
 3227  0000d3d8  00003404	.word 13316
 3228  0000d3dc          	.align 2
 3229  0000d3dc          	LC7_LF3:
 3230  0000d3dc  4f706572	.ascii "Operand for instruction %08x is 0x%x (reg=<%d,0x%x>)\n\000"
 3230  0000d3e0  616e6420	
 3230  0000d3e4  666f7220	
 3230  0000d3e8  696e7374	
 3230  0000d3ec  72756374	
 3230  0000d3f0  696f6e20	
 3230  0000d3f4  25303878	
 3230  0000d3f8  20697320	
 3230  0000d3fc  30782578	
 3230  0000d400  20287265	
 3230  0000d404  673d3c25	
 3230  0000d408  642c3078	
 3230  0000d40c  25783e29	
 3230  0000d410  0a00    	
 3231  0000d412          	.text
 3232  0000372c          	.align 2
 3233  0000372c          	.proc _MemoryGetOperandAddress
 3234  0000372c          	.global _MemoryGetOperandAddress
 3235  0000372c          	_MemoryGetOperandAddress:
 3236                      ;  Function 'MemoryGetOperandAddress'; 0 bytes of locals, 6 regs to save.
 3237  0000372c  afbefffc	sw	-4(r29),r30; push fp
 3238  00003730  001df020	add	r30,r0,r29; fp = sp
 3239  00003734  afbffff8	sw	-8(r29),r31; push ret addr
 3240  00003738  2fbd0020	subui	r29,r29,#32; alloc local storage
 3241  0000373c  afa20000	sw	0(r29),r2
 3242  00003740  afa30004	sw	4(r29),r3
 3243  00003744  afa40008	sw	8(r29),r4
 3244  00003748  afa5000c	sw	12(r29),r5
 3245  0000374c  afa60010	sw	16(r29),r6
 3246  00003750  afa70014	sw	20(r29),r7
 3247  00003754  8fc20000	lw	r2,(r30)
 3248  00003758  8fc50004	lw	r5,4(r30)
 3249  0000375c  58a1001a	srli	r1,r5,#0x1a
 3250  00003760  203fffe0	addi	r31,r1,#-32
 3251  00003764  6fe1000f	sgtui	r1,r31,#15
 3252  00003768  14200020	bnez	r1,L215_LF3
 3253  0000376c  54000000	nop; not filled.
 3254  00003770  3c010000	lhi	r1,((_invalidOps61_LF3)>>16)&0xffff
 3255  00003774  2421d3d8	addui	r1,r1,(_invalidOps61_LF3)&0xffff
 3256  00003778  8c210000	lw	r1,(r1)
 3257  0000377c  003f0806	srl	r1,r1,r31
 3258  00003780  30210001	andi	r1,r1,#1
 3259  00003784  10200010	beqz	r1,L214_LF3
 3260  00003788  54000000	nop; not filled.
 3261  0000378c          	L215_LF3:
 3262  0000378c  2001ffff	addi	r1,r0,#-1
 3263  00003790  080000c4	j	L219_LF3
 3264  00003794  54000000	nop; not filled.
 3265  00003798          	L214_LF3:
 3266  00003798  58a10015	srli	r1,r5,#0x15
 3267  0000379c  3026001f	andi	r6,r1,#31
 3268  000037a0  30bfffff	andi	r31,r5,#0xffff
 3269  000037a4  5be1000f	srli	r1,r31,#0xf
 3270  000037a8  10200010	beqz	r1,L216_LF3
 3271  000037ac  54000000	nop; not filled.
 3272  000037b0  3c07ffff	lhi	r7,#-1
 3273  000037b4  24e70000	addui	r7,r7,#0
 3274  000037b8  03e7f825	or	r31,r31,r7
 3275  000037bc          	L216_LF3:
 3276  000037bc  8c420000	lw	r2,(r2)
 3277  000037c0  50c10002	slli	r1,r6,#0x2
 3278  000037c4  00220820	add	r1,r1,r2
 3279  000037c8  8c230028	lw	r3,40(r1)
 3280  000037cc  007f2020	add	r4,r3,r31
 3281  000037d0  23bdfff8	addi	r29,r29,#-8
 3282  000037d4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 3283  000037d8  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 3284  000037dc  afa20000	sw	(r29),r2
 3285  000037e0  2007006d	addi	r7,r0,#109
 3286  000037e4  afa70004	sw	4(r29),r7
 3287  000037e8  0c00062c	jal	_dindex
 3288  000037ec  54000000	nop; not filled.
 3289  000037f0  23bd0008	addi	r29,r29,#8
 3290  000037f4  64210000	snei	r1,r1,#0
 3291  000037f8  1420002c	bnez	r1,L218_LF3
 3292  000037fc  54000000	nop; not filled.
 3293  00003800  23bdfff8	addi	r29,r29,#-8
 3294  00003804  afa20000	sw	(r29),r2
 3295  00003808  2007002b	addi	r7,r0,#43
 3296  0000380c  afa70004	sw	4(r29),r7
 3297  00003810  0c000604	jal	_dindex
 3298  00003814  54000000	nop; not filled.
 3299  00003818  23bd0008	addi	r29,r29,#8
 3300  0000381c  64210000	snei	r1,r1,#0
 3301  00003820  10200030	beqz	r1,L217_LF3
 3302  00003824  54000000	nop; not filled.
 3303  00003828          	L218_LF3:
 3304  00003828  23bdffe8	addi	r29,r29,#-24
 3305  0000382c  3c070000	lhi	r7,((LC7_LF3)>>16)&0xffff
 3306  00003830  24e7d3dc	addui	r7,r7,(LC7_LF3)&0xffff
 3307  00003834  afa70000	sw	(r29),r7
 3308  00003838  afa50004	sw	4(r29),r5
 3309  0000383c  afa40008	sw	8(r29),r4
 3310  00003840  afa6000c	sw	12(r29),r6
 3311  00003844  afa30010	sw	16(r29),r3
 3312  00003848  0c006afc	jal	_printf
 3313  0000384c  54000000	nop; not filled.
 3314  00003850  23bd0018	addi	r29,r29,#24
 3315  00003854          	L217_LF3:
 3316  00003854  00040820	add	r1,r0,r4
 3317  00003858          	L219_LF3:
 3318  00003858  8fa20000	lw	r2,0(r29)
 3319  0000385c  8fa30004	lw	r3,4(r29)
 3320  00003860  8fa40008	lw	r4,8(r29)
 3321  00003864  8fa5000c	lw	r5,12(r29)
 3322  00003868  8fa60010	lw	r6,16(r29)
 3323  0000386c  8fa70014	lw	r7,20(r29)
 3324  00003870  8fdffff8	lw	r31,-8(r30)
 3325  00003874  001ee820	add	r29,r0,r30
 3326  00003878  8fdefffc	lw	r30,-4(r30)
 3327  0000387c  4be00000	jr	r31
 3328  00003880  54000000	nop
 3329  00003884          	.endproc _MemoryGetOperandAddress
 3330  00003884          	.data
 3331  0000d412          	.align 2
 3332  0000d414          	_pagestart_LF3:
 3333  0000d414          	.space 4
 3334  0000d418          	.align 2
 3335  0000d418          	_freemapmax_LF3:
 3336  0000d418          	.space 4
 3337  0000d41c          	.align 2
 3338  0000d41c          	_nfreepages_LF3:
 3339  0000d41c          	.space 4
 3340  0000d420          	.align 2
 3341  0000d420          	_freepages_LF3:
 3342  0000d420          	.space 8192
 3343                      ; Compiled by GCC
 3344  0000f420          	.text
 3345  00003884          	.align 2
 3346  00003884          	.proc _isspace
 3347  00003884          	.global _isspace
 3348  00003884          	_isspace:
 3349                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 3350  00003884  afbefffc	sw	-4(r29),r30; push fp
 3351  00003888  001df020	add	r30,r0,r29; fp = sp
 3352  0000388c  afbffff8	sw	-8(r29),r31; push ret addr
 3353  00003890  2fbd0010	subui	r29,r29,#16; alloc local storage
 3354  00003894  afa20000	sw	0(r29),r2
 3355  00003898  83c20003	lb	r2,3(r30)
 3356  0000389c  201f0000	addi	r31,r0,#0
 3357  000038a0  304100ff	andi	r1,r2,#0x00ff
 3358  000038a4  60210020	seqi	r1,r1,#32
 3359  000038a8  14200018	bnez	r1,L6_LF4
 3360  000038ac  54000000	nop; not filled.
 3361  000038b0  2041fff7	addi	r1,r2,#-9
 3362  000038b4  302100ff	andi	r1,r1,#0x00ff
 3363  000038b8  70210001	sleui	r1,r1,#1
 3364  000038bc  10200008	beqz	r1,L5_LF4
 3365  000038c0  54000000	nop; not filled.
 3366  000038c4          	L6_LF4:
 3367  000038c4  201f0001	addi	r31,r0,#1
 3368  000038c8          	L5_LF4:
 3369  000038c8  001f0820	add	r1,r0,r31
 3370  000038cc  8fa20000	lw	r2,0(r29)
 3371  000038d0  8fdffff8	lw	r31,-8(r30)
 3372  000038d4  001ee820	add	r29,r0,r30
 3373  000038d8  8fdefffc	lw	r30,-4(r30)
 3374  000038dc  4be00000	jr	r31
 3375  000038e0  54000000	nop
 3376  000038e4          	.endproc _isspace
 3377  000038e4          	.align 2
 3378  000038e4          	.proc _isxdigit
 3379  000038e4          	.global _isxdigit
 3380  000038e4          	_isxdigit:
 3381                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 3382  000038e4  afbefffc	sw	-4(r29),r30; push fp
 3383  000038e8  001df020	add	r30,r0,r29; fp = sp
 3384  000038ec  afbffff8	sw	-8(r29),r31; push ret addr
 3385  000038f0  2fbd0010	subui	r29,r29,#16; alloc local storage
 3386  000038f4  afa20000	sw	0(r29),r2
 3387  000038f8  83df0003	lb	r31,3(r30)
 3388  000038fc  20020000	addi	r2,r0,#0
 3389  00003900  23e1ffd0	addi	r1,r31,#-48
 3390  00003904  302100ff	andi	r1,r1,#0x00ff
 3391  00003908  70210009	sleui	r1,r1,#9
 3392  0000390c  14200028	bnez	r1,L12_LF4
 3393  00003910  54000000	nop; not filled.
 3394  00003914  23e1ff9f	addi	r1,r31,#-97
 3395  00003918  302100ff	andi	r1,r1,#0x00ff
 3396  0000391c  70210005	sleui	r1,r1,#5
 3397  00003920  14200014	bnez	r1,L12_LF4
 3398  00003924  54000000	nop; not filled.
 3399  00003928  33e100ff	andi	r1,r31,#0x00ff
 3400  0000392c  64210041	snei	r1,r1,#65
 3401  00003930  14200008	bnez	r1,L11_LF4
 3402  00003934  54000000	nop; not filled.
 3403  00003938          	L12_LF4:
 3404  00003938  20020001	addi	r2,r0,#1
 3405  0000393c          	L11_LF4:
 3406  0000393c  00020820	add	r1,r0,r2
 3407  00003940  8fa20000	lw	r2,0(r29)
 3408  00003944  8fdffff8	lw	r31,-8(r30)
 3409  00003948  001ee820	add	r29,r0,r30
 3410  0000394c  8fdefffc	lw	r30,-4(r30)
 3411  00003950  4be00000	jr	r31
 3412  00003954  54000000	nop
 3413  00003958          	.endproc _isxdigit
 3414  00003958          	.align 2
 3415  00003958          	.proc _dstrcpy
 3416  00003958          	.global _dstrcpy
 3417  00003958          	_dstrcpy:
 3418                      ;  Function 'dstrcpy'; 0 bytes of locals, 2 regs to save.
 3419  00003958  afbefffc	sw	-4(r29),r30; push fp
 3420  0000395c  001df020	add	r30,r0,r29; fp = sp
 3421  00003960  afbffff8	sw	-8(r29),r31; push ret addr
 3422  00003964  2fbd0010	subui	r29,r29,#16; alloc local storage
 3423  00003968  afa20000	sw	0(r29),r2
 3424  0000396c  afa30004	sw	4(r29),r3
 3425  00003970  8fdf0000	lw	r31,(r30)
 3426  00003974  8fc20004	lw	r2,4(r30)
 3427  00003978  001f1820	add	r3,r0,r31
 3428  0000397c          	L19_LF4:
 3429  0000397c  80410000	lb	r1,(r2)
 3430  00003980  a3e10000	sb	(r31),r1
 3431  00003984  20420001	addi	r2,r2,#1
 3432  00003988  23ff0001	addi	r31,r31,#1
 3433  0000398c  302100ff	andi	r1,r1,#0x00ff
 3434  00003990  64210000	snei	r1,r1,#0
 3435  00003994  1420ffe4	bnez	r1,L19_LF4
 3436  00003998  54000000	nop; not filled.
 3437  0000399c  00030820	add	r1,r0,r3
 3438  000039a0  8fa20000	lw	r2,0(r29)
 3439  000039a4  8fa30004	lw	r3,4(r29)
 3440  000039a8  8fdffff8	lw	r31,-8(r30)
 3441  000039ac  001ee820	add	r29,r0,r30
 3442  000039b0  8fdefffc	lw	r30,-4(r30)
 3443  000039b4  4be00000	jr	r31
 3444  000039b8  54000000	nop
 3445  000039bc          	.endproc _dstrcpy
 3446  000039bc          	.align 2
 3447  000039bc          	.proc _dstrncpy
 3448  000039bc          	.global _dstrncpy
 3449  000039bc          	_dstrncpy:
 3450                      ;  Function 'dstrncpy'; 0 bytes of locals, 3 regs to save.
 3451  000039bc  afbefffc	sw	-4(r29),r30; push fp
 3452  000039c0  001df020	add	r30,r0,r29; fp = sp
 3453  000039c4  afbffff8	sw	-8(r29),r31; push ret addr
 3454  000039c8  2fbd0018	subui	r29,r29,#24; alloc local storage
 3455  000039cc  afa20000	sw	0(r29),r2
 3456  000039d0  afa30004	sw	4(r29),r3
 3457  000039d4  afa40008	sw	8(r29),r4
 3458  000039d8  8fc20000	lw	r2,(r30)
 3459  000039dc  8fc30004	lw	r3,4(r30)
 3460  000039e0  8fdf0008	lw	r31,8(r30)
 3461  000039e4  00022020	add	r4,r0,r2
 3462  000039e8  08000024	j	L37_LF4
 3463  000039ec  54000000	nop; not filled.
 3464  000039f0          	L34_LF4:
 3465  000039f0  80610000	lb	r1,(r3)
 3466  000039f4  a0410000	sb	(r2),r1
 3467  000039f8  20630001	addi	r3,r3,#1
 3468  000039fc  20420001	addi	r2,r2,#1
 3469  00003a00  302100ff	andi	r1,r1,#0x00ff
 3470  00003a04  64210000	snei	r1,r1,#0
 3471  00003a08  10200018	beqz	r1,L32_LF4
 3472  00003a0c  54000000	nop; not filled.
 3473  00003a10          	L37_LF4:
 3474  00003a10  001f0820	add	r1,r0,r31
 3475  00003a14  23ffffff	addi	r31,r31,#-1
 3476  00003a18  70210000	slei	r1,r1,#0
 3477  00003a1c  1020ffd0	beqz	r1,L34_LF4
 3478  00003a20  54000000	nop; not filled.
 3479  00003a24          	L32_LF4:
 3480  00003a24  00040820	add	r1,r0,r4
 3481  00003a28  8fa20000	lw	r2,0(r29)
 3482  00003a2c  8fa30004	lw	r3,4(r29)
 3483  00003a30  8fa40008	lw	r4,8(r29)
 3484  00003a34  8fdffff8	lw	r31,-8(r30)
 3485  00003a38  001ee820	add	r29,r0,r30
 3486  00003a3c  8fdefffc	lw	r30,-4(r30)
 3487  00003a40  4be00000	jr	r31
 3488  00003a44  54000000	nop
 3489  00003a48          	.endproc _dstrncpy
 3490  00003a48          	.align 2
 3491  00003a48          	.proc _dstrcat
 3492  00003a48          	.global _dstrcat
 3493  00003a48          	_dstrcat:
 3494                      ;  Function 'dstrcat'; 0 bytes of locals, 2 regs to save.
 3495  00003a48  afbefffc	sw	-4(r29),r30; push fp
 3496  00003a4c  001df020	add	r30,r0,r29; fp = sp
 3497  00003a50  afbffff8	sw	-8(r29),r31; push ret addr
 3498  00003a54  2fbd0010	subui	r29,r29,#16; alloc local storage
 3499  00003a58  afa20000	sw	0(r29),r2
 3500  00003a5c  afa30004	sw	4(r29),r3
 3501  00003a60  8fdf0000	lw	r31,(r30)
 3502  00003a64  001f1820	add	r3,r0,r31
 3503  00003a68  90610000	lbu	r1,(r3)
 3504  00003a6c  64210000	snei	r1,r1,#0
 3505  00003a70  10200018	beqz	r1,L50_LF4
 3506  00003a74  54000000	nop; not filled.
 3507  00003a78          	L51_LF4:
 3508  00003a78  23ff0001	addi	r31,r31,#1
 3509  00003a7c  93e10000	lbu	r1,(r31)
 3510  00003a80  64210000	snei	r1,r1,#0
 3511  00003a84  1420fff0	bnez	r1,L51_LF4
 3512  00003a88  54000000	nop; not filled.
 3513  00003a8c          	L50_LF4:
 3514  00003a8c  001f1020	add	r2,r0,r31
 3515  00003a90  8fdf0004	lw	r31,4(r30)
 3516  00003a94          	L54_LF4:
 3517  00003a94  83e10000	lb	r1,(r31)
 3518  00003a98  a0410000	sb	(r2),r1
 3519  00003a9c  23ff0001	addi	r31,r31,#1
 3520  00003aa0  20420001	addi	r2,r2,#1
 3521  00003aa4  302100ff	andi	r1,r1,#0x00ff
 3522  00003aa8  64210000	snei	r1,r1,#0
 3523  00003aac  1420ffe4	bnez	r1,L54_LF4
 3524  00003ab0  54000000	nop; not filled.
 3525  00003ab4  00030820	add	r1,r0,r3
 3526  00003ab8  8fa20000	lw	r2,0(r29)
 3527  00003abc  8fa30004	lw	r3,4(r29)
 3528  00003ac0  8fdffff8	lw	r31,-8(r30)
 3529  00003ac4  001ee820	add	r29,r0,r30
 3530  00003ac8  8fdefffc	lw	r30,-4(r30)
 3531  00003acc  4be00000	jr	r31
 3532  00003ad0  54000000	nop
 3533  00003ad4          	.endproc _dstrcat
 3534  00003ad4          	.align 2
 3535  00003ad4          	.proc _dstrncmp
 3536  00003ad4          	.global _dstrncmp
 3537  00003ad4          	_dstrncmp:
 3538                      ;  Function 'dstrncmp'; 0 bytes of locals, 4 regs to save.
 3539  00003ad4  afbefffc	sw	-4(r29),r30; push fp
 3540  00003ad8  001df020	add	r30,r0,r29; fp = sp
 3541  00003adc  afbffff8	sw	-8(r29),r31; push ret addr
 3542  00003ae0  2fbd0018	subui	r29,r29,#24; alloc local storage
 3543  00003ae4  afa20000	sw	0(r29),r2
 3544  00003ae8  afa30004	sw	4(r29),r3
 3545  00003aec  afa40008	sw	8(r29),r4
 3546  00003af0  afa5000c	sw	12(r29),r5
 3547  00003af4  8fc30000	lw	r3,(r30)
 3548  00003af8  8fc40004	lw	r4,4(r30)
 3549  00003afc  8fc50008	lw	r5,8(r30)
 3550  00003b00  20020000	addi	r2,r0,#0
 3551  00003b04  0045082a	slt	r1,r2,r5
 3552  00003b08  1020003c	beqz	r1,L73_LF4
 3553  00003b0c  54000000	nop; not filled.
 3554  00003b10          	L75_LF4:
 3555  00003b10  909f0000	lbu	r31,(r4)
 3556  00003b14  67e10000	snei	r1,r31,#0
 3557  00003b18  10200038	beqz	r1,L86_LF4
 3558  00003b1c  54000000	nop; not filled.
 3559  00003b20  90610000	lbu	r1,(r3)
 3560  00003b24  003f0829	sne	r1,r1,r31
 3561  00003b28  1420001c	bnez	r1,L73_LF4
 3562  00003b2c  54000000	nop; not filled.
 3563  00003b30  20630001	addi	r3,r3,#1
 3564  00003b34  20840001	addi	r4,r4,#1
 3565  00003b38  20420001	addi	r2,r2,#1
 3566  00003b3c  0045082a	slt	r1,r2,r5
 3567  00003b40  1420ffcc	bnez	r1,L75_LF4
 3568  00003b44  54000000	nop; not filled.
 3569  00003b48          	L73_LF4:
 3570  00003b48  00450828	seq	r1,r2,r5
 3571  00003b4c  10200010	beqz	r1,L80_LF4
 3572  00003b50  54000000	nop; not filled.
 3573  00003b54          	L86_LF4:
 3574  00003b54  20010000	addi	r1,r0,#0
 3575  00003b58  08000028	j	L84_LF4
 3576  00003b5c  54000000	nop; not filled.
 3577  00003b60          	L80_LF4:
 3578  00003b60  907f0000	lbu	r31,(r3)
 3579  00003b64  90830000	lbu	r3,(r4)
 3580  00003b68  03e30822	sub	r1,r31,r3
 3581  00003b6c  74210000	sgei	r1,r1,#0
 3582  00003b70  2002ffff	addi	r2,r0,#-1
 3583  00003b74  10200008	beqz	r1,L82_LF4
 3584  00003b78  54000000	nop; not filled.
 3585  00003b7c  03e31029	sne	r2,r31,r3
 3586  00003b80          	L82_LF4:
 3587  00003b80  00020820	add	r1,r0,r2
 3588  00003b84          	L84_LF4:
 3589  00003b84  8fa20000	lw	r2,0(r29)
 3590  00003b88  8fa30004	lw	r3,4(r29)
 3591  00003b8c  8fa40008	lw	r4,8(r29)
 3592  00003b90  8fa5000c	lw	r5,12(r29)
 3593  00003b94  8fdffff8	lw	r31,-8(r30)
 3594  00003b98  001ee820	add	r29,r0,r30
 3595  00003b9c  8fdefffc	lw	r30,-4(r30)
 3596  00003ba0  4be00000	jr	r31
 3597  00003ba4  54000000	nop
 3598  00003ba8          	.endproc _dstrncmp
 3599  00003ba8          	.align 2
 3600  00003ba8          	.proc _dstrlen
 3601  00003ba8          	.global _dstrlen
 3602  00003ba8          	_dstrlen:
 3603                      ;  Function 'dstrlen'; 0 bytes of locals, 1 regs to save.
 3604  00003ba8  afbefffc	sw	-4(r29),r30; push fp
 3605  00003bac  001df020	add	r30,r0,r29; fp = sp
 3606  00003bb0  afbffff8	sw	-8(r29),r31; push ret addr
 3607  00003bb4  2fbd0010	subui	r29,r29,#16; alloc local storage
 3608  00003bb8  afa20000	sw	0(r29),r2
 3609  00003bbc  8fdf0000	lw	r31,(r30)
 3610  00003bc0  20020000	addi	r2,r0,#0
 3611  00003bc4  08000008	j	L97_LF4
 3612  00003bc8  54000000	nop; not filled.
 3613  00003bcc          	L95_LF4:
 3614  00003bcc  20420001	addi	r2,r2,#1
 3615  00003bd0          	L97_LF4:
 3616  00003bd0  93e10000	lbu	r1,(r31)
 3617  00003bd4  23ff0001	addi	r31,r31,#1
 3618  00003bd8  64210000	snei	r1,r1,#0
 3619  00003bdc  1420ffec	bnez	r1,L95_LF4
 3620  00003be0  54000000	nop; not filled.
 3621  00003be4  00020820	add	r1,r0,r2
 3622  00003be8  8fa20000	lw	r2,0(r29)
 3623  00003bec  8fdffff8	lw	r31,-8(r30)
 3624  00003bf0  001ee820	add	r29,r0,r30
 3625  00003bf4  8fdefffc	lw	r30,-4(r30)
 3626  00003bf8  4be00000	jr	r31
 3627  00003bfc  54000000	nop
 3628  00003c00          	.endproc _dstrlen
 3629  00003c00          	.align 2
 3630  00003c00          	.proc _dstrstr
 3631  00003c00          	.global _dstrstr
 3632  00003c00          	_dstrstr:
 3633                      ;  Function 'dstrstr'; 0 bytes of locals, 6 regs to save.
 3634  00003c00  afbefffc	sw	-4(r29),r30; push fp
 3635  00003c04  001df020	add	r30,r0,r29; fp = sp
 3636  00003c08  afbffff8	sw	-8(r29),r31; push ret addr
 3637  00003c0c  2fbd0020	subui	r29,r29,#32; alloc local storage
 3638  00003c10  afa20000	sw	0(r29),r2
 3639  00003c14  afa30004	sw	4(r29),r3
 3640  00003c18  afa40008	sw	8(r29),r4
 3641  00003c1c  afa5000c	sw	12(r29),r5
 3642  00003c20  afa60010	sw	16(r29),r6
 3643  00003c24  afa70014	sw	20(r29),r7
 3644  00003c28  8fc50000	lw	r5,(r30)
 3645  00003c2c  8fc70004	lw	r7,4(r30)
 3646  00003c30  20030000	addi	r3,r0,#0
 3647  00003c34  90e10000	lbu	r1,(r7)
 3648  00003c38  20e20001	addi	r2,r7,#1
 3649  00003c3c  64210000	snei	r1,r1,#0
 3650  00003c40  1020001c	beqz	r1,L125_LF4
 3651  00003c44  54000000	nop; not filled.
 3652  00003c48          	L126_LF4:
 3653  00003c48  20630001	addi	r3,r3,#1
 3654  00003c4c  90410000	lbu	r1,(r2)
 3655  00003c50  20420001	addi	r2,r2,#1
 3656  00003c54  64210000	snei	r1,r1,#0
 3657  00003c58  1420ffec	bnez	r1,L126_LF4
 3658  00003c5c  54000000	nop; not filled.
 3659  00003c60          	L125_LF4:
 3660  00003c60  00033020	add	r6,r0,r3
 3661  00003c64  080000ac	j	L149_LF4
 3662  00003c68  54000000	nop; not filled.
 3663  00003c6c          	L130_LF4:
 3664  00003c6c  00051820	add	r3,r0,r5
 3665  00003c70  00072020	add	r4,r0,r7
 3666  00003c74  20020000	addi	r2,r0,#0
 3667  00003c78  0046082a	slt	r1,r2,r6
 3668  00003c7c  1020003c	beqz	r1,L134_LF4
 3669  00003c80  54000000	nop; not filled.
 3670  00003c84          	L136_LF4:
 3671  00003c84  909f0000	lbu	r31,(r4)
 3672  00003c88  67e10000	snei	r1,r31,#0
 3673  00003c8c  10200038	beqz	r1,L150_LF4
 3674  00003c90  54000000	nop; not filled.
 3675  00003c94  90610000	lbu	r1,(r3)
 3676  00003c98  003f0829	sne	r1,r1,r31
 3677  00003c9c  1420001c	bnez	r1,L134_LF4
 3678  00003ca0  54000000	nop; not filled.
 3679  00003ca4  20630001	addi	r3,r3,#1
 3680  00003ca8  20840001	addi	r4,r4,#1
 3681  00003cac  20420001	addi	r2,r2,#1
 3682  00003cb0  0046082a	slt	r1,r2,r6
 3683  00003cb4  1420ffcc	bnez	r1,L136_LF4
 3684  00003cb8  54000000	nop; not filled.
 3685  00003cbc          	L134_LF4:
 3686  00003cbc  00460828	seq	r1,r2,r6
 3687  00003cc0  10200010	beqz	r1,L141_LF4
 3688  00003cc4  54000000	nop; not filled.
 3689  00003cc8          	L150_LF4:
 3690  00003cc8  20010000	addi	r1,r0,#0
 3691  00003ccc  08000028	j	L132_LF4
 3692  00003cd0  54000000	nop; not filled.
 3693  00003cd4          	L141_LF4:
 3694  00003cd4  90630000	lbu	r3,(r3)
 3695  00003cd8  90820000	lbu	r2,(r4)
 3696  00003cdc  00620822	sub	r1,r3,r2
 3697  00003ce0  74210000	sgei	r1,r1,#0
 3698  00003ce4  201fffff	addi	r31,r0,#-1
 3699  00003ce8  10200008	beqz	r1,L143_LF4
 3700  00003cec  54000000	nop; not filled.
 3701  00003cf0  0062f829	sne	r31,r3,r2
 3702  00003cf4          	L143_LF4:
 3703  00003cf4  001f0820	add	r1,r0,r31
 3704  00003cf8          	L132_LF4:
 3705  00003cf8  64210000	snei	r1,r1,#0
 3706  00003cfc  14200010	bnez	r1,L131_LF4
 3707  00003d00  54000000	nop; not filled.
 3708  00003d04  00050820	add	r1,r0,r5
 3709  00003d08  0800001c	j	L146_LF4
 3710  00003d0c  54000000	nop; not filled.
 3711  00003d10          	L131_LF4:
 3712  00003d10  20a50001	addi	r5,r5,#1
 3713  00003d14          	L149_LF4:
 3714  00003d14  90a10000	lbu	r1,(r5)
 3715  00003d18  64210000	snei	r1,r1,#0
 3716  00003d1c  1420ff4c	bnez	r1,L130_LF4
 3717  00003d20  54000000	nop; not filled.
 3718  00003d24  20010000	addi	r1,r0,#0
 3719  00003d28          	L146_LF4:
 3720  00003d28  8fa20000	lw	r2,0(r29)
 3721  00003d2c  8fa30004	lw	r3,4(r29)
 3722  00003d30  8fa40008	lw	r4,8(r29)
 3723  00003d34  8fa5000c	lw	r5,12(r29)
 3724  00003d38  8fa60010	lw	r6,16(r29)
 3725  00003d3c  8fa70014	lw	r7,20(r29)
 3726  00003d40  8fdffff8	lw	r31,-8(r30)
 3727  00003d44  001ee820	add	r29,r0,r30
 3728  00003d48  8fdefffc	lw	r30,-4(r30)
 3729  00003d4c  4be00000	jr	r31
 3730  00003d50  54000000	nop
 3731  00003d54          	.endproc _dstrstr
 3732  00003d54          	.align 2
 3733  00003d54          	.proc _dmindex
 3734  00003d54          	.global _dmindex
 3735  00003d54          	_dmindex:
 3736                      ;  Function 'dmindex'; 0 bytes of locals, 5 regs to save.
 3737  00003d54  afbefffc	sw	-4(r29),r30; push fp
 3738  00003d58  001df020	add	r30,r0,r29; fp = sp
 3739  00003d5c  afbffff8	sw	-8(r29),r31; push ret addr
 3740  00003d60  2fbd0020	subui	r29,r29,#32; alloc local storage
 3741  00003d64  afa20000	sw	0(r29),r2
 3742  00003d68  afa30004	sw	4(r29),r3
 3743  00003d6c  afa40008	sw	8(r29),r4
 3744  00003d70  afa5000c	sw	12(r29),r5
 3745  00003d74  afa60010	sw	16(r29),r6
 3746  00003d78  8fc40000	lw	r4,(r30)
 3747  00003d7c  8fc60004	lw	r6,4(r30)
 3748  00003d80  90810000	lbu	r1,(r4)
 3749  00003d84  64210000	snei	r1,r1,#0
 3750  00003d88  10200060	beqz	r1,L164_LF4
 3751  00003d8c  54000000	nop; not filled.
 3752  00003d90  00012820	add	r5,r0,r1
 3753  00003d94          	L165_LF4:
 3754  00003d94  00061020	add	r2,r0,r6
 3755  00003d98  80df0000	lb	r31,(r6)
 3756  00003d9c  33e100ff	andi	r1,r31,#0x00ff
 3757  00003da0  64210000	snei	r1,r1,#0
 3758  00003da4  1020003c	beqz	r1,L163_LF4
 3759  00003da8  54000000	nop; not filled.
 3760  00003dac  90830000	lbu	r3,(r4)
 3761  00003db0          	L169_LF4:
 3762  00003db0  33e100ff	andi	r1,r31,#0x00ff
 3763  00003db4  00610828	seq	r1,r3,r1
 3764  00003db8  10200010	beqz	r1,L168_LF4
 3765  00003dbc  54000000	nop; not filled.
 3766  00003dc0  00040820	add	r1,r0,r4
 3767  00003dc4  08000028	j	L173_LF4
 3768  00003dc8  54000000	nop; not filled.
 3769  00003dcc          	L168_LF4:
 3770  00003dcc  20420001	addi	r2,r2,#1
 3771  00003dd0  805f0000	lb	r31,(r2)
 3772  00003dd4  33e100ff	andi	r1,r31,#0x00ff
 3773  00003dd8  64210000	snei	r1,r1,#0
 3774  00003ddc  1420ffd0	bnez	r1,L169_LF4
 3775  00003de0  54000000	nop; not filled.
 3776  00003de4          	L163_LF4:
 3777  00003de4  14a0ffac	bnez	r5,L165_LF4
 3778  00003de8  54000000	nop; not filled.
 3779  00003dec          	L164_LF4:
 3780  00003dec  20010000	addi	r1,r0,#0
 3781  00003df0          	L173_LF4:
 3782  00003df0  8fa20000	lw	r2,0(r29)
 3783  00003df4  8fa30004	lw	r3,4(r29)
 3784  00003df8  8fa40008	lw	r4,8(r29)
 3785  00003dfc  8fa5000c	lw	r5,12(r29)
 3786  00003e00  8fa60010	lw	r6,16(r29)
 3787  00003e04  8fdffff8	lw	r31,-8(r30)
 3788  00003e08  001ee820	add	r29,r0,r30
 3789  00003e0c  8fdefffc	lw	r30,-4(r30)
 3790  00003e10  4be00000	jr	r31
 3791  00003e14  54000000	nop
 3792  00003e18          	.endproc _dmindex
 3793  00003e18          	.align 2
 3794  00003e18          	.proc _dindex
 3795  00003e18          	.global _dindex
 3796  00003e18          	_dindex:
 3797                      ;  Function 'dindex'; 0 bytes of locals, 2 regs to save.
 3798  00003e18  afbefffc	sw	-4(r29),r30; push fp
 3799  00003e1c  001df020	add	r30,r0,r29; fp = sp
 3800  00003e20  afbffff8	sw	-8(r29),r31; push ret addr
 3801  00003e24  2fbd0010	subui	r29,r29,#16; alloc local storage
 3802  00003e28  afa20000	sw	0(r29),r2
 3803  00003e2c  afa30004	sw	4(r29),r3
 3804  00003e30  8fc20000	lw	r2,(r30)
 3805  00003e34  8fc30004	lw	r3,4(r30)
 3806  00003e38  08000024	j	L187_LF4
 3807  00003e3c  54000000	nop; not filled.
 3808  00003e40          	L183_LF4:
 3809  00003e40  33e100ff	andi	r1,r31,#0x00ff
 3810  00003e44  00230828	seq	r1,r1,r3
 3811  00003e48  10200010	beqz	r1,L184_LF4
 3812  00003e4c  54000000	nop; not filled.
 3813  00003e50  00020820	add	r1,r0,r2
 3814  00003e54  08000020	j	L186_LF4
 3815  00003e58  54000000	nop; not filled.
 3816  00003e5c          	L184_LF4:
 3817  00003e5c  20420001	addi	r2,r2,#1
 3818  00003e60          	L187_LF4:
 3819  00003e60  805f0000	lb	r31,(r2)
 3820  00003e64  33e100ff	andi	r1,r31,#0x00ff
 3821  00003e68  64210000	snei	r1,r1,#0
 3822  00003e6c  1420ffd0	bnez	r1,L183_LF4
 3823  00003e70  54000000	nop; not filled.
 3824  00003e74  20010000	addi	r1,r0,#0
 3825  00003e78          	L186_LF4:
 3826  00003e78  8fa20000	lw	r2,0(r29)
 3827  00003e7c  8fa30004	lw	r3,4(r29)
 3828  00003e80  8fdffff8	lw	r31,-8(r30)
 3829  00003e84  001ee820	add	r29,r0,r30
 3830  00003e88  8fdefffc	lw	r30,-4(r30)
 3831  00003e8c  4be00000	jr	r31
 3832  00003e90  54000000	nop
 3833  00003e94          	.endproc _dindex
 3834  00003e94          	.align 2
 3835  00003e94          	.proc _ditoa
 3836  00003e94          	.global _ditoa
 3837  00003e94          	_ditoa:
 3838                      ;  Function 'ditoa'; 0 bytes of locals, 5 regs to save.
 3839  00003e94  afbefffc	sw	-4(r29),r30; push fp
 3840  00003e98  001df020	add	r30,r0,r29; fp = sp
 3841  00003e9c  afbffff8	sw	-8(r29),r31; push ret addr
 3842  00003ea0  2fbd0020	subui	r29,r29,#32; alloc local storage
 3843  00003ea4  afa20000	sw	0(r29),r2
 3844  00003ea8  afa30004	sw	4(r29),r3
 3845  00003eac  afa40008	sw	8(r29),r4
 3846  00003eb0  afa5000c	sw	12(r29),r5
 3847  00003eb4  afa60010	sw	16(r29),r6
 3848  00003eb8  8fc30000	lw	r3,(r30)
 3849  00003ebc  8fc40004	lw	r4,4(r30)
 3850  00003ec0  68610000	slti	r1,r3,#0
 3851  00003ec4  10200010	beqz	r1,L203_LF4
 3852  00003ec8  54000000	nop; not filled.
 3853  00003ecc  2006002d	addi	r6,r0,(#0x2d)&0xff
 3854  00003ed0  08000014	j	L216_LF4
 3855  00003ed4  54000000	nop; not filled.
 3856  00003ed8          	L203_LF4:
 3857  00003ed8  64610000	snei	r1,r3,#0
 3858  00003edc  14200018	bnez	r1,L205_LF4
 3859  00003ee0  54000000	nop; not filled.
 3860  00003ee4  20060030	addi	r6,r0,(#0x30)&0xff
 3861  00003ee8          	L216_LF4:
 3862  00003ee8  a0860000	sb	(r4),r6
 3863  00003eec  20840001	addi	r4,r4,#1
 3864  00003ef0  0800007c	j	L204_LF4
 3865  00003ef4  54000000	nop; not filled.
 3866  00003ef8          	L205_LF4:
 3867  00003ef8  201f0001	addi	r31,r0,#1
 3868  00003efc  03e3082c	sle	r1,r31,r3
 3869  00003f00  1020001c	beqz	r1,L208_LF4
 3870  00003f04  54000000	nop; not filled.
 3871  00003f08          	L209_LF4:
 3872  00003f08  53e10002	slli	r1,r31,#0x2
 3873  00003f0c  003f0820	add	r1,r1,r31
 3874  00003f10  503f0001	slli	r31,r1,#0x1
 3875  00003f14  03e3082c	sle	r1,r31,r3
 3876  00003f18  1420ffec	bnez	r1,L209_LF4
 3877  00003f1c  54000000	nop; not filled.
 3878  00003f20          	L208_LF4:
 3879  00003f20  2005000a	addi	r5,r0,#10
 3880  00003f24          	L212_LF4:
 3881  00003f24  03e00035	movi2fp	f0,r31
 3882  00003f28  00a00835	movi2fp	f1,r5
 3883  00003f2c  0401000f	div	f0,f0,f1
 3884  00003f30  0000f834	movfp2i	r31,f0
 3885  00003f34  00600035	movi2fp	f0,r3
 3886  00003f38  03e00835	movi2fp	f1,r31
 3887  00003f3c  0401000f	div	f0,f0,f1
 3888  00003f40  00001034	movfp2i	r2,f0
 3889  00003f44  20410030	addi	r1,r2,#48
 3890  00003f48  a0810000	sb	(r4),r1
 3891  00003f4c  20840001	addi	r4,r4,#1
 3892  00003f50  00400035	movi2fp	f0,r2
 3893  00003f54  03e00835	movi2fp	f1,r31
 3894  00003f58  0401000e	mult	f0,f0,f1
 3895  00003f5c  00000834	movfp2i	r1,f0
 3896  00003f60  00611822	sub	r3,r3,r1
 3897  00003f64  6fe10001	sgti	r1,r31,#1
 3898  00003f68  1420ffb8	bnez	r1,L212_LF4
 3899  00003f6c  54000000	nop; not filled.
 3900  00003f70          	L204_LF4:
 3901  00003f70  20060000	addi	r6,r0,(#0x0)&0xff
 3902  00003f74  a0860000	sb	(r4),r6
 3903  00003f78  8fa20000	lw	r2,0(r29)
 3904  00003f7c  8fa30004	lw	r3,4(r29)
 3905  00003f80  8fa40008	lw	r4,8(r29)
 3906  00003f84  8fa5000c	lw	r5,12(r29)
 3907  00003f88  8fa60010	lw	r6,16(r29)
 3908  00003f8c  8fdffff8	lw	r31,-8(r30)
 3909  00003f90  001ee820	add	r29,r0,r30
 3910  00003f94  8fdefffc	lw	r30,-4(r30)
 3911  00003f98  4be00000	jr	r31
 3912  00003f9c  54000000	nop
 3913  00003fa0          	.endproc _ditoa
 3914  00003fa0          	.align 2
 3915  00003fa0          	.proc _dstrtol
 3916  00003fa0          	.global _dstrtol
 3917  00003fa0          	_dstrtol:
 3918                      ;  Function 'dstrtol'; 0 bytes of locals, 5 regs to save.
 3919  00003fa0  afbefffc	sw	-4(r29),r30; push fp
 3920  00003fa4  001df020	add	r30,r0,r29; fp = sp
 3921  00003fa8  afbffff8	sw	-8(r29),r31; push ret addr
 3922  00003fac  2fbd0020	subui	r29,r29,#32; alloc local storage
 3923  00003fb0  afa20000	sw	0(r29),r2
 3924  00003fb4  afa30004	sw	4(r29),r3
 3925  00003fb8  afa40008	sw	8(r29),r4
 3926  00003fbc  afa5000c	sw	12(r29),r5
 3927  00003fc0  afa60010	sw	16(r29),r6
 3928  00003fc4  8fc20000	lw	r2,(r30)
 3929  00003fc8  8fc50004	lw	r5,4(r30)
 3930  00003fcc  8fc40008	lw	r4,8(r30)
 3931  00003fd0  20030000	addi	r3,r0,#0
 3932  00003fd4  08000008	j	L247_LF4
 3933  00003fd8  54000000	nop; not filled.
 3934  00003fdc          	L220_LF4:
 3935  00003fdc  20420001	addi	r2,r2,#1
 3936  00003fe0          	L247_LF4:
 3937  00003fe0  805f0000	lb	r31,(r2)
 3938  00003fe4  33e100ff	andi	r1,r31,#0x00ff
 3939  00003fe8  60210020	seqi	r1,r1,#32
 3940  00003fec  1420ffec	bnez	r1,L220_LF4
 3941  00003ff0  54000000	nop; not filled.
 3942  00003ff4  23e1fff7	addi	r1,r31,#-9
 3943  00003ff8  302100ff	andi	r1,r1,#0x00ff
 3944  00003ffc  70210001	sleui	r1,r1,#1
 3945  00004000  1420ffd8	bnez	r1,L220_LF4
 3946  00004004  54000000	nop; not filled.
 3947  00004008  64a10000	snei	r1,r5,#0
 3948  0000400c  10200008	beqz	r1,L222_LF4
 3949  00004010  54000000	nop; not filled.
 3950  00004014  aca20000	sw	(r5),r2
 3951  00004018          	L222_LF4:
 3952  00004018  905f0000	lbu	r31,(r2)
 3953  0000401c  67e10000	snei	r1,r31,#0
 3954  00004020  10200090	beqz	r1,L248_LF4
 3955  00004024  54000000	nop; not filled.
 3956  00004028  63e1002d	seqi	r1,r31,#45
 3957  0000402c  10200014	beqz	r1,L224_LF4
 3958  00004030  54000000	nop; not filled.
 3959  00004034  2006ffff	addi	r6,r0,#-1
 3960  00004038  20420001	addi	r2,r2,#1
 3961  0000403c  08000008	j	L225_LF4
 3962  00004040  54000000	nop; not filled.
 3963  00004044          	L224_LF4:
 3964  00004044  20060001	addi	r6,r0,#1
 3965  00004048          	L225_LF4:
 3966  00004048  64810000	snei	r1,r4,#0
 3967  0000404c  14200054	bnez	r1,L226_LF4
 3968  00004050  54000000	nop; not filled.
 3969  00004054  90410000	lbu	r1,(r2)
 3970  00004058  60210030	seqi	r1,r1,#48
 3971  0000405c  10200040	beqz	r1,L227_LF4
 3972  00004060  54000000	nop; not filled.
 3973  00004064  20420001	addi	r2,r2,#1
 3974  00004068  905f0000	lbu	r31,(r2)
 3975  0000406c  63e10078	seqi	r1,r31,#120
 3976  00004070  14200010	bnez	r1,L229_LF4
 3977  00004074  54000000	nop; not filled.
 3978  00004078  63e10058	seqi	r1,r31,#88
 3979  0000407c  10200014	beqz	r1,L228_LF4
 3980  00004080  54000000	nop; not filled.
 3981  00004084          	L229_LF4:
 3982  00004084  20040010	addi	r4,r0,#16
 3983  00004088  20420001	addi	r2,r2,#1
 3984  0000408c  08000014	j	L226_LF4
 3985  00004090  54000000	nop; not filled.
 3986  00004094          	L228_LF4:
 3987  00004094  20040008	addi	r4,r0,#8
 3988  00004098  08000008	j	L226_LF4
 3989  0000409c  54000000	nop; not filled.
 3990  000040a0          	L227_LF4:
 3991  000040a0  2004000a	addi	r4,r0,#10
 3992  000040a4          	L226_LF4:
 3993  000040a4  2081ffff	addi	r1,r4,#-1
 3994  000040a8  6c21000f	sgtui	r1,r1,#15
 3995  000040ac  10200010	beqz	r1,L233_LF4
 3996  000040b0  54000000	nop; not filled.
 3997  000040b4          	L248_LF4:
 3998  000040b4  00030820	add	r1,r0,r3
 3999  000040b8  080000c4	j	L245_LF4
 4000  000040bc  54000000	nop; not filled.
 4001  000040c0          	L233_LF4:
 4002  000040c0  805f0000	lb	r31,(r2)
 4003  000040c4  23e1ffd0	addi	r1,r31,#-48
 4004  000040c8  302100ff	andi	r1,r1,#0x00ff
 4005  000040cc  70210009	sleui	r1,r1,#9
 4006  000040d0  10200014	beqz	r1,L236_LF4
 4007  000040d4  54000000	nop; not filled.
 4008  000040d8  33e100ff	andi	r1,r31,#0x00ff
 4009  000040dc  2021ffd0	addi	r1,r1,#-48
 4010  000040e0  08000050	j	L237_LF4
 4011  000040e4  54000000	nop; not filled.
 4012  000040e8          	L236_LF4:
 4013  000040e8  23e1ff9f	addi	r1,r31,#-97
 4014  000040ec  302100ff	andi	r1,r1,#0x00ff
 4015  000040f0  70210019	sleui	r1,r1,#25
 4016  000040f4  10200014	beqz	r1,L238_LF4
 4017  000040f8  54000000	nop; not filled.
 4018  000040fc  33e100ff	andi	r1,r31,#0x00ff
 4019  00004100  2021ffa9	addi	r1,r1,#-87
 4020  00004104  0800002c	j	L237_LF4
 4021  00004108  54000000	nop; not filled.
 4022  0000410c          	L238_LF4:
 4023  0000410c  23e1ffbf	addi	r1,r31,#-65
 4024  00004110  302100ff	andi	r1,r1,#0x00ff
 4025  00004114  70210019	sleui	r1,r1,#25
 4026  00004118  10200014	beqz	r1,L240_LF4
 4027  0000411c  54000000	nop; not filled.
 4028  00004120  33e100ff	andi	r1,r31,#0x00ff
 4029  00004124  2021ffc9	addi	r1,r1,#-55
 4030  00004128  08000008	j	L237_LF4
 4031  0000412c  54000000	nop; not filled.
 4032  00004130          	L240_LF4:
 4033  00004130  200103e8	addi	r1,r0,#1000
 4034  00004134          	L237_LF4:
 4035  00004134  0024f82a	slt	r31,r1,r4
 4036  00004138  13e00024	beqz	r31,L246_LF4
 4037  0000413c  54000000	nop; not filled.
 4038  00004140  00600035	movi2fp	f0,r3
 4039  00004144  00800835	movi2fp	f1,r4
 4040  00004148  0401000e	mult	f0,f0,f1
 4041  0000414c  00001834	movfp2i	r3,f0
 4042  00004150  00611820	add	r3,r3,r1
 4043  00004154  20420001	addi	r2,r2,#1
 4044  00004158  17e0ff64	bnez	r31,L233_LF4
 4045  0000415c  54000000	nop; not filled.
 4046  00004160          	L246_LF4:
 4047  00004160  64a10000	snei	r1,r5,#0
 4048  00004164  10200008	beqz	r1,L244_LF4
 4049  00004168  54000000	nop; not filled.
 4050  0000416c  aca20000	sw	(r5),r2
 4051  00004170          	L244_LF4:
 4052  00004170  00600035	movi2fp	f0,r3
 4053  00004174  00c00835	movi2fp	f1,r6
 4054  00004178  0401000e	mult	f0,f0,f1
 4055  0000417c  00000834	movfp2i	r1,f0
 4056  00004180          	L245_LF4:
 4057  00004180  8fa20000	lw	r2,0(r29)
 4058  00004184  8fa30004	lw	r3,4(r29)
 4059  00004188  8fa40008	lw	r4,8(r29)
 4060  0000418c  8fa5000c	lw	r5,12(r29)
 4061  00004190  8fa60010	lw	r6,16(r29)
 4062  00004194  8fdffff8	lw	r31,-8(r30)
 4063  00004198  001ee820	add	r29,r0,r30
 4064  0000419c  8fdefffc	lw	r30,-4(r30)
 4065  000041a0  4be00000	jr	r31
 4066  000041a4  54000000	nop
 4067  000041a8          	.endproc _dstrtol
 4068  000041a8          	.align 2
 4069  000041a8          	.proc _bcopy
 4070  000041a8          	.global _bcopy
 4071  000041a8          	_bcopy:
 4072                      ;  Function 'bcopy'; 0 bytes of locals, 3 regs to save.
 4073  000041a8  afbefffc	sw	-4(r29),r30; push fp
 4074  000041ac  001df020	add	r30,r0,r29; fp = sp
 4075  000041b0  afbffff8	sw	-8(r29),r31; push ret addr
 4076  000041b4  2fbd0018	subui	r29,r29,#24; alloc local storage
 4077  000041b8  afa20000	sw	0(r29),r2
 4078  000041bc  afa30004	sw	4(r29),r3
 4079  000041c0  afa40008	sw	8(r29),r4
 4080  000041c4  8fc30000	lw	r3,(r30)
 4081  000041c8  8fc20004	lw	r2,4(r30)
 4082  000041cc  8fdf0008	lw	r31,8(r30)
 4083  000041d0  08000014	j	L259_LF4
 4084  000041d4  54000000	nop; not filled.
 4085  000041d8          	L257_LF4:
 4086  000041d8  80640000	lb	r4,(r3)
 4087  000041dc  a0440000	sb	(r2),r4
 4088  000041e0  20630001	addi	r3,r3,#1
 4089  000041e4  20420001	addi	r2,r2,#1
 4090  000041e8          	L259_LF4:
 4091  000041e8  001f0820	add	r1,r0,r31
 4092  000041ec  23ffffff	addi	r31,r31,#-1
 4093  000041f0  6c210000	sgti	r1,r1,#0
 4094  000041f4  1420ffe0	bnez	r1,L257_LF4
 4095  000041f8  54000000	nop; not filled.
 4096  000041fc  8fa20000	lw	r2,0(r29)
 4097  00004200  8fa30004	lw	r3,4(r29)
 4098  00004204  8fa40008	lw	r4,8(r29)
 4099  00004208  8fdffff8	lw	r31,-8(r30)
 4100  0000420c  001ee820	add	r29,r0,r30
 4101  00004210  8fdefffc	lw	r30,-4(r30)
 4102  00004214  4be00000	jr	r31
 4103  00004218  54000000	nop
 4104  0000421c          	.endproc _bcopy
 4105  0000421c          	.align 2
 4106  0000421c          	.proc _bzero
 4107  0000421c          	.global _bzero
 4108  0000421c          	_bzero:
 4109                      ;  Function 'bzero'; 0 bytes of locals, 2 regs to save.
 4110  0000421c  afbefffc	sw	-4(r29),r30; push fp
 4111  00004220  001df020	add	r30,r0,r29; fp = sp
 4112  00004224  afbffff8	sw	-8(r29),r31; push ret addr
 4113  00004228  2fbd0010	subui	r29,r29,#16; alloc local storage
 4114  0000422c  afa20000	sw	0(r29),r2
 4115  00004230  afa30004	sw	4(r29),r3
 4116  00004234  8fc20000	lw	r2,(r30)
 4117  00004238  8fdf0004	lw	r31,4(r30)
 4118  0000423c  08000010	j	L270_LF4
 4119  00004240  54000000	nop; not filled.
 4120  00004244          	L268_LF4:
 4121  00004244  20030000	addi	r3,r0,(#0x0)&0xff
 4122  00004248  a0430000	sb	(r2),r3
 4123  0000424c  20420001	addi	r2,r2,#1
 4124  00004250          	L270_LF4:
 4125  00004250  001f0820	add	r1,r0,r31
 4126  00004254  23ffffff	addi	r31,r31,#-1
 4127  00004258  6c210000	sgti	r1,r1,#0
 4128  0000425c  1420ffe4	bnez	r1,L268_LF4
 4129  00004260  54000000	nop; not filled.
 4130  00004264  8fa20000	lw	r2,0(r29)
 4131  00004268  8fa30004	lw	r3,4(r29)
 4132  0000426c  8fdffff8	lw	r31,-8(r30)
 4133  00004270  001ee820	add	r29,r0,r30
 4134  00004274  8fdefffc	lw	r30,-4(r30)
 4135  00004278  4be00000	jr	r31
 4136  0000427c  54000000	nop
 4137  00004280          	.endproc _bzero
 4138                      ; Compiled by GCC
 4140  00004280          	.align 2
 4141  00004280          	.proc _isspace
 4142  00004280          	.global _isspace
 4143  00004280          	_isspace:
 4144                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 4145  00004280  afbefffc	sw	-4(r29),r30; push fp
 4146  00004284  001df020	add	r30,r0,r29; fp = sp
 4147  00004288  afbffff8	sw	-8(r29),r31; push ret addr
 4148  0000428c  2fbd0010	subui	r29,r29,#16; alloc local storage
 4149  00004290  afa20000	sw	0(r29),r2
 4150  00004294  83c20003	lb	r2,3(r30)
 4151  00004298  201f0000	addi	r31,r0,#0
 4152  0000429c  304100ff	andi	r1,r2,#0x00ff
 4153  000042a0  60210020	seqi	r1,r1,#32
 4154  000042a4  14200018	bnez	r1,L6_LF5
 4155  000042a8  54000000	nop; not filled.
 4156  000042ac  2041fff7	addi	r1,r2,#-9
 4157  000042b0  302100ff	andi	r1,r1,#0x00ff
 4158  000042b4  70210001	sleui	r1,r1,#1
 4159  000042b8  10200008	beqz	r1,L5_LF5
 4160  000042bc  54000000	nop; not filled.
 4161  000042c0          	L6_LF5:
 4162  000042c0  201f0001	addi	r31,r0,#1
 4163  000042c4          	L5_LF5:
 4164  000042c4  001f0820	add	r1,r0,r31
 4165  000042c8  8fa20000	lw	r2,0(r29)
 4166  000042cc  8fdffff8	lw	r31,-8(r30)
 4167  000042d0  001ee820	add	r29,r0,r30
 4168  000042d4  8fdefffc	lw	r30,-4(r30)
 4169  000042d8  4be00000	jr	r31
 4170  000042dc  54000000	nop
 4171  000042e0          	.endproc _isspace
 4172  000042e0          	.align 2
 4173  000042e0          	.proc _isxdigit
 4174  000042e0          	.global _isxdigit
 4175  000042e0          	_isxdigit:
 4176                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 4177  000042e0  afbefffc	sw	-4(r29),r30; push fp
 4178  000042e4  001df020	add	r30,r0,r29; fp = sp
 4179  000042e8  afbffff8	sw	-8(r29),r31; push ret addr
 4180  000042ec  2fbd0010	subui	r29,r29,#16; alloc local storage
 4181  000042f0  afa20000	sw	0(r29),r2
 4182  000042f4  83df0003	lb	r31,3(r30)
 4183  000042f8  20020000	addi	r2,r0,#0
 4184  000042fc  23e1ffd0	addi	r1,r31,#-48
 4185  00004300  302100ff	andi	r1,r1,#0x00ff
 4186  00004304  70210009	sleui	r1,r1,#9
 4187  00004308  14200028	bnez	r1,L12_LF5
 4188  0000430c  54000000	nop; not filled.
 4189  00004310  23e1ff9f	addi	r1,r31,#-97
 4190  00004314  302100ff	andi	r1,r1,#0x00ff
 4191  00004318  70210005	sleui	r1,r1,#5
 4192  0000431c  14200014	bnez	r1,L12_LF5
 4193  00004320  54000000	nop; not filled.
 4194  00004324  33e100ff	andi	r1,r31,#0x00ff
 4195  00004328  64210041	snei	r1,r1,#65
 4196  0000432c  14200008	bnez	r1,L11_LF5
 4197  00004330  54000000	nop; not filled.
 4198  00004334          	L12_LF5:
 4199  00004334  20020001	addi	r2,r0,#1
 4200  00004338          	L11_LF5:
 4201  00004338  00020820	add	r1,r0,r2
 4202  0000433c  8fa20000	lw	r2,0(r29)
 4203  00004340  8fdffff8	lw	r31,-8(r30)
 4204  00004344  001ee820	add	r29,r0,r30
 4205  00004348  8fdefffc	lw	r30,-4(r30)
 4206  0000434c  4be00000	jr	r31
 4207  00004350  54000000	nop
 4208  00004354          	.endproc _isxdigit
 4209  00004354          	.align 2
 4210  00004354          	.proc _DisableIntrs
 4211  00004354          	.global _DisableIntrs
 4212  00004354          	_DisableIntrs:
 4213                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
 4214  00004354  afbefffc	sw	-4(r29),r30; push fp
 4215  00004358  001df020	add	r30,r0,r29; fp = sp
 4216  0000435c  afbffff8	sw	-8(r29),r31; push ret addr
 4217  00004360  2fbd0010	subui	r29,r29,#16; alloc local storage
 4218  00004364  afa20000	sw	0(r29),r2
 4219  00004368  23bdfff8	addi	r29,r29,#-8
 4220  0000436c  2002000f	addi	r2,r0,#15
 4221  00004370  afa20000	sw	(r29),r2
 4222  00004374  0fffcf10	jal	_SetIntrs
 4223  00004378  54000000	nop; not filled.
 4224  0000437c  23bd0008	addi	r29,r29,#8
 4225  00004380  8fa20000	lw	r2,0(r29)
 4226  00004384  8fdffff8	lw	r31,-8(r30)
 4227  00004388  001ee820	add	r29,r0,r30
 4228  0000438c  8fdefffc	lw	r30,-4(r30)
 4229  00004390  4be00000	jr	r31
 4230  00004394  54000000	nop
 4231  00004398          	.endproc _DisableIntrs
 4232  00004398          	.align 2
 4233  00004398          	.proc _EnableIntrs
 4234  00004398          	.global _EnableIntrs
 4235  00004398          	_EnableIntrs:
 4236                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
 4237  00004398  afbefffc	sw	-4(r29),r30; push fp
 4238  0000439c  001df020	add	r30,r0,r29; fp = sp
 4239  000043a0  afbffff8	sw	-8(r29),r31; push ret addr
 4240  000043a4  2fbd0010	subui	r29,r29,#16; alloc local storage
 4241  000043a8  afa20000	sw	0(r29),r2
 4242  000043ac  23bdfff8	addi	r29,r29,#-8
 4243  000043b0  20020000	addi	r2,r0,#0
 4244  000043b4  afa20000	sw	(r29),r2
 4245  000043b8  0fffcecc	jal	_SetIntrs
 4246  000043bc  54000000	nop; not filled.
 4247  000043c0  23bd0008	addi	r29,r29,#8
 4248  000043c4  8fa20000	lw	r2,0(r29)
 4249  000043c8  8fdffff8	lw	r31,-8(r30)
 4250  000043cc  001ee820	add	r29,r0,r30
 4251  000043d0  8fdefffc	lw	r30,-4(r30)
 4252  000043d4  4be00000	jr	r31
 4253  000043d8  54000000	nop
 4254  000043dc          	.endproc _EnableIntrs
 4255  000043dc          	.align 2
 4256  000043dc          	.proc _RestoreIntrs
 4257  000043dc          	.global _RestoreIntrs
 4258  000043dc          	_RestoreIntrs:
 4259                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
 4260  000043dc  afbefffc	sw	-4(r29),r30; push fp
 4261  000043e0  001df020	add	r30,r0,r29; fp = sp
 4262  000043e4  afbffff8	sw	-8(r29),r31; push ret addr
 4263  000043e8  2fbd0010	subui	r29,r29,#16; alloc local storage
 4264  000043ec  afa20000	sw	0(r29),r2
 4265  000043f0  23bdfff8	addi	r29,r29,#-8
 4266  000043f4  8fc20000	lw	r2,(r30)
 4267  000043f8  afa20000	sw	(r29),r2
 4268  000043fc  0fffce88	jal	_SetIntrs
 4269  00004400  54000000	nop; not filled.
 4270  00004404  23bd0008	addi	r29,r29,#8
 4271  00004408  8fa20000	lw	r2,0(r29)
 4272  0000440c  8fdffff8	lw	r31,-8(r30)
 4273  00004410  001ee820	add	r29,r0,r30
 4274  00004414  8fdefffc	lw	r30,-4(r30)
 4275  00004418  4be00000	jr	r31
 4276  0000441c  54000000	nop
 4277  00004420          	.endproc _RestoreIntrs
 4278  00004420          	.align 2
 4279  00004420          	.proc _QueueLinkInit
 4280  00004420          	.global _QueueLinkInit
 4281  00004420          	_QueueLinkInit:
 4282                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
 4283  00004420  afbefffc	sw	-4(r29),r30; push fp
 4284  00004424  001df020	add	r30,r0,r29; fp = sp
 4285  00004428  afbffff8	sw	-8(r29),r31; push ret addr
 4286  0000442c  2fbd0010	subui	r29,r29,#16; alloc local storage
 4287  00004430  afa20000	sw	0(r29),r2
 4288  00004434  8fc10000	lw	r1,(r30)
 4289  00004438  8fc20004	lw	r2,4(r30)
 4290  0000443c  201f0000	addi	r31,r0,#0
 4291  00004440  ac3f0000	sw	(r1),r31
 4292  00004444  ac22000c	sw	12(r1),r2
 4293  00004448  8fa20000	lw	r2,0(r29)
 4294  0000444c  8fdffff8	lw	r31,-8(r30)
 4295  00004450  001ee820	add	r29,r0,r30
 4296  00004454  8fdefffc	lw	r30,-4(r30)
 4297  00004458  4be00000	jr	r31
 4298  0000445c  54000000	nop
 4299  00004460          	.endproc _QueueLinkInit
 4300  00004460          	.align 2
 4301  00004460          	.proc _QueueNext
 4302  00004460          	.global _QueueNext
 4303  00004460          	_QueueNext:
 4304                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
 4305  00004460  afbefffc	sw	-4(r29),r30; push fp
 4306  00004464  001df020	add	r30,r0,r29; fp = sp
 4307  00004468  afbffff8	sw	-8(r29),r31; push ret addr
 4308  0000446c  2fbd0008	subui	r29,r29,#8; alloc local storage
 4309  00004470  8fc10000	lw	r1,(r30)
 4310  00004474  8c210000	lw	r1,(r1)
 4311  00004478  8fdffff8	lw	r31,-8(r30)
 4312  0000447c  001ee820	add	r29,r0,r30
 4313  00004480  8fdefffc	lw	r30,-4(r30)
 4314  00004484  4be00000	jr	r31
 4315  00004488  54000000	nop
 4316  0000448c          	.endproc _QueueNext
 4317  0000448c          	.align 2
 4318  0000448c          	.proc _QueuePrev
 4319  0000448c          	.global _QueuePrev
 4320  0000448c          	_QueuePrev:
 4321                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
 4322  0000448c  afbefffc	sw	-4(r29),r30; push fp
 4323  00004490  001df020	add	r30,r0,r29; fp = sp
 4324  00004494  afbffff8	sw	-8(r29),r31; push ret addr
 4325  00004498  2fbd0008	subui	r29,r29,#8; alloc local storage
 4326  0000449c  8fc10000	lw	r1,(r30)
 4327  000044a0  8c210004	lw	r1,4(r1)
 4328  000044a4  8fdffff8	lw	r31,-8(r30)
 4329  000044a8  001ee820	add	r29,r0,r30
 4330  000044ac  8fdefffc	lw	r30,-4(r30)
 4331  000044b0  4be00000	jr	r31
 4332  000044b4  54000000	nop
 4333  000044b8          	.endproc _QueuePrev
 4334  000044b8          	.align 2
 4335  000044b8          	.proc _QueueFirst
 4336  000044b8          	.global _QueueFirst
 4337  000044b8          	_QueueFirst:
 4338                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
 4339  000044b8  afbefffc	sw	-4(r29),r30; push fp
 4340  000044bc  001df020	add	r30,r0,r29; fp = sp
 4341  000044c0  afbffff8	sw	-8(r29),r31; push ret addr
 4342  000044c4  2fbd0008	subui	r29,r29,#8; alloc local storage
 4343  000044c8  8fc10000	lw	r1,(r30)
 4344  000044cc  8c210000	lw	r1,(r1)
 4345  000044d0  8fdffff8	lw	r31,-8(r30)
 4346  000044d4  001ee820	add	r29,r0,r30
 4347  000044d8  8fdefffc	lw	r30,-4(r30)
 4348  000044dc  4be00000	jr	r31
 4349  000044e0  54000000	nop
 4350  000044e4          	.endproc _QueueFirst
 4351  000044e4          	.align 2
 4352  000044e4          	.proc _QueueLast
 4353  000044e4          	.global _QueueLast
 4354  000044e4          	_QueueLast:
 4355                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
 4356  000044e4  afbefffc	sw	-4(r29),r30; push fp
 4357  000044e8  001df020	add	r30,r0,r29; fp = sp
 4358  000044ec  afbffff8	sw	-8(r29),r31; push ret addr
 4359  000044f0  2fbd0008	subui	r29,r29,#8; alloc local storage
 4360  000044f4  8fc10000	lw	r1,(r30)
 4361  000044f8  8c210004	lw	r1,4(r1)
 4362  000044fc  8fdffff8	lw	r31,-8(r30)
 4363  00004500  001ee820	add	r29,r0,r30
 4364  00004504  8fdefffc	lw	r30,-4(r30)
 4365  00004508  4be00000	jr	r31
 4366  0000450c  54000000	nop
 4367  00004510          	.endproc _QueueLast
 4368  00004510          	.align 2
 4369  00004510          	.proc _QueueInsertAfter
 4370  00004510          	.global _QueueInsertAfter
 4371  00004510          	_QueueInsertAfter:
 4372                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
 4373  00004510  afbefffc	sw	-4(r29),r30; push fp
 4374  00004514  001df020	add	r30,r0,r29; fp = sp
 4375  00004518  afbffff8	sw	-8(r29),r31; push ret addr
 4376  0000451c  2fbd0010	subui	r29,r29,#16; alloc local storage
 4377  00004520  afa20000	sw	0(r29),r2
 4378  00004524  afa30004	sw	4(r29),r3
 4379  00004528  8fc30000	lw	r3,(r30)
 4380  0000452c  8fc20004	lw	r2,4(r30)
 4381  00004530  8fc10008	lw	r1,8(r30)
 4382  00004534  ac230008	sw	8(r1),r3
 4383  00004538  ac220004	sw	4(r1),r2
 4384  0000453c  8c5f0000	lw	r31,(r2)
 4385  00004540  ac3f0000	sw	(r1),r31
 4386  00004544  ac410000	sw	(r2),r1
 4387  00004548  8c220000	lw	r2,(r1)
 4388  0000454c  ac410004	sw	4(r2),r1
 4389  00004550  8c610008	lw	r1,8(r3)
 4390  00004554  20210001	addi	r1,r1,#1
 4391  00004558  ac610008	sw	8(r3),r1
 4392  0000455c  8fa20000	lw	r2,0(r29)
 4393  00004560  8fa30004	lw	r3,4(r29)
 4394  00004564  8fdffff8	lw	r31,-8(r30)
 4395  00004568  001ee820	add	r29,r0,r30
 4396  0000456c  8fdefffc	lw	r30,-4(r30)
 4397  00004570  4be00000	jr	r31
 4398  00004574  54000000	nop
 4399  00004578          	.endproc _QueueInsertAfter
 4400  00004578          	.align 2
 4401  00004578          	.proc _QueueInsertFirst
 4402  00004578          	.global _QueueInsertFirst
 4403  00004578          	_QueueInsertFirst:
 4404                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
 4405  00004578  afbefffc	sw	-4(r29),r30; push fp
 4406  0000457c  001df020	add	r30,r0,r29; fp = sp
 4407  00004580  afbffff8	sw	-8(r29),r31; push ret addr
 4408  00004584  2fbd0010	subui	r29,r29,#16; alloc local storage
 4409  00004588  afa20000	sw	0(r29),r2
 4410  0000458c  afa30004	sw	4(r29),r3
 4411  00004590  8fc30000	lw	r3,(r30)
 4412  00004594  8fc10004	lw	r1,4(r30)
 4413  00004598  ac230008	sw	8(r1),r3
 4414  0000459c  ac230004	sw	4(r1),r3
 4415  000045a0  8c7f0000	lw	r31,(r3)
 4416  000045a4  ac3f0000	sw	(r1),r31
 4417  000045a8  ac610000	sw	(r3),r1
 4418  000045ac  8c220000	lw	r2,(r1)
 4419  000045b0  ac410004	sw	4(r2),r1
 4420  000045b4  8c610008	lw	r1,8(r3)
 4421  000045b8  20210001	addi	r1,r1,#1
 4422  000045bc  ac610008	sw	8(r3),r1
 4423  000045c0  8fa20000	lw	r2,0(r29)
 4424  000045c4  8fa30004	lw	r3,4(r29)
 4425  000045c8  8fdffff8	lw	r31,-8(r30)
 4426  000045cc  001ee820	add	r29,r0,r30
 4427  000045d0  8fdefffc	lw	r30,-4(r30)
 4428  000045d4  4be00000	jr	r31
 4429  000045d8  54000000	nop
 4430  000045dc          	.endproc _QueueInsertFirst
 4431  000045dc          	.align 2
 4432  000045dc          	.proc _QueueInsertLast
 4433  000045dc          	.global _QueueInsertLast
 4434  000045dc          	_QueueInsertLast:
 4435                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
 4436  000045dc  afbefffc	sw	-4(r29),r30; push fp
 4437  000045e0  001df020	add	r30,r0,r29; fp = sp
 4438  000045e4  afbffff8	sw	-8(r29),r31; push ret addr
 4439  000045e8  2fbd0010	subui	r29,r29,#16; alloc local storage
 4440  000045ec  afa20000	sw	0(r29),r2
 4441  000045f0  afa30004	sw	4(r29),r3
 4442  000045f4  8fc30000	lw	r3,(r30)
 4443  000045f8  8fc10004	lw	r1,4(r30)
 4444  000045fc  8c620004	lw	r2,4(r3)
 4445  00004600  ac230008	sw	8(r1),r3
 4446  00004604  ac220004	sw	4(r1),r2
 4447  00004608  8c5f0000	lw	r31,(r2)
 4448  0000460c  ac3f0000	sw	(r1),r31
 4449  00004610  ac410000	sw	(r2),r1
 4450  00004614  8c220000	lw	r2,(r1)
 4451  00004618  ac410004	sw	4(r2),r1
 4452  0000461c  8c610008	lw	r1,8(r3)
 4453  00004620  20210001	addi	r1,r1,#1
 4454  00004624  ac610008	sw	8(r3),r1
 4455  00004628  8fa20000	lw	r2,0(r29)
 4456  0000462c  8fa30004	lw	r3,4(r29)
 4457  00004630  8fdffff8	lw	r31,-8(r30)
 4458  00004634  001ee820	add	r29,r0,r30
 4459  00004638  8fdefffc	lw	r30,-4(r30)
 4460  0000463c  4be00000	jr	r31
 4461  00004640  54000000	nop
 4462  00004644          	.endproc _QueueInsertLast
 4463  00004644          	.align 2
 4464  00004644          	.proc _QueueRemove
 4465  00004644          	.global _QueueRemove
 4466  00004644          	_QueueRemove:
 4467                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
 4468  00004644  afbefffc	sw	-4(r29),r30; push fp
 4469  00004648  001df020	add	r30,r0,r29; fp = sp
 4470  0000464c  afbffff8	sw	-8(r29),r31; push ret addr
 4471  00004650  2fbd0010	subui	r29,r29,#16; alloc local storage
 4472  00004654  afa20000	sw	0(r29),r2
 4473  00004658  afa30004	sw	4(r29),r3
 4474  0000465c  8fdf0000	lw	r31,(r30)
 4475  00004660  8fe10008	lw	r1,8(r31)
 4476  00004664  8c210008	lw	r1,8(r1)
 4477  00004668  6c210000	sgti	r1,r1,#0
 4478  0000466c  1020002c	beqz	r1,L44_LF5
 4479  00004670  54000000	nop; not filled.
 4480  00004674  8fe10004	lw	r1,4(r31)
 4481  00004678  8fe30000	lw	r3,(r31)
 4482  0000467c  ac230000	sw	(r1),r3
 4483  00004680  8fe10000	lw	r1,(r31)
 4484  00004684  8fe30004	lw	r3,4(r31)
 4485  00004688  ac230004	sw	4(r1),r3
 4486  0000468c  8fe20008	lw	r2,8(r31)
 4487  00004690  8c410008	lw	r1,8(r2)
 4488  00004694  2021ffff	addi	r1,r1,#-1
 4489  00004698  ac410008	sw	8(r2),r1
 4490  0000469c          	L44_LF5:
 4491  0000469c  20030000	addi	r3,r0,#0
 4492  000046a0  afe30000	sw	(r31),r3
 4493  000046a4  8fa20000	lw	r2,0(r29)
 4494  000046a8  8fa30004	lw	r3,4(r29)
 4495  000046ac  8fdffff8	lw	r31,-8(r30)
 4496  000046b0  001ee820	add	r29,r0,r30
 4497  000046b4  8fdefffc	lw	r30,-4(r30)
 4498  000046b8  4be00000	jr	r31
 4499  000046bc  54000000	nop
 4500  000046c0          	.endproc _QueueRemove
 4501  000046c0          	.align 2
 4502  000046c0          	.proc _QueueLength
 4503  000046c0          	.global _QueueLength
 4504  000046c0          	_QueueLength:
 4505                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
 4506  000046c0  afbefffc	sw	-4(r29),r30; push fp
 4507  000046c4  001df020	add	r30,r0,r29; fp = sp
 4508  000046c8  afbffff8	sw	-8(r29),r31; push ret addr
 4509  000046cc  2fbd0008	subui	r29,r29,#8; alloc local storage
 4510  000046d0  8fc10000	lw	r1,(r30)
 4511  000046d4  8c210008	lw	r1,8(r1)
 4512  000046d8  8fdffff8	lw	r31,-8(r30)
 4513  000046dc  001ee820	add	r29,r0,r30
 4514  000046e0  8fdefffc	lw	r30,-4(r30)
 4515  000046e4  4be00000	jr	r31
 4516  000046e8  54000000	nop
 4517  000046ec          	.endproc _QueueLength
 4518  000046ec          	.align 2
 4519  000046ec          	.proc _QueueEmpty
 4520  000046ec          	.global _QueueEmpty
 4521  000046ec          	_QueueEmpty:
 4522                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
 4523  000046ec  afbefffc	sw	-4(r29),r30; push fp
 4524  000046f0  001df020	add	r30,r0,r29; fp = sp
 4525  000046f4  afbffff8	sw	-8(r29),r31; push ret addr
 4526  000046f8  2fbd0008	subui	r29,r29,#8; alloc local storage
 4527  000046fc  8fc10000	lw	r1,(r30)
 4528  00004700  8c210008	lw	r1,8(r1)
 4529  00004704  60210000	seqi	r1,r1,#0
 4530  00004708  8fdffff8	lw	r31,-8(r30)
 4531  0000470c  001ee820	add	r29,r0,r30
 4532  00004710  8fdefffc	lw	r30,-4(r30)
 4533  00004714  4be00000	jr	r31
 4534  00004718  54000000	nop
 4535  0000471c          	.endproc _QueueEmpty
 4536  0000471c          	.data
 4537  0000f420          	.align 2
 4538  0000f420          	_processQuantum_LF5:
 4539  0000f420  00002710	.word 10000
 4540  0000f424          	.global __time
 4541  0000f424          	.align 2
 4542  0000f424          	__time:
 4543  0000f424  00000000	.word 0
 4544  0000f428          	.align 2
 4545  0000f428          	LC0_LF5:
 4546  0000f428  456e7465	.ascii "Entering ProcessModuleInit\n\000"
 4546  0000f42c  72696e67	
 4546  0000f430  2050726f	
 4546  0000f434  63657373	
 4546  0000f438  4d6f6475	
 4546  0000f43c  6c65496e	
 4546  0000f440  69740a00	
 4547  0000f444          	.align 2
 4548  0000f444          	LC1_LF5:
 4549  0000f444  496e6974	.ascii "Initializing PCB %d @ 0x%x.\n\000"
 4549  0000f448  69616c69	
 4549  0000f44c  7a696e67	
 4549  0000f450  20504342	
 4549  0000f454  20256420	
 4549  0000f458  40203078	
 4549  0000f45c  25782e0a	
 4549  0000f460  00      	
 4550  0000f461          	.align 2
 4551  0000f464          	LC2_LF5:
 4552  0000f464  4c656176	.ascii "Leaving ProcessModuleInit\n\000"
 4552  0000f468  696e6720	
 4552  0000f46c  50726f63	
 4552  0000f470  6573734d	
 4552  0000f474  6f64756c	
 4552  0000f478  65496e69	
 4552  0000f47c  740a00  	
 4553  0000f47f          	.text
 4554  0000471c          	.align 2
 4555  0000471c          	.proc _ProcessModuleInit
 4556  0000471c          	.global _ProcessModuleInit
 4557  0000471c          	_ProcessModuleInit:
 4558                      ;  Function 'ProcessModuleInit'; 0 bytes of locals, 7 regs to save.
 4559  0000471c  afbefffc	sw	-4(r29),r30; push fp
 4560  00004720  001df020	add	r30,r0,r29; fp = sp
 4561  00004724  afbffff8	sw	-8(r29),r31; push ret addr
 4562  00004728  2fbd0028	subui	r29,r29,#40; alloc local storage
 4563  0000472c  afa20000	sw	0(r29),r2
 4564  00004730  afa30004	sw	4(r29),r3
 4565  00004734  afa40008	sw	8(r29),r4
 4566  00004738  afa5000c	sw	12(r29),r5
 4567  0000473c  afa60010	sw	16(r29),r6
 4568  00004740  afa70014	sw	20(r29),r7
 4569  00004744  afa80018	sw	24(r29),r8
 4570  00004748  23bdfff8	addi	r29,r29,#-8
 4571  0000474c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4572  00004750  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 4573  00004754  afa20000	sw	(r29),r2
 4574  00004758  20080070	addi	r8,r0,#112
 4575  0000475c  afa80004	sw	4(r29),r8
 4576  00004760  0ffff6b4	jal	_dindex
 4577  00004764  54000000	nop; not filled.
 4578  00004768  23bd0008	addi	r29,r29,#8
 4579  0000476c  64210000	snei	r1,r1,#0
 4580  00004770  1420002c	bnez	r1,L53_LF5
 4581  00004774  54000000	nop; not filled.
 4582  00004778  23bdfff8	addi	r29,r29,#-8
 4583  0000477c  afa20000	sw	(r29),r2
 4584  00004780  2008002b	addi	r8,r0,#43
 4585  00004784  afa80004	sw	4(r29),r8
 4586  00004788  0ffff68c	jal	_dindex
 4587  0000478c  54000000	nop; not filled.
 4588  00004790  23bd0008	addi	r29,r29,#8
 4589  00004794  64210000	snei	r1,r1,#0
 4590  00004798  10200020	beqz	r1,L52_LF5
 4591  0000479c  54000000	nop; not filled.
 4592  000047a0          	L53_LF5:
 4593  000047a0  23bdfff8	addi	r29,r29,#-8
 4594  000047a4  3c080000	lhi	r8,((LC0_LF5)>>16)&0xffff
 4595  000047a8  2508f428	addui	r8,r8,(LC0_LF5)&0xffff
 4596  000047ac  afa80000	sw	(r29),r8
 4597  000047b0  0c005b94	jal	_printf
 4598  000047b4  54000000	nop; not filled.
 4599  000047b8  23bd0008	addi	r29,r29,#8
 4600  000047bc          	L52_LF5:
 4601  000047bc  23bdfff8	addi	r29,r29,#-8
 4602  000047c0  3c020000	lhi	r2,((_freepcbs_LF5)>>16)&0xffff
 4603  000047c4  2442fe18	addui	r2,r2,(_freepcbs_LF5)&0xffff
 4604  000047c8  afa20000	sw	(r29),r2
 4605  000047cc  0c0032d0	jal	_QueueInit
 4606  000047d0  54000000	nop; not filled.
 4607  000047d4  3c080000	lhi	r8,((_runQueue_LF5)>>16)&0xffff
 4608  000047d8  2508fe24	addui	r8,r8,(_runQueue_LF5)&0xffff
 4609  000047dc  afa80000	sw	(r29),r8
 4610  000047e0  0c0032bc	jal	_QueueInit
 4611  000047e4  54000000	nop; not filled.
 4612  000047e8  3c080000	lhi	r8,((_waitQueue_LF5)>>16)&0xffff
 4613  000047ec  2508fe30	addui	r8,r8,(_waitQueue_LF5)&0xffff
 4614  000047f0  afa80000	sw	(r29),r8
 4615  000047f4  0c0032a8	jal	_QueueInit
 4616  000047f8  54000000	nop; not filled.
 4617  000047fc  3c080000	lhi	r8,((_zombieQueue_LF5)>>16)&0xffff
 4618  00004800  2508fe3c	addui	r8,r8,(_zombieQueue_LF5)&0xffff
 4619  00004804  afa80000	sw	(r29),r8
 4620  00004808  0c003294	jal	_QueueInit
 4621  0000480c  54000000	nop; not filled.
 4622  00004810  20040000	addi	r4,r0,#0
 4623  00004814  23bd0008	addi	r29,r29,#8
 4624  00004818  3c070000	lhi	r7,((_debugstr)>>16)&0xffff
 4625  0000481c  24e7fd4a	addui	r7,r7,(_debugstr)&0xffff
 4626  00004820  3c010000	lhi	r1,((_pcbs_LF5)>>16)&0xffff
 4627  00004824  2421fe48	addui	r1,r1,(_pcbs_LF5)&0xffff
 4628  00004828  00022820	add	r5,r0,r2
 4629  0000482c  202200a4	addi	r2,r1,#164
 4630  00004830  00011820	add	r3,r0,r1
 4631  00004834  00033020	add	r6,r0,r3
 4632  00004838          	L57_LF5:
 4633  00004838  23bdfff8	addi	r29,r29,#-8
 4634  0000483c  afa70000	sw	(r29),r7
 4635  00004840  20080070	addi	r8,r0,#112
 4636  00004844  afa80004	sw	4(r29),r8
 4637  00004848  0ffff5cc	jal	_dindex
 4638  0000484c  54000000	nop; not filled.
 4639  00004850  23bd0008	addi	r29,r29,#8
 4640  00004854  64210000	snei	r1,r1,#0
 4641  00004858  1420002c	bnez	r1,L59_LF5
 4642  0000485c  54000000	nop; not filled.
 4643  00004860  23bdfff8	addi	r29,r29,#-8
 4644  00004864  afa70000	sw	(r29),r7
 4645  00004868  2008002b	addi	r8,r0,#43
 4646  0000486c  afa80004	sw	4(r29),r8
 4647  00004870  0ffff5a4	jal	_dindex
 4648  00004874  54000000	nop; not filled.
 4649  00004878  23bd0008	addi	r29,r29,#8
 4650  0000487c  64210000	snei	r1,r1,#0
 4651  00004880  10200028	beqz	r1,L58_LF5
 4652  00004884  54000000	nop; not filled.
 4653  00004888          	L59_LF5:
 4654  00004888  23bdfff0	addi	r29,r29,#-16
 4655  0000488c  3c080000	lhi	r8,((LC1_LF5)>>16)&0xffff
 4656  00004890  2508f444	addui	r8,r8,(LC1_LF5)&0xffff
 4657  00004894  afa80000	sw	(r29),r8
 4658  00004898  afa40004	sw	4(r29),r4
 4659  0000489c  afa60008	sw	8(r29),r6
 4660  000048a0  0c005aa4	jal	_printf
 4661  000048a4  54000000	nop; not filled.
 4662  000048a8  23bd0010	addi	r29,r29,#16
 4663  000048ac          	L58_LF5:
 4664  000048ac  20080001	addi	r8,r0,#1
 4665  000048b0  ac68000c	sw	12(r3),r8
 4666  000048b4  20080000	addi	r8,r0,#0
 4667  000048b8  ac480000	sw	(r2),r8
 4668  000048bc  ac43000c	sw	12(r2),r3
 4669  000048c0  ac450008	sw	8(r2),r5
 4670  000048c4  ac450004	sw	4(r2),r5
 4671  000048c8  8ca80000	lw	r8,(r5)
 4672  000048cc  ac480000	sw	(r2),r8
 4673  000048d0  aca20000	sw	(r5),r2
 4674  000048d4  8c410000	lw	r1,(r2)
 4675  000048d8  ac220004	sw	4(r1),r2
 4676  000048dc  8ca10008	lw	r1,8(r5)
 4677  000048e0  20210001	addi	r1,r1,#1
 4678  000048e4  aca10008	sw	8(r5),r1
 4679  000048e8  204200b4	addi	r2,r2,#180
 4680  000048ec  206300b4	addi	r3,r3,#180
 4681  000048f0  20c600b4	addi	r6,r6,#180
 4682  000048f4  20840001	addi	r4,r4,#1
 4683  000048f8  7081001f	slei	r1,r4,#31
 4684  000048fc  1420ff38	bnez	r1,L57_LF5
 4685  00004900  54000000	nop; not filled.
 4686  00004904  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 4687  00004908  2421fe14	addui	r1,r1,(_currentPCB)&0xffff
 4688  0000490c  20080000	addi	r8,r0,#0
 4689  00004910  ac280000	sw	(r1),r8
 4690  00004914  23bdfff8	addi	r29,r29,#-8
 4691  00004918  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4692  0000491c  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 4693  00004920  afa20000	sw	(r29),r2
 4694  00004924  20080070	addi	r8,r0,#112
 4695  00004928  afa80004	sw	4(r29),r8
 4696  0000492c  0ffff4e8	jal	_dindex
 4697  00004930  54000000	nop; not filled.
 4698  00004934  23bd0008	addi	r29,r29,#8
 4699  00004938  64210000	snei	r1,r1,#0
 4700  0000493c  1420002c	bnez	r1,L65_LF5
 4701  00004940  54000000	nop; not filled.
 4702  00004944  23bdfff8	addi	r29,r29,#-8
 4703  00004948  afa20000	sw	(r29),r2
 4704  0000494c  2008002b	addi	r8,r0,#43
 4705  00004950  afa80004	sw	4(r29),r8
 4706  00004954  0ffff4c0	jal	_dindex
 4707  00004958  54000000	nop; not filled.
 4708  0000495c  23bd0008	addi	r29,r29,#8
 4709  00004960  64210000	snei	r1,r1,#0
 4710  00004964  10200020	beqz	r1,L64_LF5
 4711  00004968  54000000	nop; not filled.
 4712  0000496c          	L65_LF5:
 4713  0000496c  23bdfff8	addi	r29,r29,#-8
 4714  00004970  3c080000	lhi	r8,((LC2_LF5)>>16)&0xffff
 4715  00004974  2508f464	addui	r8,r8,(LC2_LF5)&0xffff
 4716  00004978  afa80000	sw	(r29),r8
 4717  0000497c  0c0059c8	jal	_printf
 4718  00004980  54000000	nop; not filled.
 4719  00004984  23bd0008	addi	r29,r29,#8
 4720  00004988          	L64_LF5:
 4721  00004988  8fa20000	lw	r2,0(r29)
 4722  0000498c  8fa30004	lw	r3,4(r29)
 4723  00004990  8fa40008	lw	r4,8(r29)
 4724  00004994  8fa5000c	lw	r5,12(r29)
 4725  00004998  8fa60010	lw	r6,16(r29)
 4726  0000499c  8fa70014	lw	r7,20(r29)
 4727  000049a0  8fa80018	lw	r8,24(r29)
 4728  000049a4  8fdffff8	lw	r31,-8(r30)
 4729  000049a8  001ee820	add	r29,r0,r30
 4730  000049ac  8fdefffc	lw	r30,-4(r30)
 4731  000049b0  4be00000	jr	r31
 4732  000049b4  54000000	nop
 4733  000049b8          	.endproc _ProcessModuleInit
 4734  000049b8          	.align 2
 4735  000049b8          	.proc _ProcessSetStatus
 4736  000049b8          	.global _ProcessSetStatus
 4737  000049b8          	_ProcessSetStatus:
 4738                      ;  Function 'ProcessSetStatus'; 0 bytes of locals, 2 regs to save.
 4739  000049b8  afbefffc	sw	-4(r29),r30; push fp
 4740  000049bc  001df020	add	r30,r0,r29; fp = sp
 4741  000049c0  afbffff8	sw	-8(r29),r31; push ret addr
 4742  000049c4  2fbd0010	subui	r29,r29,#16; alloc local storage
 4743  000049c8  afa20000	sw	0(r29),r2
 4744  000049cc  afa30004	sw	4(r29),r3
 4745  000049d0  8fc30000	lw	r3,(r30)
 4746  000049d4  8fc20004	lw	r2,4(r30)
 4747  000049d8  8c61000c	lw	r1,12(r3)
 4748  000049dc  201fffc0	addi	r31,r0,#-64
 4749  000049e0  003f0824	and	r1,r1,r31
 4750  000049e4  00220825	or	r1,r1,r2
 4751  000049e8  ac61000c	sw	12(r3),r1
 4752  000049ec  8fa20000	lw	r2,0(r29)
 4753  000049f0  8fa30004	lw	r3,4(r29)
 4754  000049f4  8fdffff8	lw	r31,-8(r30)
 4755  000049f8  001ee820	add	r29,r0,r30
 4756  000049fc  8fdefffc	lw	r30,-4(r30)
 4757  00004a00  4be00000	jr	r31
 4758  00004a04  54000000	nop
 4759  00004a08          	.endproc _ProcessSetStatus
 4760  00004a08          	.align 2
 4761  00004a08          	.proc _ProcessFreeResources
 4762  00004a08          	.global _ProcessFreeResources
 4763  00004a08          	_ProcessFreeResources:
 4764                      ;  Function 'ProcessFreeResources'; 0 bytes of locals, 4 regs to save.
 4765  00004a08  afbefffc	sw	-4(r29),r30; push fp
 4766  00004a0c  001df020	add	r30,r0,r29; fp = sp
 4767  00004a10  afbffff8	sw	-8(r29),r31; push ret addr
 4768  00004a14  2fbd0018	subui	r29,r29,#24; alloc local storage
 4769  00004a18  afa20000	sw	0(r29),r2
 4770  00004a1c  afa30004	sw	4(r29),r3
 4771  00004a20  afa40008	sw	8(r29),r4
 4772  00004a24  afa5000c	sw	12(r29),r5
 4773  00004a28  8fc40000	lw	r4,(r30)
 4774  00004a2c  3c030000	lhi	r3,((_freepcbs_LF5)>>16)&0xffff
 4775  00004a30  2463fe18	addui	r3,r3,(_freepcbs_LF5)&0xffff
 4776  00004a34  208200a4	addi	r2,r4,#164
 4777  00004a38  8c610004	lw	r1,4(r3)
 4778  00004a3c  ac8300ac	sw	172(r4),r3
 4779  00004a40  ac8100a8	sw	168(r4),r1
 4780  00004a44  8c250000	lw	r5,(r1)
 4781  00004a48  ac450000	sw	(r2),r5
 4782  00004a4c  ac220000	sw	(r1),r2
 4783  00004a50  8c410000	lw	r1,(r2)
 4784  00004a54  ac220004	sw	4(r1),r2
 4785  00004a58  8c610008	lw	r1,8(r3)
 4786  00004a5c  20210001	addi	r1,r1,#1
 4787  00004a60  ac610008	sw	8(r3),r1
 4788  00004a64  20020000	addi	r2,r0,#0
 4789  00004a68  8c8100a0	lw	r1,160(r4)
 4790  00004a6c  0041082a	slt	r1,r2,r1
 4791  00004a70  10200038	beqz	r1,L83_LF5
 4792  00004a74  54000000	nop; not filled.
 4793  00004a78  00041820	add	r3,r0,r4
 4794  00004a7c          	L85_LF5:
 4795  00004a7c  23bdfff8	addi	r29,r29,#-8
 4796  00004a80  8c650060	lw	r5,96(r3)
 4797  00004a84  afa50000	sw	(r29),r5
 4798  00004a88  0fffec34	jal	_MemoryFreePte
 4799  00004a8c  54000000	nop; not filled.
 4800  00004a90  23bd0008	addi	r29,r29,#8
 4801  00004a94  20630004	addi	r3,r3,#4
 4802  00004a98  20420001	addi	r2,r2,#1
 4803  00004a9c  8c8100a0	lw	r1,160(r4)
 4804  00004aa0  0041082a	slt	r1,r2,r1
 4805  00004aa4  1420ffd4	bnez	r1,L85_LF5
 4806  00004aa8  54000000	nop; not filled.
 4807  00004aac          	L83_LF5:
 4808  00004aac  23bdfff8	addi	r29,r29,#-8
 4809  00004ab0  94810008	lhu	r1,8(r4)
 4810  00004ab4  afa10000	sw	(r29),r1
 4811  00004ab8  0fffe738	jal	_MemoryFreePage
 4812  00004abc  54000000	nop; not filled.
 4813  00004ac0  23bd0008	addi	r29,r29,#8
 4814  00004ac4  8c81000c	lw	r1,12(r4)
 4815  00004ac8  2005ffc0	addi	r5,r0,#-64
 4816  00004acc  00250824	and	r1,r1,r5
 4817  00004ad0  34210001	ori	r1,r1,#1
 4818  00004ad4  ac81000c	sw	12(r4),r1
 4819  00004ad8  8fa20000	lw	r2,0(r29)
 4820  00004adc  8fa30004	lw	r3,4(r29)
 4821  00004ae0  8fa40008	lw	r4,8(r29)
 4822  00004ae4  8fa5000c	lw	r5,12(r29)
 4823  00004ae8  8fdffff8	lw	r31,-8(r30)
 4824  00004aec  001ee820	add	r29,r0,r30
 4825  00004af0  8fdefffc	lw	r30,-4(r30)
 4826  00004af4  4be00000	jr	r31
 4827  00004af8  54000000	nop
 4828  00004afc          	.endproc _ProcessFreeResources
 4829  00004afc          	.align 2
 4830  00004afc          	.proc _ProcessSetResult
 4831  00004afc          	.global _ProcessSetResult
 4832  00004afc          	_ProcessSetResult:
 4833                      ;  Function 'ProcessSetResult'; 0 bytes of locals, 0 regs to save.
 4834  00004afc  afbefffc	sw	-4(r29),r30; push fp
 4835  00004b00  001df020	add	r30,r0,r29; fp = sp
 4836  00004b04  afbffff8	sw	-8(r29),r31; push ret addr
 4837  00004b08  2fbd0008	subui	r29,r29,#8; alloc local storage
 4838  00004b0c  8fc10000	lw	r1,(r30)
 4839  00004b10  8c210000	lw	r1,(r1)
 4840  00004b14  8fdf0004	lw	r31,4(r30)
 4841  00004b18  ac3f002c	sw	44(r1),r31
 4842  00004b1c  8fdffff8	lw	r31,-8(r30)
 4843  00004b20  001ee820	add	r29,r0,r30
 4844  00004b24  8fdefffc	lw	r30,-4(r30)
 4845  00004b28  4be00000	jr	r31
 4846  00004b2c  54000000	nop
 4847  00004b30          	.endproc _ProcessSetResult
 4848  00004b30          	.data
 4849  0000f47f          	.align 2
 4850  0000f480          	LC3_LF5:
 4851  0000f480  4e6f7720	.ascii "Now entering ProcessSchedule (cur=0x%x, %d ready)\n\000"
 4851  0000f484  656e7465	
 4851  0000f488  72696e67	
 4851  0000f48c  2050726f	
 4851  0000f490  63657373	
 4851  0000f494  53636865	
 4851  0000f498  64756c65	
 4851  0000f49c  20286375	
 4851  0000f4a0  723d3078	
 4851  0000f4a4  25782c20	
 4851  0000f4a8  25642072	
 4851  0000f4ac  65616479	
 4851  0000f4b0  290a00  	
 4852  0000f4b3          	.align 2
 4853  0000f4b4          	LC4_LF5:
 4854  0000f4b4  4e6f2072	.ascii "No runnable processes - exiting!\n\000"
 4854  0000f4b8  756e6e61	
 4854  0000f4bc  626c6520	
 4854  0000f4c0  70726f63	
 4854  0000f4c4  65737365	
 4854  0000f4c8  73202d20	
 4854  0000f4cc  65786974	
 4854  0000f4d0  696e6721	
 4854  0000f4d4  0a00    	
 4855  0000f4d6          	.align 2
 4856  0000f4d8          	LC5_LF5:
 4857  0000f4d8  41626f75	.ascii "About to switch to PCB 0x%x,flags=0x%x @ 0x%x\n\000"
 4857  0000f4dc  7420746f	
 4857  0000f4e0  20737769	
 4857  0000f4e4  74636820	
 4857  0000f4e8  746f2050	
 4857  0000f4ec  43422030	
 4857  0000f4f0  7825782c	
 4857  0000f4f4  666c6167	
 4857  0000f4f8  733d3078	
 4857  0000f4fc  25782040	
 4857  0000f500  20307825	
 4857  0000f504  780a00  	
 4858  0000f507          	.align 2
 4859  0000f508          	LC6_LF5:
 4860  0000f508  46726565	.ascii "Freeing zombie PCB 0x%x.\n\000"
 4860  0000f50c  696e6720	
 4860  0000f510  7a6f6d62	
 4860  0000f514  69652050	
 4860  0000f518  43422030	
 4860  0000f51c  7825782e	
 4860  0000f520  0a00    	
 4861  0000f522          	.align 2
 4862  0000f524          	LC7_LF5:
 4863  0000f524  4c656176	.ascii "Leaving ProcessSchedule (cur=0x%x)\n\000"
 4863  0000f528  696e6720	
 4863  0000f52c  50726f63	
 4863  0000f530  65737353	
 4863  0000f534  63686564	
 4863  0000f538  756c6520	
 4863  0000f53c  28637572	
 4863  0000f540  3d307825	
 4863  0000f544  78290a00	
 4864  0000f548          	.text
 4865  00004b30          	.align 2
 4866  00004b30          	.proc _ProcessSchedule
 4867  00004b30          	.global _ProcessSchedule
 4868  00004b30          	_ProcessSchedule:
 4869                      ;  Function 'ProcessSchedule'; 0 bytes of locals, 7 regs to save.
 4870  00004b30  afbefffc	sw	-4(r29),r30; push fp
 4871  00004b34  001df020	add	r30,r0,r29; fp = sp
 4872  00004b38  afbffff8	sw	-8(r29),r31; push ret addr
 4873  00004b3c  2fbd0028	subui	r29,r29,#40; alloc local storage
 4874  00004b40  afa20000	sw	0(r29),r2
 4875  00004b44  afa30004	sw	4(r29),r3
 4876  00004b48  afa40008	sw	8(r29),r4
 4877  00004b4c  afa5000c	sw	12(r29),r5
 4878  00004b50  afa60010	sw	16(r29),r6
 4879  00004b54  afa70014	sw	20(r29),r7
 4880  00004b58  afa80018	sw	24(r29),r8
 4881  00004b5c  23bdfff8	addi	r29,r29,#-8
 4882  00004b60  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4883  00004b64  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 4884  00004b68  afa20000	sw	(r29),r2
 4885  00004b6c  20080070	addi	r8,r0,#112
 4886  00004b70  afa80004	sw	4(r29),r8
 4887  00004b74  0ffff2a0	jal	_dindex
 4888  00004b78  54000000	nop; not filled.
 4889  00004b7c  23bd0008	addi	r29,r29,#8
 4890  00004b80  64210000	snei	r1,r1,#0
 4891  00004b84  1420002c	bnez	r1,L92_LF5
 4892  00004b88  54000000	nop; not filled.
 4893  00004b8c  23bdfff8	addi	r29,r29,#-8
 4894  00004b90  afa20000	sw	(r29),r2
 4895  00004b94  2008002b	addi	r8,r0,#43
 4896  00004b98  afa80004	sw	4(r29),r8
 4897  00004b9c  0ffff278	jal	_dindex
 4898  00004ba0  54000000	nop; not filled.
 4899  00004ba4  23bd0008	addi	r29,r29,#8
 4900  00004ba8  64210000	snei	r1,r1,#0
 4901  00004bac  10200040	beqz	r1,L91_LF5
 4902  00004bb0  54000000	nop; not filled.
 4903  00004bb4          	L92_LF5:
 4904  00004bb4  3c010000	lhi	r1,((_runQueue_LF5)>>16)&0xffff
 4905  00004bb8  2421fe24	addui	r1,r1,(_runQueue_LF5)&0xffff
 4906  00004bbc  8c220008	lw	r2,8(r1)
 4907  00004bc0  23bdfff0	addi	r29,r29,#-16
 4908  00004bc4  3c080000	lhi	r8,((LC3_LF5)>>16)&0xffff
 4909  00004bc8  2508f480	addui	r8,r8,(LC3_LF5)&0xffff
 4910  00004bcc  afa80000	sw	(r29),r8
 4911  00004bd0  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 4912  00004bd4  2421fe14	addui	r1,r1,(_currentPCB)&0xffff
 4913  00004bd8  8c210000	lw	r1,(r1)
 4914  00004bdc  afa10004	sw	4(r29),r1
 4915  00004be0  afa20008	sw	8(r29),r2
 4916  00004be4  0c005760	jal	_printf
 4917  00004be8  54000000	nop; not filled.
 4918  00004bec  23bd0010	addi	r29,r29,#16
 4919  00004bf0          	L91_LF5:
 4920  00004bf0  3c050000	lhi	r5,((_runQueue_LF5)>>16)&0xffff
 4921  00004bf4  24a5fe24	addui	r5,r5,(_runQueue_LF5)&0xffff
 4922  00004bf8  8ca10008	lw	r1,8(r5)
 4923  00004bfc  60210000	seqi	r1,r1,#0
 4924  00004c00  10200028	beqz	r1,L94_LF5
 4925  00004c04  54000000	nop; not filled.
 4926  00004c08  23bdfff8	addi	r29,r29,#-8
 4927  00004c0c  3c080000	lhi	r8,((LC4_LF5)>>16)&0xffff
 4928  00004c10  2508f4b4	addui	r8,r8,(LC4_LF5)&0xffff
 4929  00004c14  afa80000	sw	(r29),r8
 4930  00004c18  0c00572c	jal	_printf
 4931  00004c1c  54000000	nop; not filled.
 4932  00004c20  0c00570c	jal	_exitsim
 4933  00004c24  54000000	nop; not filled.
 4934  00004c28  23bd0008	addi	r29,r29,#8
 4935  00004c2c          	L94_LF5:
 4936  00004c2c  8ca10000	lw	r1,(r5)
 4937  00004c30  8c24000c	lw	r4,12(r1)
 4938  00004c34  208300a4	addi	r3,r4,#164
 4939  00004c38  8c8100ac	lw	r1,172(r4)
 4940  00004c3c  8c210008	lw	r1,8(r1)
 4941  00004c40  6c210000	sgti	r1,r1,#0
 4942  00004c44  1020002c	beqz	r1,L99_LF5
 4943  00004c48  54000000	nop; not filled.
 4944  00004c4c  8c8100a8	lw	r1,168(r4)
 4945  00004c50  8c680000	lw	r8,(r3)
 4946  00004c54  ac280000	sw	(r1),r8
 4947  00004c58  8c610000	lw	r1,(r3)
 4948  00004c5c  8c8800a8	lw	r8,168(r4)
 4949  00004c60  ac280004	sw	4(r1),r8
 4950  00004c64  8c8200ac	lw	r2,172(r4)
 4951  00004c68  8c410008	lw	r1,8(r2)
 4952  00004c6c  2021ffff	addi	r1,r1,#-1
 4953  00004c70  ac410008	sw	8(r2),r1
 4954  00004c74          	L99_LF5:
 4955  00004c74  20080000	addi	r8,r0,#0
 4956  00004c78  ac680000	sw	(r3),r8
 4957  00004c7c  8ca10004	lw	r1,4(r5)
 4958  00004c80  ac8500ac	sw	172(r4),r5
 4959  00004c84  ac8100a8	sw	168(r4),r1
 4960  00004c88  8c280000	lw	r8,(r1)
 4961  00004c8c  ac680000	sw	(r3),r8
 4962  00004c90  ac230000	sw	(r1),r3
 4963  00004c94  8c610000	lw	r1,(r3)
 4964  00004c98  ac230004	sw	4(r1),r3
 4965  00004c9c  8ca10008	lw	r1,8(r5)
 4966  00004ca0  20210001	addi	r1,r1,#1
 4967  00004ca4  aca10008	sw	8(r5),r1
 4968  00004ca8  8ca10000	lw	r1,(r5)
 4969  00004cac  8c24000c	lw	r4,12(r1)
 4970  00004cb0  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 4971  00004cb4  2421fe14	addui	r1,r1,(_currentPCB)&0xffff
 4972  00004cb8  ac240000	sw	(r1),r4
 4973  00004cbc  23bdfff8	addi	r29,r29,#-8
 4974  00004cc0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4975  00004cc4  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 4976  00004cc8  afa20000	sw	(r29),r2
 4977  00004ccc  20080070	addi	r8,r0,#112
 4978  00004cd0  afa80004	sw	4(r29),r8
 4979  00004cd4  0ffff140	jal	_dindex
 4980  00004cd8  54000000	nop; not filled.
 4981  00004cdc  23bd0008	addi	r29,r29,#8
 4982  00004ce0  64210000	snei	r1,r1,#0
 4983  00004ce4  1420002c	bnez	r1,L105_LF5
 4984  00004ce8  54000000	nop; not filled.
 4985  00004cec  23bdfff8	addi	r29,r29,#-8
 4986  00004cf0  afa20000	sw	(r29),r2
 4987  00004cf4  2008002b	addi	r8,r0,#43
 4988  00004cf8  afa80004	sw	4(r29),r8
 4989  00004cfc  0ffff118	jal	_dindex
 4990  00004d00  54000000	nop; not filled.
 4991  00004d04  23bd0008	addi	r29,r29,#8
 4992  00004d08  64210000	snei	r1,r1,#0
 4993  00004d0c  10200038	beqz	r1,L104_LF5
 4994  00004d10  54000000	nop; not filled.
 4995  00004d14          	L105_LF5:
 4996  00004d14  23bdfff0	addi	r29,r29,#-16
 4997  00004d18  3c080000	lhi	r8,((LC5_LF5)>>16)&0xffff
 4998  00004d1c  2508f4d8	addui	r8,r8,(LC5_LF5)&0xffff
 4999  00004d20  afa80000	sw	(r29),r8
 5000  00004d24  afa40004	sw	4(r29),r4
 5001  00004d28  8c88000c	lw	r8,12(r4)
 5002  00004d2c  afa80008	sw	8(r29),r8
 5003  00004d30  8c810004	lw	r1,4(r4)
 5004  00004d34  8c210128	lw	r1,296(r1)
 5005  00004d38  afa1000c	sw	12(r29),r1
 5006  00004d3c  0c005608	jal	_printf
 5007  00004d40  54000000	nop; not filled.
 5008  00004d44  23bd0010	addi	r29,r29,#16
 5009  00004d48          	L104_LF5:
 5010  00004d48  3c070000	lhi	r7,((_zombieQueue_LF5)>>16)&0xffff
 5011  00004d4c  24e7fe3c	addui	r7,r7,(_zombieQueue_LF5)&0xffff
 5012  00004d50  3c060000	lhi	r6,((_debugstr)>>16)&0xffff
 5013  00004d54  24c6fd4a	addui	r6,r6,(_debugstr)&0xffff
 5014  00004d58  3c050000	lhi	r5,((_freepcbs_LF5)>>16)&0xffff
 5015  00004d5c  24a5fe18	addui	r5,r5,(_freepcbs_LF5)&0xffff
 5016  00004d60          	L106_LF5:
 5017  00004d60  8ce10008	lw	r1,8(r7)
 5018  00004d64  60210000	seqi	r1,r1,#0
 5019  00004d68  1420016c	bnez	r1,L107_LF5
 5020  00004d6c  54000000	nop; not filled.
 5021  00004d70  8ce10000	lw	r1,(r7)
 5022  00004d74  8c24000c	lw	r4,12(r1)
 5023  00004d78  23bdfff8	addi	r29,r29,#-8
 5024  00004d7c  afa60000	sw	(r29),r6
 5025  00004d80  20080070	addi	r8,r0,#112
 5026  00004d84  afa80004	sw	4(r29),r8
 5027  00004d88  0ffff08c	jal	_dindex
 5028  00004d8c  54000000	nop; not filled.
 5029  00004d90  23bd0008	addi	r29,r29,#8
 5030  00004d94  64210000	snei	r1,r1,#0
 5031  00004d98  1420002c	bnez	r1,L113_LF5
 5032  00004d9c  54000000	nop; not filled.
 5033  00004da0  23bdfff8	addi	r29,r29,#-8
 5034  00004da4  afa60000	sw	(r29),r6
 5035  00004da8  2008002b	addi	r8,r0,#43
 5036  00004dac  afa80004	sw	4(r29),r8
 5037  00004db0  0ffff064	jal	_dindex
 5038  00004db4  54000000	nop; not filled.
 5039  00004db8  23bd0008	addi	r29,r29,#8
 5040  00004dbc  64210000	snei	r1,r1,#0
 5041  00004dc0  10200024	beqz	r1,L112_LF5
 5042  00004dc4  54000000	nop; not filled.
 5043  00004dc8          	L113_LF5:
 5044  00004dc8  23bdfff8	addi	r29,r29,#-8
 5045  00004dcc  3c080000	lhi	r8,((LC6_LF5)>>16)&0xffff
 5046  00004dd0  2508f508	addui	r8,r8,(LC6_LF5)&0xffff
 5047  00004dd4  afa80000	sw	(r29),r8
 5048  00004dd8  afa40004	sw	4(r29),r4
 5049  00004ddc  0c005568	jal	_printf
 5050  00004de0  54000000	nop; not filled.
 5051  00004de4  23bd0008	addi	r29,r29,#8
 5052  00004de8          	L112_LF5:
 5053  00004de8  208300a4	addi	r3,r4,#164
 5054  00004dec  8c8100ac	lw	r1,172(r4)
 5055  00004df0  8c210008	lw	r1,8(r1)
 5056  00004df4  6c210000	sgti	r1,r1,#0
 5057  00004df8  1020002c	beqz	r1,L115_LF5
 5058  00004dfc  54000000	nop; not filled.
 5059  00004e00  8c8100a8	lw	r1,168(r4)
 5060  00004e04  8c680000	lw	r8,(r3)
 5061  00004e08  ac280000	sw	(r1),r8
 5062  00004e0c  8c610000	lw	r1,(r3)
 5063  00004e10  8c8800a8	lw	r8,168(r4)
 5064  00004e14  ac280004	sw	4(r1),r8
 5065  00004e18  8c8200ac	lw	r2,172(r4)
 5066  00004e1c  8c410008	lw	r1,8(r2)
 5067  00004e20  2021ffff	addi	r1,r1,#-1
 5068  00004e24  ac410008	sw	8(r2),r1
 5069  00004e28          	L115_LF5:
 5070  00004e28  20080000	addi	r8,r0,#0
 5071  00004e2c  ac680000	sw	(r3),r8
 5072  00004e30  8ca10004	lw	r1,4(r5)
 5073  00004e34  ac8500ac	sw	172(r4),r5
 5074  00004e38  ac8100a8	sw	168(r4),r1
 5075  00004e3c  8c280000	lw	r8,(r1)
 5076  00004e40  ac680000	sw	(r3),r8
 5077  00004e44  ac230000	sw	(r1),r3
 5078  00004e48  8c610000	lw	r1,(r3)
 5079  00004e4c  ac230004	sw	4(r1),r3
 5080  00004e50  8ca10008	lw	r1,8(r5)
 5081  00004e54  20210001	addi	r1,r1,#1
 5082  00004e58  aca10008	sw	8(r5),r1
 5083  00004e5c  20030000	addi	r3,r0,#0
 5084  00004e60  8c8100a0	lw	r1,160(r4)
 5085  00004e64  0061082a	slt	r1,r3,r1
 5086  00004e68  10200038	beqz	r1,L121_LF5
 5087  00004e6c  54000000	nop; not filled.
 5088  00004e70  00041020	add	r2,r0,r4
 5089  00004e74          	L123_LF5:
 5090  00004e74  23bdfff8	addi	r29,r29,#-8
 5091  00004e78  8c480060	lw	r8,96(r2)
 5092  00004e7c  afa80000	sw	(r29),r8
 5093  00004e80  0fffe83c	jal	_MemoryFreePte
 5094  00004e84  54000000	nop; not filled.
 5095  00004e88  23bd0008	addi	r29,r29,#8
 5096  00004e8c  20420004	addi	r2,r2,#4
 5097  00004e90  20630001	addi	r3,r3,#1
 5098  00004e94  8c8100a0	lw	r1,160(r4)
 5099  00004e98  0061082a	slt	r1,r3,r1
 5100  00004e9c  1420ffd4	bnez	r1,L123_LF5
 5101  00004ea0  54000000	nop; not filled.
 5102  00004ea4          	L121_LF5:
 5103  00004ea4  23bdfff8	addi	r29,r29,#-8
 5104  00004ea8  94810008	lhu	r1,8(r4)
 5105  00004eac  afa10000	sw	(r29),r1
 5106  00004eb0  0fffe340	jal	_MemoryFreePage
 5107  00004eb4  54000000	nop; not filled.
 5108  00004eb8  23bd0008	addi	r29,r29,#8
 5109  00004ebc  8c81000c	lw	r1,12(r4)
 5110  00004ec0  2008ffc0	addi	r8,r0,#-64
 5111  00004ec4  00280824	and	r1,r1,r8
 5112  00004ec8  34210001	ori	r1,r1,#1
 5113  00004ecc  ac81000c	sw	12(r4),r1
 5114  00004ed0  0bfffe8c	j	L106_LF5
 5115  00004ed4  54000000	nop; not filled.
 5116  00004ed8          	L107_LF5:
 5117  00004ed8  23bdfff8	addi	r29,r29,#-8
 5118  00004edc  3c020000	lhi	r2,((_processQuantum_LF5)>>16)&0xffff
 5119  00004ee0  2442f420	addui	r2,r2,(_processQuantum_LF5)&0xffff
 5120  00004ee4  8c480000	lw	r8,(r2)
 5121  00004ee8  afa80000	sw	(r29),r8
 5122  00004eec  0c003c88	jal	_TimerSet
 5123  00004ef0  54000000	nop; not filled.
 5124  00004ef4  3c030000	lhi	r3,((__time)>>16)&0xffff
 5125  00004ef8  2463f424	addui	r3,r3,(__time)&0xffff
 5126  00004efc  8c420000	lw	r2,(r2)
 5127  00004f00  20012710	addi	r1,r0,#10000
 5128  00004f04  00400035	movi2fp	f0,r2
 5129  00004f08  00200835	movi2fp	f1,r1
 5130  00004f0c  0401000f	div	f0,f0,f1
 5131  00004f10  00001034	movfp2i	r2,f0
 5132  00004f14  8c610000	lw	r1,(r3)
 5133  00004f18  00220820	add	r1,r1,r2
 5134  00004f1c  ac610000	sw	(r3),r1
 5135  00004f20  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5136  00004f24  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 5137  00004f28  afa20000	sw	(r29),r2
 5138  00004f2c  20080070	addi	r8,r0,#112
 5139  00004f30  afa80004	sw	4(r29),r8
 5140  00004f34  0fffeee0	jal	_dindex
 5141  00004f38  54000000	nop; not filled.
 5142  00004f3c  23bd0008	addi	r29,r29,#8
 5143  00004f40  64210000	snei	r1,r1,#0
 5144  00004f44  1420002c	bnez	r1,L127_LF5
 5145  00004f48  54000000	nop; not filled.
 5146  00004f4c  23bdfff8	addi	r29,r29,#-8
 5147  00004f50  afa20000	sw	(r29),r2
 5148  00004f54  2008002b	addi	r8,r0,#43
 5149  00004f58  afa80004	sw	4(r29),r8
 5150  00004f5c  0fffeeb8	jal	_dindex
 5151  00004f60  54000000	nop; not filled.
 5152  00004f64  23bd0008	addi	r29,r29,#8
 5153  00004f68  64210000	snei	r1,r1,#0
 5154  00004f6c  10200030	beqz	r1,L126_LF5
 5155  00004f70  54000000	nop; not filled.
 5156  00004f74          	L127_LF5:
 5157  00004f74  23bdfff8	addi	r29,r29,#-8
 5158  00004f78  3c080000	lhi	r8,((LC7_LF5)>>16)&0xffff
 5159  00004f7c  2508f524	addui	r8,r8,(LC7_LF5)&0xffff
 5160  00004f80  afa80000	sw	(r29),r8
 5161  00004f84  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 5162  00004f88  2421fe14	addui	r1,r1,(_currentPCB)&0xffff
 5163  00004f8c  8c210000	lw	r1,(r1)
 5164  00004f90  afa10004	sw	4(r29),r1
 5165  00004f94  0c0053b0	jal	_printf
 5166  00004f98  54000000	nop; not filled.
 5167  00004f9c  23bd0008	addi	r29,r29,#8
 5168  00004fa0          	L126_LF5:
 5169  00004fa0  8fa20000	lw	r2,0(r29)
 5170  00004fa4  8fa30004	lw	r3,4(r29)
 5171  00004fa8  8fa40008	lw	r4,8(r29)
 5172  00004fac  8fa5000c	lw	r5,12(r29)
 5173  00004fb0  8fa60010	lw	r6,16(r29)
 5174  00004fb4  8fa70014	lw	r7,20(r29)
 5175  00004fb8  8fa80018	lw	r8,24(r29)
 5176  00004fbc  8fdffff8	lw	r31,-8(r30)
 5177  00004fc0  001ee820	add	r29,r0,r30
 5178  00004fc4  8fdefffc	lw	r30,-4(r30)
 5179  00004fc8  4be00000	jr	r31
 5180  00004fcc  54000000	nop
 5181  00004fd0          	.endproc _ProcessSchedule
 5182  00004fd0          	.data
 5183  0000f548          	.align 2
 5184  0000f548          	LC8_LF5:
 5185  0000f548  53757370	.ascii "Suspending PCB 0x%x (%s).\n\000"
 5185  0000f54c  656e6469	
 5185  0000f550  6e672050	
 5185  0000f554  43422030	
 5185  0000f558  78257820	
 5185  0000f55c  28257329	
 5185  0000f560  2e0a00  	
 5186  0000f563          	.align 2
 5187  0000f564          	LC9_LF5:
 5188  0000f564  25733a20	.ascii "%s: %s\n\000"
 5188  0000f568  25730a00	
 5189  0000f56c          	.align 2
 5190  0000f56c          	LC10_LF5:
 5191  0000f56c  50726f63	.ascii "ProcessSuspend\000"
 5191  0000f570  65737353	
 5191  0000f574  75737065	
 5191  0000f578  6e6400  	
 5192  0000f57b          	.align 2
 5193  0000f57c          	LC11_LF5:
 5194  0000f57c  54727969	.ascii "Trying to suspend a non-running process!\n\000"
 5194  0000f580  6e672074	
 5194  0000f584  6f207375	
 5194  0000f588  7370656e	
 5194  0000f58c  64206120	
 5194  0000f590  6e6f6e2d	
 5194  0000f594  72756e6e	
 5194  0000f598  696e6720	
 5194  0000f59c  70726f63	
 5194  0000f5a0  65737321	
 5194  0000f5a4  0a00    	
 5195  0000f5a6          	.text
 5196  00004fd0          	.align 2
 5197  00004fd0          	.proc _ProcessSuspend
 5198  00004fd0          	.global _ProcessSuspend
 5199  00004fd0          	_ProcessSuspend:
 5200                      ;  Function 'ProcessSuspend'; 0 bytes of locals, 3 regs to save.
 5201  00004fd0  afbefffc	sw	-4(r29),r30; push fp
 5202  00004fd4  001df020	add	r30,r0,r29; fp = sp
 5203  00004fd8  afbffff8	sw	-8(r29),r31; push ret addr
 5204  00004fdc  2fbd0018	subui	r29,r29,#24; alloc local storage
 5205  00004fe0  afa20000	sw	0(r29),r2
 5206  00004fe4  afa30004	sw	4(r29),r3
 5207  00004fe8  afa40008	sw	8(r29),r4
 5208  00004fec  8fc30000	lw	r3,(r30)
 5209  00004ff0  23bdfff8	addi	r29,r29,#-8
 5210  00004ff4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5211  00004ff8  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 5212  00004ffc  afa20000	sw	(r29),r2
 5213  00005000  20040070	addi	r4,r0,#112
 5214  00005004  afa40004	sw	4(r29),r4
 5215  00005008  0fffee0c	jal	_dindex
 5216  0000500c  54000000	nop; not filled.
 5217  00005010  23bd0008	addi	r29,r29,#8
 5218  00005014  64210000	snei	r1,r1,#0
 5219  00005018  1420002c	bnez	r1,L130_LF5
 5220  0000501c  54000000	nop; not filled.
 5221  00005020  23bdfff8	addi	r29,r29,#-8
 5222  00005024  afa20000	sw	(r29),r2
 5223  00005028  2004002b	addi	r4,r0,#43
 5224  0000502c  afa40004	sw	4(r29),r4
 5225  00005030  0fffede4	jal	_dindex
 5226  00005034  54000000	nop; not filled.
 5227  00005038  23bd0008	addi	r29,r29,#8
 5228  0000503c  64210000	snei	r1,r1,#0
 5229  00005040  1020002c	beqz	r1,L129_LF5
 5230  00005044  54000000	nop; not filled.
 5231  00005048          	L130_LF5:
 5232  00005048  23bdfff0	addi	r29,r29,#-16
 5233  0000504c  3c040000	lhi	r4,((LC8_LF5)>>16)&0xffff
 5234  00005050  2484f548	addui	r4,r4,(LC8_LF5)&0xffff
 5235  00005054  afa40000	sw	(r29),r4
 5236  00005058  afa30004	sw	4(r29),r3
 5237  0000505c  20610010	addi	r1,r3,#16
 5238  00005060  afa10008	sw	8(r29),r1
 5239  00005064  0c0052e0	jal	_printf
 5240  00005068  54000000	nop; not filled.
 5241  0000506c  23bd0010	addi	r29,r29,#16
 5242  00005070          	L129_LF5:
 5243  00005070  8064000f	lb	r4,15(r3)
 5244  00005074  58810001	srli	r1,r4,#0x1
 5245  00005078  30210001	andi	r1,r1,#1
 5246  0000507c  14200038	bnez	r1,L132_LF5
 5247  00005080  54000000	nop; not filled.
 5248  00005084  23bdfff0	addi	r29,r29,#-16
 5249  00005088  3c040000	lhi	r4,((LC9_LF5)>>16)&0xffff
 5250  0000508c  2484f564	addui	r4,r4,(LC9_LF5)&0xffff
 5251  00005090  afa40000	sw	(r29),r4
 5252  00005094  3c010000	lhi	r1,((LC10_LF5)>>16)&0xffff
 5253  00005098  2421f56c	addui	r1,r1,(LC10_LF5)&0xffff
 5254  0000509c  afa10004	sw	4(r29),r1
 5255  000050a0  3c040000	lhi	r4,((LC11_LF5)>>16)&0xffff
 5256  000050a4  2484f57c	addui	r4,r4,(LC11_LF5)&0xffff
 5257  000050a8  afa40008	sw	8(r29),r4
 5258  000050ac  0c005298	jal	_printf
 5259  000050b0  54000000	nop; not filled.
 5260  000050b4  23bd0010	addi	r29,r29,#16
 5261  000050b8          	L132_LF5:
 5262  000050b8  8c61000c	lw	r1,12(r3)
 5263  000050bc  2004ffc0	addi	r4,r0,#-64
 5264  000050c0  00240824	and	r1,r1,r4
 5265  000050c4  34210004	ori	r1,r1,#4
 5266  000050c8  ac61000c	sw	12(r3),r1
 5267  000050cc  207f00a4	addi	r31,r3,#164
 5268  000050d0  8c6100ac	lw	r1,172(r3)
 5269  000050d4  8c210008	lw	r1,8(r1)
 5270  000050d8  6c210000	sgti	r1,r1,#0
 5271  000050dc  1020002c	beqz	r1,L135_LF5
 5272  000050e0  54000000	nop; not filled.
 5273  000050e4  8c6100a8	lw	r1,168(r3)
 5274  000050e8  8fe40000	lw	r4,(r31)
 5275  000050ec  ac240000	sw	(r1),r4
 5276  000050f0  8fe10000	lw	r1,(r31)
 5277  000050f4  8c6400a8	lw	r4,168(r3)
 5278  000050f8  ac240004	sw	4(r1),r4
 5279  000050fc  8c6200ac	lw	r2,172(r3)
 5280  00005100  8c410008	lw	r1,8(r2)
 5281  00005104  2021ffff	addi	r1,r1,#-1
 5282  00005108  ac410008	sw	8(r2),r1
 5283  0000510c          	L135_LF5:
 5284  0000510c  20040000	addi	r4,r0,#0
 5285  00005110  afe40000	sw	(r31),r4
 5286  00005114  3c020000	lhi	r2,((_waitQueue_LF5)>>16)&0xffff
 5287  00005118  2442fe30	addui	r2,r2,(_waitQueue_LF5)&0xffff
 5288  0000511c  8c410004	lw	r1,4(r2)
 5289  00005120  ac6200ac	sw	172(r3),r2
 5290  00005124  ac6100a8	sw	168(r3),r1
 5291  00005128  8c240000	lw	r4,(r1)
 5292  0000512c  afe40000	sw	(r31),r4
 5293  00005130  ac3f0000	sw	(r1),r31
 5294  00005134  8fe10000	lw	r1,(r31)
 5295  00005138  ac3f0004	sw	4(r1),r31
 5296  0000513c  8c410008	lw	r1,8(r2)
 5297  00005140  20210001	addi	r1,r1,#1
 5298  00005144  ac410008	sw	8(r2),r1
 5299  00005148  8fa20000	lw	r2,0(r29)
 5300  0000514c  8fa30004	lw	r3,4(r29)
 5301  00005150  8fa40008	lw	r4,8(r29)
 5302  00005154  8fdffff8	lw	r31,-8(r30)
 5303  00005158  001ee820	add	r29,r0,r30
 5304  0000515c  8fdefffc	lw	r30,-4(r30)
 5305  00005160  4be00000	jr	r31
 5306  00005164  54000000	nop
 5307  00005168          	.endproc _ProcessSuspend
 5308  00005168          	.data
 5309  0000f5a6          	.align 2
 5310  0000f5a8          	LC12_LF5:
 5311  0000f5a8  57616b69	.ascii "Waking up PCB 0x%x.\n\000"
 5311  0000f5ac  6e672075	
 5311  0000f5b0  70205043	
 5311  0000f5b4  42203078	
 5311  0000f5b8  25782e0a	
 5311  0000f5bc  00      	
 5312  0000f5bd          	.align 2
 5313  0000f5c0          	LC13_LF5:
 5314  0000f5c0  50726f63	.ascii "ProcessWakeup\000"
 5314  0000f5c4  65737357	
 5314  0000f5c8  616b6575	
 5314  0000f5cc  7000    	
 5315  0000f5ce          	.align 2
 5316  0000f5d0          	LC14_LF5:
 5317  0000f5d0  54727969	.ascii "Trying to wake up a non-sleeping process!\n\000"
 5317  0000f5d4  6e672074	
 5317  0000f5d8  6f207761	
 5317  0000f5dc  6b652075	
 5317  0000f5e0  70206120	
 5317  0000f5e4  6e6f6e2d	
 5317  0000f5e8  736c6565	
 5317  0000f5ec  70696e67	
 5317  0000f5f0  2070726f	
 5317  0000f5f4  63657373	
 5317  0000f5f8  210a00  	
 5318  0000f5fb          	.text
 5319  00005168          	.align 2
 5320  00005168          	.proc _ProcessWakeup
 5321  00005168          	.global _ProcessWakeup
 5322  00005168          	_ProcessWakeup:
 5323                      ;  Function 'ProcessWakeup'; 0 bytes of locals, 3 regs to save.
 5324  00005168  afbefffc	sw	-4(r29),r30; push fp
 5325  0000516c  001df020	add	r30,r0,r29; fp = sp
 5326  00005170  afbffff8	sw	-8(r29),r31; push ret addr
 5327  00005174  2fbd0018	subui	r29,r29,#24; alloc local storage
 5328  00005178  afa20000	sw	0(r29),r2
 5329  0000517c  afa30004	sw	4(r29),r3
 5330  00005180  afa40008	sw	8(r29),r4
 5331  00005184  8fc30000	lw	r3,(r30)
 5332  00005188  23bdfff8	addi	r29,r29,#-8
 5333  0000518c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5334  00005190  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 5335  00005194  afa20000	sw	(r29),r2
 5336  00005198  20040070	addi	r4,r0,#112
 5337  0000519c  afa40004	sw	4(r29),r4
 5338  000051a0  0fffec74	jal	_dindex
 5339  000051a4  54000000	nop; not filled.
 5340  000051a8  23bd0008	addi	r29,r29,#8
 5341  000051ac  64210000	snei	r1,r1,#0
 5342  000051b0  1420002c	bnez	r1,L141_LF5
 5343  000051b4  54000000	nop; not filled.
 5344  000051b8  23bdfff8	addi	r29,r29,#-8
 5345  000051bc  afa20000	sw	(r29),r2
 5346  000051c0  2004002b	addi	r4,r0,#43
 5347  000051c4  afa40004	sw	4(r29),r4
 5348  000051c8  0fffec4c	jal	_dindex
 5349  000051cc  54000000	nop; not filled.
 5350  000051d0  23bd0008	addi	r29,r29,#8
 5351  000051d4  64210000	snei	r1,r1,#0
 5352  000051d8  10200024	beqz	r1,L140_LF5
 5353  000051dc  54000000	nop; not filled.
 5354  000051e0          	L141_LF5:
 5355  000051e0  23bdfff8	addi	r29,r29,#-8
 5356  000051e4  3c040000	lhi	r4,((LC12_LF5)>>16)&0xffff
 5357  000051e8  2484f5a8	addui	r4,r4,(LC12_LF5)&0xffff
 5358  000051ec  afa40000	sw	(r29),r4
 5359  000051f0  afa30004	sw	4(r29),r3
 5360  000051f4  0c005150	jal	_printf
 5361  000051f8  54000000	nop; not filled.
 5362  000051fc  23bd0008	addi	r29,r29,#8
 5363  00005200          	L140_LF5:
 5364  00005200  8064000f	lb	r4,15(r3)
 5365  00005204  58810002	srli	r1,r4,#0x2
 5366  00005208  30210001	andi	r1,r1,#1
 5367  0000520c  14200038	bnez	r1,L143_LF5
 5368  00005210  54000000	nop; not filled.
 5369  00005214  23bdfff0	addi	r29,r29,#-16
 5370  00005218  3c040000	lhi	r4,((LC9_LF5)>>16)&0xffff
 5371  0000521c  2484f564	addui	r4,r4,(LC9_LF5)&0xffff
 5372  00005220  afa40000	sw	(r29),r4
 5373  00005224  3c010000	lhi	r1,((LC13_LF5)>>16)&0xffff
 5374  00005228  2421f5c0	addui	r1,r1,(LC13_LF5)&0xffff
 5375  0000522c  afa10004	sw	4(r29),r1
 5376  00005230  3c040000	lhi	r4,((LC14_LF5)>>16)&0xffff
 5377  00005234  2484f5d0	addui	r4,r4,(LC14_LF5)&0xffff
 5378  00005238  afa40008	sw	8(r29),r4
 5379  0000523c  0c005108	jal	_printf
 5380  00005240  54000000	nop; not filled.
 5381  00005244  23bd0010	addi	r29,r29,#16
 5382  00005248          	L143_LF5:
 5383  00005248  8c61000c	lw	r1,12(r3)
 5384  0000524c  2004ffc0	addi	r4,r0,#-64
 5385  00005250  00240824	and	r1,r1,r4
 5386  00005254  34210002	ori	r1,r1,#2
 5387  00005258  ac61000c	sw	12(r3),r1
 5388  0000525c  207f00a4	addi	r31,r3,#164
 5389  00005260  8c6100ac	lw	r1,172(r3)
 5390  00005264  8c210008	lw	r1,8(r1)
 5391  00005268  6c210000	sgti	r1,r1,#0
 5392  0000526c  1020002c	beqz	r1,L146_LF5
 5393  00005270  54000000	nop; not filled.
 5394  00005274  8c6100a8	lw	r1,168(r3)
 5395  00005278  8fe40000	lw	r4,(r31)
 5396  0000527c  ac240000	sw	(r1),r4
 5397  00005280  8fe10000	lw	r1,(r31)
 5398  00005284  8c6400a8	lw	r4,168(r3)
 5399  00005288  ac240004	sw	4(r1),r4
 5400  0000528c  8c6200ac	lw	r2,172(r3)
 5401  00005290  8c410008	lw	r1,8(r2)
 5402  00005294  2021ffff	addi	r1,r1,#-1
 5403  00005298  ac410008	sw	8(r2),r1
 5404  0000529c          	L146_LF5:
 5405  0000529c  20040000	addi	r4,r0,#0
 5406  000052a0  afe40000	sw	(r31),r4
 5407  000052a4  3c020000	lhi	r2,((_runQueue_LF5)>>16)&0xffff
 5408  000052a8  2442fe24	addui	r2,r2,(_runQueue_LF5)&0xffff
 5409  000052ac  8c410004	lw	r1,4(r2)
 5410  000052b0  ac6200ac	sw	172(r3),r2
 5411  000052b4  ac6100a8	sw	168(r3),r1
 5412  000052b8  8c240000	lw	r4,(r1)
 5413  000052bc  afe40000	sw	(r31),r4
 5414  000052c0  ac3f0000	sw	(r1),r31
 5415  000052c4  8fe10000	lw	r1,(r31)
 5416  000052c8  ac3f0004	sw	4(r1),r31
 5417  000052cc  8c410008	lw	r1,8(r2)
 5418  000052d0  20210001	addi	r1,r1,#1
 5419  000052d4  ac410008	sw	8(r2),r1
 5420  000052d8  8fa20000	lw	r2,0(r29)
 5421  000052dc  8fa30004	lw	r3,4(r29)
 5422  000052e0  8fa40008	lw	r4,8(r29)
 5423  000052e4  8fdffff8	lw	r31,-8(r30)
 5424  000052e8  001ee820	add	r29,r0,r30
 5425  000052ec  8fdefffc	lw	r30,-4(r30)
 5426  000052f0  4be00000	jr	r31
 5427  000052f4  54000000	nop
 5428  000052f8          	.endproc _ProcessWakeup
 5429  000052f8          	.data
 5430  0000f5fb          	.align 2
 5431  0000f5fc          	LC15_LF5:
 5432  0000f5fc  456e7465	.ascii "Entering ProcessDestroy for 0x%x.\n\000"
 5432  0000f600  72696e67	
 5432  0000f604  2050726f	
 5432  0000f608  63657373	
 5432  0000f60c  44657374	
 5432  0000f610  726f7920	
 5432  0000f614  666f7220	
 5432  0000f618  30782578	
 5432  0000f61c  2e0a00  	
 5433  0000f61f          	.align 2
 5434  0000f620          	LC16_LF5:
 5435  0000f620  4c656176	.ascii "Leaving ProcessDestroy for 0x%x.\n\000"
 5435  0000f624  696e6720	
 5435  0000f628  50726f63	
 5435  0000f62c  65737344	
 5435  0000f630  65737472	
 5435  0000f634  6f792066	
 5435  0000f638  6f722030	
 5435  0000f63c  7825782e	
 5435  0000f640  0a00    	
 5436  0000f642          	.text
 5437  000052f8          	.align 2
 5438  000052f8          	.proc _ProcessDestroy
 5439  000052f8          	.global _ProcessDestroy
 5440  000052f8          	_ProcessDestroy:
 5441                      ;  Function 'ProcessDestroy'; 0 bytes of locals, 3 regs to save.
 5442  000052f8  afbefffc	sw	-4(r29),r30; push fp
 5443  000052fc  001df020	add	r30,r0,r29; fp = sp
 5444  00005300  afbffff8	sw	-8(r29),r31; push ret addr
 5445  00005304  2fbd0018	subui	r29,r29,#24; alloc local storage
 5446  00005308  afa20000	sw	0(r29),r2
 5447  0000530c  afa30004	sw	4(r29),r3
 5448  00005310  afa40008	sw	8(r29),r4
 5449  00005314  8fc30000	lw	r3,(r30)
 5450  00005318  23bdfff8	addi	r29,r29,#-8
 5451  0000531c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5452  00005320  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 5453  00005324  afa20000	sw	(r29),r2
 5454  00005328  20040070	addi	r4,r0,#112
 5455  0000532c  afa40004	sw	4(r29),r4
 5456  00005330  0fffeae4	jal	_dindex
 5457  00005334  54000000	nop; not filled.
 5458  00005338  23bd0008	addi	r29,r29,#8
 5459  0000533c  64210000	snei	r1,r1,#0
 5460  00005340  1420002c	bnez	r1,L152_LF5
 5461  00005344  54000000	nop; not filled.
 5462  00005348  23bdfff8	addi	r29,r29,#-8
 5463  0000534c  afa20000	sw	(r29),r2
 5464  00005350  2004002b	addi	r4,r0,#43
 5465  00005354  afa40004	sw	4(r29),r4
 5466  00005358  0fffeabc	jal	_dindex
 5467  0000535c  54000000	nop; not filled.
 5468  00005360  23bd0008	addi	r29,r29,#8
 5469  00005364  64210000	snei	r1,r1,#0
 5470  00005368  10200024	beqz	r1,L151_LF5
 5471  0000536c  54000000	nop; not filled.
 5472  00005370          	L152_LF5:
 5473  00005370  23bdfff8	addi	r29,r29,#-8
 5474  00005374  3c040000	lhi	r4,((LC15_LF5)>>16)&0xffff
 5475  00005378  2484f5fc	addui	r4,r4,(LC15_LF5)&0xffff
 5476  0000537c  afa40000	sw	(r29),r4
 5477  00005380  afa30004	sw	4(r29),r3
 5478  00005384  0c004fc0	jal	_printf
 5479  00005388  54000000	nop; not filled.
 5480  0000538c  23bd0008	addi	r29,r29,#8
 5481  00005390          	L151_LF5:
 5482  00005390  8c61000c	lw	r1,12(r3)
 5483  00005394  2004ffc0	addi	r4,r0,#-64
 5484  00005398  00240824	and	r1,r1,r4
 5485  0000539c  34210010	ori	r1,r1,#16
 5486  000053a0  ac61000c	sw	12(r3),r1
 5487  000053a4  207f00a4	addi	r31,r3,#164
 5488  000053a8  8c6100ac	lw	r1,172(r3)
 5489  000053ac  8c210008	lw	r1,8(r1)
 5490  000053b0  6c210000	sgti	r1,r1,#0
 5491  000053b4  1020002c	beqz	r1,L155_LF5
 5492  000053b8  54000000	nop; not filled.
 5493  000053bc  8c6100a8	lw	r1,168(r3)
 5494  000053c0  8fe40000	lw	r4,(r31)
 5495  000053c4  ac240000	sw	(r1),r4
 5496  000053c8  8fe10000	lw	r1,(r31)
 5497  000053cc  8c6400a8	lw	r4,168(r3)
 5498  000053d0  ac240004	sw	4(r1),r4
 5499  000053d4  8c6200ac	lw	r2,172(r3)
 5500  000053d8  8c410008	lw	r1,8(r2)
 5501  000053dc  2021ffff	addi	r1,r1,#-1
 5502  000053e0  ac410008	sw	8(r2),r1
 5503  000053e4          	L155_LF5:
 5504  000053e4  20040000	addi	r4,r0,#0
 5505  000053e8  afe40000	sw	(r31),r4
 5506  000053ec  3c020000	lhi	r2,((_zombieQueue_LF5)>>16)&0xffff
 5507  000053f0  2442fe3c	addui	r2,r2,(_zombieQueue_LF5)&0xffff
 5508  000053f4  ac6200ac	sw	172(r3),r2
 5509  000053f8  ac6200a8	sw	168(r3),r2
 5510  000053fc  8c440000	lw	r4,(r2)
 5511  00005400  afe40000	sw	(r31),r4
 5512  00005404  ac5f0000	sw	(r2),r31
 5513  00005408  8fe10000	lw	r1,(r31)
 5514  0000540c  ac3f0004	sw	4(r1),r31
 5515  00005410  8c410008	lw	r1,8(r2)
 5516  00005414  20210001	addi	r1,r1,#1
 5517  00005418  ac410008	sw	8(r2),r1
 5518  0000541c  23bdfff8	addi	r29,r29,#-8
 5519  00005420  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5520  00005424  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 5521  00005428  afa20000	sw	(r29),r2
 5522  0000542c  20040070	addi	r4,r0,#112
 5523  00005430  afa40004	sw	4(r29),r4
 5524  00005434  0fffe9e0	jal	_dindex
 5525  00005438  54000000	nop; not filled.
 5526  0000543c  23bd0008	addi	r29,r29,#8
 5527  00005440  64210000	snei	r1,r1,#0
 5528  00005444  1420002c	bnez	r1,L159_LF5
 5529  00005448  54000000	nop; not filled.
 5530  0000544c  23bdfff8	addi	r29,r29,#-8
 5531  00005450  afa20000	sw	(r29),r2
 5532  00005454  2004002b	addi	r4,r0,#43
 5533  00005458  afa40004	sw	4(r29),r4
 5534  0000545c  0fffe9b8	jal	_dindex
 5535  00005460  54000000	nop; not filled.
 5536  00005464  23bd0008	addi	r29,r29,#8
 5537  00005468  64210000	snei	r1,r1,#0
 5538  0000546c  10200024	beqz	r1,L158_LF5
 5539  00005470  54000000	nop; not filled.
 5540  00005474          	L159_LF5:
 5541  00005474  23bdfff8	addi	r29,r29,#-8
 5542  00005478  3c040000	lhi	r4,((LC16_LF5)>>16)&0xffff
 5543  0000547c  2484f620	addui	r4,r4,(LC16_LF5)&0xffff
 5544  00005480  afa40000	sw	(r29),r4
 5545  00005484  afa30004	sw	4(r29),r3
 5546  00005488  0c004ebc	jal	_printf
 5547  0000548c  54000000	nop; not filled.
 5548  00005490  23bd0008	addi	r29,r29,#8
 5549  00005494          	L158_LF5:
 5550  00005494  8fa20000	lw	r2,0(r29)
 5551  00005498  8fa30004	lw	r3,4(r29)
 5552  0000549c  8fa40008	lw	r4,8(r29)
 5553  000054a0  8fdffff8	lw	r31,-8(r30)
 5554  000054a4  001ee820	add	r29,r0,r30
 5555  000054a8  8fdefffc	lw	r30,-4(r30)
 5556  000054ac  4be00000	jr	r31
 5557  000054b0  54000000	nop
 5558  000054b4          	.endproc _ProcessDestroy
 5559  000054b4          	.data
 5560  0000f642          	.align 2
 5561  0000f644          	LC17_LF5:
 5562  0000f644  4f6c6420	.ascii "Old interrupt value was 0x%x.\n\000"
 5562  0000f648  696e7465	
 5562  0000f64c  72727570	
 5562  0000f650  74207661	
 5562  0000f654  6c756520	
 5562  0000f658  77617320	
 5562  0000f65c  30782578	
 5562  0000f660  2e0a00  	
 5563  0000f663          	.align 2
 5564  0000f664          	LC18_LF5:
 5565  0000f664  456e7465	.ascii "Entering ProcessFork args=0x%x 0x%x %s %d\n\000"
 5565  0000f668  72696e67	
 5565  0000f66c  2050726f	
 5565  0000f670  63657373	
 5565  0000f674  466f726b	
 5565  0000f678  20617267	
 5565  0000f67c  733d3078	
 5565  0000f680  25782030	
 5565  0000f684  78257820	
 5565  0000f688  25732025	
 5565  0000f68c  640a00  	
 5566  0000f68f          	.align 2
 5567  0000f690          	LC19_LF5:
 5568  0000f690  46415441	.ascii "FATAL error: no free processes!\n\000"
 5568  0000f694  4c206572	
 5568  0000f698  726f723a	
 5568  0000f69c  206e6f20	
 5568  0000f6a0  66726565	
 5568  0000f6a4  2070726f	
 5568  0000f6a8  63657373	
 5568  0000f6ac  6573210a	
 5568  0000f6b0  00      	
 5569  0000f6b1          	.align 2
 5570  0000f6b4          	LC20_LF5:
 5571  0000f6b4  476f7420	.ascii "Got a link @ 0x%x\n\000"
 5571  0000f6b8  61206c69	
 5571  0000f6bc  6e6b2040	
 5571  0000f6c0  20307825	
 5571  0000f6c4  780a00  	
 5572  0000f6c7          	.align 2
 5573  0000f6c8          	LC21_LF5:
 5574  0000f6c8  4265666f	.ascii "Before restore interrupt value is 0x%x.\n\000"
 5574  0000f6cc  72652072	
 5574  0000f6d0  6573746f	
 5574  0000f6d4  72652069	
 5574  0000f6d8  6e746572	
 5574  0000f6dc  72757074	
 5574  0000f6e0  2076616c	
 5574  0000f6e4  75652069	
 5574  0000f6e8  73203078	
 5574  0000f6ec  25782e0a	
 5574  0000f6f0  00      	
 5575  0000f6f1          	.align 2
 5576  0000f6f4          	LC22_LF5:
 5577  0000f6f4  4e657720	.ascii "New interrupt value is 0x%x.\n\000"
 5577  0000f6f8  696e7465	
 5577  0000f6fc  72727570	
 5577  0000f700  74207661	
 5577  0000f704  6c756520	
 5577  0000f708  69732030	
 5577  0000f70c  7825782e	
 5577  0000f710  0a00    	
 5578  0000f712          	.align 2
 5579  0000f714          	LC23_LF5:
 5580  0000f714  46415441	.ascii "FATAL: couldn\'t allocate memory - no free pages!\n\000"
 5580  0000f718  4c3a2063	
 5580  0000f71c  6f756c64	
 5580  0000f720  6e277420	
 5580  0000f724  616c6c6f	
 5580  0000f728  63617465	
 5580  0000f72c  206d656d	
 5580  0000f730  6f727920	
 5580  0000f734  2d206e6f	
 5580  0000f738  20667265	
 5580  0000f73c  65207061	
 5580  0000f740  67657321	
 5580  0000f744  0a00    	
 5581  0000f746          	.align 2
 5582  0000f748          	LC24_LF5:
 5583  0000f748  46415441	.ascii "FATAL: couldn\'t allocate system stack - no free pages!\n\000"
 5583  0000f74c  4c3a2063	
 5583  0000f750  6f756c64	
 5583  0000f754  6e277420	
 5583  0000f758  616c6c6f	
 5583  0000f75c  63617465	
 5583  0000f760  20737973	
 5583  0000f764  74656d20	
 5583  0000f768  73746163	
 5583  0000f76c  6b202d20	
 5583  0000f770  6e6f2066	
 5583  0000f774  72656520	
 5583  0000f778  70616765	
 5583  0000f77c  73210a00	
 5584  0000f780          	.align 2
 5585  0000f780          	LC25_LF5:
 5586  0000f780  53657474	.ascii "Setting up PCB @ 0x%x (sys stack=0x%x, mem=0x%x, size=0x%x)\n\000"
 5586  0000f784  696e6720	
 5586  0000f788  75702050	
 5586  0000f78c  43422040	
 5586  0000f790  20307825	
 5586  0000f794  78202873	
 5586  0000f798  79732073	
 5586  0000f79c  7461636b	
 5586  0000f7a0  3d307825	
 5586  0000f7a4  782c206d	
 5586  0000f7a8  656d3d30	
 5586  0000f7ac  7825782c	
 5586  0000f7b0  2073697a	
 5586  0000f7b4  653d3078	
 5586  0000f7b8  2578290a	
 5586  0000f7bc  00      	
 5587  0000f7bd          	.align 2
 5588  0000f7c0          	LC26_LF5:
 5589  0000f7c0  41626f75	.ascii "About to load %s\n\000"
 5589  0000f7c4  7420746f	
 5589  0000f7c8  206c6f61	
 5589  0000f7cc  64202573	
 5589  0000f7d0  0a00    	
 5590  0000f7d2          	.align 2
 5591  0000f7d4          	LC27_LF5:
 5592  0000f7d4  46696c65	.ascii "File %s -> start=0x%08x\n\000"
 5592  0000f7d8  20257320	
 5592  0000f7dc  2d3e2073	
 5592  0000f7e0  74617274	
 5592  0000f7e4  3d307825	
 5592  0000f7e8  3038780a	
 5592  0000f7ec  00      	
 5593  0000f7ed          	.align 2
 5594  0000f7f0          	LC28_LF5:
 5595  0000f7f0  46696c65	.ascii "File %s -> code @ 0x%08x (size=0x%08x)\n\000"
 5595  0000f7f4  20257320	
 5595  0000f7f8  2d3e2063	
 5595  0000f7fc  6f646520	
 5595  0000f800  40203078	
 5595  0000f804  25303878	
 5595  0000f808  20287369	
 5595  0000f80c  7a653d30	
 5595  0000f810  78253038	
 5595  0000f814  78290a00	
 5596  0000f818          	.align 2
 5597  0000f818          	LC29_LF5:
 5598  0000f818  46696c65	.ascii "File %s -> data @ 0x%08x (size=0x%08x)\n\000"
 5598  0000f81c  20257320	
 5598  0000f820  2d3e2064	
 5598  0000f824  61746120	
 5598  0000f828  40203078	
 5598  0000f82c  25303878	
 5598  0000f830  20287369	
 5598  0000f834  7a653d30	
 5598  0000f838  78253038	
 5598  0000f83c  78290a00	
 5599  0000f840          	.align 2
 5600  0000f840          	LC30_LF5:
 5601  0000f840  506c6163	.ascii "Placing %d bytes at vaddr %08x.\n\000"
 5601  0000f844  696e6720	
 5601  0000f848  25642062	
 5601  0000f84c  79746573	
 5601  0000f850  20617420	
 5601  0000f854  76616464	
 5601  0000f858  72202530	
 5601  0000f85c  38782e0a	
 5601  0000f860  00      	
 5602  0000f861          	.align 2
 5603  0000f864          	LC31_LF5:
 5604  0000f864  53657474	.ascii "Setting currentPCB=0x%x, stackframe=0x%x\n\000"
 5604  0000f868  696e6720	
 5604  0000f86c  63757272	
 5604  0000f870  656e7450	
 5604  0000f874  43423d30	
 5604  0000f878  7825782c	
 5604  0000f87c  20737461	
 5604  0000f880  636b6672	
 5604  0000f884  616d653d	
 5604  0000f888  30782578	
 5604  0000f88c  0a00    	
 5605  0000f88e          	.align 2
 5606  0000f890          	LC32_LF5:
 5607  0000f890  4c656176	.ascii "Leaving ProcessFork (%s)\n\000"
 5607  0000f894  696e6720	
 5607  0000f898  50726f63	
 5607  0000f89c  65737346	
 5607  0000f8a0  6f726b20	
 5607  0000f8a4  28257329	
 5607  0000f8a8  0a00    	
 5608  0000f8aa          	.text
 5609  000054b4          	.align 2
 5610  000054b4          	.proc _ProcessFork
 5611  000054b4          	.global _ProcessFork
 5612  000054b4          	_ProcessFork:
 5613                      ;  Function 'ProcessFork'; 128 bytes of locals, 10 regs to save.
 5614  000054b4  afbefffc	sw	-4(r29),r30; push fp
 5615  000054b8  001df020	add	r30,r0,r29; fp = sp
 5616  000054bc  afbffff8	sw	-8(r29),r31; push ret addr
 5617  000054c0  2fbd00b0	subui	r29,r29,#176; alloc local storage
 5618  000054c4  afa20000	sw	0(r29),r2
 5619  000054c8  afa30004	sw	4(r29),r3
 5620  000054cc  afa40008	sw	8(r29),r4
 5621  000054d0  afa5000c	sw	12(r29),r5
 5622  000054d4  afa60010	sw	16(r29),r6
 5623  000054d8  afa70014	sw	20(r29),r7
 5624  000054dc  afa80018	sw	24(r29),r8
 5625  000054e0  afa9001c	sw	28(r29),r9
 5626  000054e4  afaa0020	sw	32(r29),r10
 5627  000054e8  afab0024	sw	36(r29),r11
 5628  000054ec  8fc80000	lw	r8,(r30)
 5629  000054f0  8fca0008	lw	r10,8(r30)
 5630  000054f4  8fc7000c	lw	r7,12(r30)
 5631  000054f8  200b0000	addi	r11,r0,#0
 5632  000054fc  afcbff78	sw	-136(r30),r11
 5633  00005500  23bdfff8	addi	r29,r29,#-8
 5634  00005504  200b000f	addi	r11,r0,#15
 5635  00005508  afab0000	sw	(r29),r11
 5636  0000550c  0fffbd78	jal	_SetIntrs
 5637  00005510  54000000	nop; not filled.
 5638  00005514  00011820	add	r3,r0,r1
 5639  00005518  23bd0008	addi	r29,r29,#8
 5640  0000551c  23bdfff8	addi	r29,r29,#-8
 5641  00005520  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5642  00005524  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 5643  00005528  afa20000	sw	(r29),r2
 5644  0000552c  200b0049	addi	r11,r0,#73
 5645  00005530  afab0004	sw	4(r29),r11
 5646  00005534  0fffe8e0	jal	_dindex
 5647  00005538  54000000	nop; not filled.
 5648  0000553c  23bd0008	addi	r29,r29,#8
 5649  00005540  64210000	snei	r1,r1,#0
 5650  00005544  1420002c	bnez	r1,L164_LF5
 5651  00005548  54000000	nop; not filled.
 5652  0000554c  23bdfff8	addi	r29,r29,#-8
 5653  00005550  afa20000	sw	(r29),r2
 5654  00005554  200b002b	addi	r11,r0,#43
 5655  00005558  afab0004	sw	4(r29),r11
 5656  0000555c  0fffe8b8	jal	_dindex
 5657  00005560  54000000	nop; not filled.
 5658  00005564  23bd0008	addi	r29,r29,#8
 5659  00005568  64210000	snei	r1,r1,#0
 5660  0000556c  10200024	beqz	r1,L163_LF5
 5661  00005570  54000000	nop; not filled.
 5662  00005574          	L164_LF5:
 5663  00005574  23bdfff8	addi	r29,r29,#-8
 5664  00005578  3c0b0000	lhi	r11,((LC17_LF5)>>16)&0xffff
 5665  0000557c  256bf644	addui	r11,r11,(LC17_LF5)&0xffff
 5666  00005580  afab0000	sw	(r29),r11
 5667  00005584  afa30004	sw	4(r29),r3
 5668  00005588  0c004dbc	jal	_printf
 5669  0000558c  54000000	nop; not filled.
 5670  00005590  23bd0008	addi	r29,r29,#8
 5671  00005594          	L163_LF5:
 5672  00005594  23bdfff8	addi	r29,r29,#-8
 5673  00005598  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5674  0000559c  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 5675  000055a0  afa20000	sw	(r29),r2
 5676  000055a4  200b0070	addi	r11,r0,#112
 5677  000055a8  afab0004	sw	4(r29),r11
 5678  000055ac  0fffe868	jal	_dindex
 5679  000055b0  54000000	nop; not filled.
 5680  000055b4  23bd0008	addi	r29,r29,#8
 5681  000055b8  64210000	snei	r1,r1,#0
 5682  000055bc  1420002c	bnez	r1,L166_LF5
 5683  000055c0  54000000	nop; not filled.
 5684  000055c4  23bdfff8	addi	r29,r29,#-8
 5685  000055c8  afa20000	sw	(r29),r2
 5686  000055cc  200b002b	addi	r11,r0,#43
 5687  000055d0  afab0004	sw	4(r29),r11
 5688  000055d4  0fffe840	jal	_dindex
 5689  000055d8  54000000	nop; not filled.
 5690  000055dc  23bd0008	addi	r29,r29,#8
 5691  000055e0  64210000	snei	r1,r1,#0
 5692  000055e4  10200034	beqz	r1,L165_LF5
 5693  000055e8  54000000	nop; not filled.
 5694  000055ec          	L166_LF5:
 5695  000055ec  23bdffe8	addi	r29,r29,#-24
 5696  000055f0  3c0b0000	lhi	r11,((LC18_LF5)>>16)&0xffff
 5697  000055f4  256bf664	addui	r11,r11,(LC18_LF5)&0xffff
 5698  000055f8  afab0000	sw	(r29),r11
 5699  000055fc  afa80004	sw	4(r29),r8
 5700  00005600  8fcb0004	lw	r11,4(r30)
 5701  00005604  afab0008	sw	8(r29),r11
 5702  00005608  afaa000c	sw	12(r29),r10
 5703  0000560c  afa70010	sw	16(r29),r7
 5704  00005610  0c004d34	jal	_printf
 5705  00005614  54000000	nop; not filled.
 5706  00005618  23bd0018	addi	r29,r29,#24
 5707  0000561c          	L165_LF5:
 5708  0000561c  3c020000	lhi	r2,((_freepcbs_LF5)>>16)&0xffff
 5709  00005620  2442fe18	addui	r2,r2,(_freepcbs_LF5)&0xffff
 5710  00005624  8c410008	lw	r1,8(r2)
 5711  00005628  60210000	seqi	r1,r1,#0
 5712  0000562c  10200028	beqz	r1,L167_LF5
 5713  00005630  54000000	nop; not filled.
 5714  00005634  23bdfff8	addi	r29,r29,#-8
 5715  00005638  3c0b0000	lhi	r11,((LC19_LF5)>>16)&0xffff
 5716  0000563c  256bf690	addui	r11,r11,(LC19_LF5)&0xffff
 5717  00005640  afab0000	sw	(r29),r11
 5718  00005644  0c004d00	jal	_printf
 5719  00005648  54000000	nop; not filled.
 5720  0000564c  0c004ce0	jal	_exitsim
 5721  00005650  54000000	nop; not filled.
 5722  00005654  23bd0008	addi	r29,r29,#8
 5723  00005658          	L167_LF5:
 5724  00005658  8c460000	lw	r6,(r2)
 5725  0000565c  23bdfff8	addi	r29,r29,#-8
 5726  00005660  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5727  00005664  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 5728  00005668  afa20000	sw	(r29),r2
 5729  0000566c  200b0070	addi	r11,r0,#112
 5730  00005670  afab0004	sw	4(r29),r11
 5731  00005674  0fffe7a0	jal	_dindex
 5732  00005678  54000000	nop; not filled.
 5733  0000567c  23bd0008	addi	r29,r29,#8
 5734  00005680  64210000	snei	r1,r1,#0
 5735  00005684  1420002c	bnez	r1,L172_LF5
 5736  00005688  54000000	nop; not filled.
 5737  0000568c  23bdfff8	addi	r29,r29,#-8
 5738  00005690  afa20000	sw	(r29),r2
 5739  00005694  200b002b	addi	r11,r0,#43
 5740  00005698  afab0004	sw	4(r29),r11
 5741  0000569c  0fffe778	jal	_dindex
 5742  000056a0  54000000	nop; not filled.
 5743  000056a4  23bd0008	addi	r29,r29,#8
 5744  000056a8  64210000	snei	r1,r1,#0
 5745  000056ac  10200024	beqz	r1,L171_LF5
 5746  000056b0  54000000	nop; not filled.
 5747  000056b4          	L172_LF5:
 5748  000056b4  23bdfff8	addi	r29,r29,#-8
 5749  000056b8  3c0b0000	lhi	r11,((LC20_LF5)>>16)&0xffff
 5750  000056bc  256bf6b4	addui	r11,r11,(LC20_LF5)&0xffff
 5751  000056c0  afab0000	sw	(r29),r11
 5752  000056c4  afa60004	sw	4(r29),r6
 5753  000056c8  0c004c7c	jal	_printf
 5754  000056cc  54000000	nop; not filled.
 5755  000056d0  23bd0008	addi	r29,r29,#8
 5756  000056d4          	L171_LF5:
 5757  000056d4  8cc10008	lw	r1,8(r6)
 5758  000056d8  8c210008	lw	r1,8(r1)
 5759  000056dc  6c210000	sgti	r1,r1,#0
 5760  000056e0  1020002c	beqz	r1,L174_LF5
 5761  000056e4  54000000	nop; not filled.
 5762  000056e8  8cc10004	lw	r1,4(r6)
 5763  000056ec  8ccb0000	lw	r11,(r6)
 5764  000056f0  ac2b0000	sw	(r1),r11
 5765  000056f4  8cc10000	lw	r1,(r6)
 5766  000056f8  8ccb0004	lw	r11,4(r6)
 5767  000056fc  ac2b0004	sw	4(r1),r11
 5768  00005700  8cc20008	lw	r2,8(r6)
 5769  00005704  8c410008	lw	r1,8(r2)
 5770  00005708  2021ffff	addi	r1,r1,#-1
 5771  0000570c  ac410008	sw	8(r2),r1
 5772  00005710          	L174_LF5:
 5773  00005710  200b0000	addi	r11,r0,#0
 5774  00005714  accb0000	sw	(r6),r11
 5775  00005718  8cc4000c	lw	r4,12(r6)
 5776  0000571c  8c81000c	lw	r1,12(r4)
 5777  00005720  200bffc0	addi	r11,r0,#-64
 5778  00005724  002b0824	and	r1,r1,r11
 5779  00005728  34210002	ori	r1,r1,#2
 5780  0000572c  ac81000c	sw	12(r4),r1
 5781  00005730  23bdfff8	addi	r29,r29,#-8
 5782  00005734  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5783  00005738  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 5784  0000573c  afa20000	sw	(r29),r2
 5785  00005740  200b0049	addi	r11,r0,#73
 5786  00005744  afab0004	sw	4(r29),r11
 5787  00005748  0fffe6cc	jal	_dindex
 5788  0000574c  54000000	nop; not filled.
 5789  00005750  23bd0008	addi	r29,r29,#8
 5790  00005754  64210000	snei	r1,r1,#0
 5791  00005758  1420002c	bnez	r1,L177_LF5
 5792  0000575c  54000000	nop; not filled.
 5793  00005760  23bdfff8	addi	r29,r29,#-8
 5794  00005764  afa20000	sw	(r29),r2
 5795  00005768  200b002b	addi	r11,r0,#43
 5796  0000576c  afab0004	sw	4(r29),r11
 5797  00005770  0fffe6a4	jal	_dindex
 5798  00005774  54000000	nop; not filled.
 5799  00005778  23bd0008	addi	r29,r29,#8
 5800  0000577c  64210000	snei	r1,r1,#0
 5801  00005780  1020002c	beqz	r1,L176_LF5
 5802  00005784  54000000	nop; not filled.
 5803  00005788          	L177_LF5:
 5804  00005788  0fffbb38	jal	_CurrentIntrs
 5805  0000578c  54000000	nop; not filled.
 5806  00005790  23bdfff8	addi	r29,r29,#-8
 5807  00005794  3c0b0000	lhi	r11,((LC21_LF5)>>16)&0xffff
 5808  00005798  256bf6c8	addui	r11,r11,(LC21_LF5)&0xffff
 5809  0000579c  afab0000	sw	(r29),r11
 5810  000057a0  afa10004	sw	4(r29),r1
 5811  000057a4  0c004ba0	jal	_printf
 5812  000057a8  54000000	nop; not filled.
 5813  000057ac  23bd0008	addi	r29,r29,#8
 5814  000057b0          	L176_LF5:
 5815  000057b0  23bdfff8	addi	r29,r29,#-8
 5816  000057b4  afa30000	sw	(r29),r3
 5817  000057b8  0fffbacc	jal	_SetIntrs
 5818  000057bc  54000000	nop; not filled.
 5819  000057c0  23bd0008	addi	r29,r29,#8
 5820  000057c4  23bdfff8	addi	r29,r29,#-8
 5821  000057c8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5822  000057cc  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 5823  000057d0  afa20000	sw	(r29),r2
 5824  000057d4  200b0049	addi	r11,r0,#73
 5825  000057d8  afab0004	sw	4(r29),r11
 5826  000057dc  0fffe638	jal	_dindex
 5827  000057e0  54000000	nop; not filled.
 5828  000057e4  23bd0008	addi	r29,r29,#8
 5829  000057e8  64210000	snei	r1,r1,#0
 5830  000057ec  1420002c	bnez	r1,L180_LF5
 5831  000057f0  54000000	nop; not filled.
 5832  000057f4  23bdfff8	addi	r29,r29,#-8
 5833  000057f8  afa20000	sw	(r29),r2
 5834  000057fc  200b002b	addi	r11,r0,#43
 5835  00005800  afab0004	sw	4(r29),r11
 5836  00005804  0fffe610	jal	_dindex
 5837  00005808  54000000	nop; not filled.
 5838  0000580c  23bd0008	addi	r29,r29,#8
 5839  00005810  64210000	snei	r1,r1,#0
 5840  00005814  1020002c	beqz	r1,L179_LF5
 5841  00005818  54000000	nop; not filled.
 5842  0000581c          	L180_LF5:
 5843  0000581c  0fffbaa4	jal	_CurrentIntrs
 5844  00005820  54000000	nop; not filled.
 5845  00005824  23bdfff8	addi	r29,r29,#-8
 5846  00005828  3c0b0000	lhi	r11,((LC22_LF5)>>16)&0xffff
 5847  0000582c  256bf6f4	addui	r11,r11,(LC22_LF5)&0xffff
 5848  00005830  afab0000	sw	(r29),r11
 5849  00005834  afa10004	sw	4(r29),r1
 5850  00005838  0c004b0c	jal	_printf
 5851  0000583c  54000000	nop; not filled.
 5852  00005840  23bd0008	addi	r29,r29,#8
 5853  00005844          	L179_LF5:
 5854  00005844  23bdfff8	addi	r29,r29,#-8
 5855  00005848  20810010	addi	r1,r4,#16
 5856  0000584c  afa10000	sw	(r29),r1
 5857  00005850  afaa0004	sw	4(r29),r10
 5858  00005854  0fffe100	jal	_dstrcpy
 5859  00005858  54000000	nop; not filled.
 5860  0000585c  200b0001	addi	r11,r0,#1
 5861  00005860  ac8b00a0	sw	160(r4),r11
 5862  00005864  0fffd6e0	jal	_MemoryAllocPage
 5863  00005868  54000000	nop; not filled.
 5864  0000586c  00011020	add	r2,r0,r1
 5865  00005870  23bd0008	addi	r29,r29,#8
 5866  00005874  64410000	snei	r1,r2,#0
 5867  00005878  14200028	bnez	r1,L181_LF5
 5868  0000587c  54000000	nop; not filled.
 5869  00005880  23bdfff8	addi	r29,r29,#-8
 5870  00005884  3c0b0000	lhi	r11,((LC23_LF5)>>16)&0xffff
 5871  00005888  256bf714	addui	r11,r11,(LC23_LF5)&0xffff
 5872  0000588c  afab0000	sw	(r29),r11
 5873  00005890  0c004ab4	jal	_printf
 5874  00005894  54000000	nop; not filled.
 5875  00005898  0c004a94	jal	_exitsim
 5876  0000589c  54000000	nop; not filled.
 5877  000058a0  23bd0008	addi	r29,r29,#8
 5878  000058a4          	L181_LF5:
 5879  000058a4  23bdfff8	addi	r29,r29,#-8
 5880  000058a8  afa20000	sw	(r29),r2
 5881  000058ac  0fffdde0	jal	_MemorySetupPte
 5882  000058b0  54000000	nop; not filled.
 5883  000058b4  ac810060	sw	96(r4),r1
 5884  000058b8  0fffd68c	jal	_MemoryAllocPage
 5885  000058bc  54000000	nop; not filled.
 5886  000058c0  00011020	add	r2,r0,r1
 5887  000058c4  23bd0008	addi	r29,r29,#8
 5888  000058c8  64410000	snei	r1,r2,#0
 5889  000058cc  14200028	bnez	r1,L182_LF5
 5890  000058d0  54000000	nop; not filled.
 5891  000058d4  23bdfff8	addi	r29,r29,#-8
 5892  000058d8  3c0b0000	lhi	r11,((LC24_LF5)>>16)&0xffff
 5893  000058dc  256bf748	addui	r11,r11,(LC24_LF5)&0xffff
 5894  000058e0  afab0000	sw	(r29),r11
 5895  000058e4  0c004a60	jal	_printf
 5896  000058e8  54000000	nop; not filled.
 5897  000058ec  0c004a40	jal	_exitsim
 5898  000058f0  54000000	nop; not filled.
 5899  000058f4  23bd0008	addi	r29,r29,#8
 5900  000058f8          	L182_LF5:
 5901  000058f8  50410010	slli	r1,r2,#0x10
 5902  000058fc  ac810008	sw	8(r4),r1
 5903  00005900  3425fe8c	ori	r5,r1,#65164
 5904  00005904  ac850004	sw	4(r4),r5
 5905  00005908  ac850000	sw	(r4),r5
 5906  0000590c  23bdfff8	addi	r29,r29,#-8
 5907  00005910  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5908  00005914  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 5909  00005918  afa20000	sw	(r29),r2
 5910  0000591c  200b0070	addi	r11,r0,#112
 5911  00005920  afab0004	sw	4(r29),r11
 5912  00005924  0fffe4f0	jal	_dindex
 5913  00005928  54000000	nop; not filled.
 5914  0000592c  23bd0008	addi	r29,r29,#8
 5915  00005930  64210000	snei	r1,r1,#0
 5916  00005934  1420002c	bnez	r1,L184_LF5
 5917  00005938  54000000	nop; not filled.
 5918  0000593c  23bdfff8	addi	r29,r29,#-8
 5919  00005940  afa20000	sw	(r29),r2
 5920  00005944  200b002b	addi	r11,r0,#43
 5921  00005948  afab0004	sw	4(r29),r11
 5922  0000594c  0fffe4c8	jal	_dindex
 5923  00005950  54000000	nop; not filled.
 5924  00005954  23bd0008	addi	r29,r29,#8
 5925  00005958  64210000	snei	r1,r1,#0
 5926  0000595c  10200040	beqz	r1,L183_LF5
 5927  00005960  54000000	nop; not filled.
 5928  00005964          	L184_LF5:
 5929  00005964  23bdffe8	addi	r29,r29,#-24
 5930  00005968  3c0b0000	lhi	r11,((LC25_LF5)>>16)&0xffff
 5931  0000596c  256bf780	addui	r11,r11,(LC25_LF5)&0xffff
 5932  00005970  afab0000	sw	(r29),r11
 5933  00005974  afa40004	sw	4(r29),r4
 5934  00005978  8c8b0008	lw	r11,8(r4)
 5935  0000597c  afab0008	sw	8(r29),r11
 5936  00005980  8c8b0060	lw	r11,96(r4)
 5937  00005984  afab000c	sw	12(r29),r11
 5938  00005988  8c8100a0	lw	r1,160(r4)
 5939  0000598c  50210010	slli	r1,r1,#0x10
 5940  00005990  afa10010	sw	16(r29),r1
 5941  00005994  0c0049b0	jal	_printf
 5942  00005998  54000000	nop; not filled.
 5943  0000599c  23bd0018	addi	r29,r29,#24
 5944  000059a0          	L183_LF5:
 5945  000059a0  200b0000	addi	r11,r0,#0
 5946  000059a4  acab0028	sw	40(r5),r11
 5947  000059a8  20810060	addi	r1,r4,#96
 5948  000059ac  aca10138	sw	312(r5),r1
 5949  000059b0  8c8b00a0	lw	r11,160(r4)
 5950  000059b4  acab013c	sw	316(r5),r11
 5951  000059b8  3c010010	lhi	r1,#16
 5952  000059bc  24210010	addui	r1,r1,#16
 5953  000059c0  aca10140	sw	320(r5),r1
 5954  000059c4  64e10000	snei	r1,r7,#0
 5955  000059c8  10200468	beqz	r1,L185_LF5
 5956  000059cc  54000000	nop; not filled.
 5957  000059d0  23bdfff8	addi	r29,r29,#-8
 5958  000059d4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5959  000059d8  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 5960  000059dc  afa20000	sw	(r29),r2
 5961  000059e0  200b0070	addi	r11,r0,#112
 5962  000059e4  afab0004	sw	4(r29),r11
 5963  000059e8  0fffe42c	jal	_dindex
 5964  000059ec  54000000	nop; not filled.
 5965  000059f0  23bd0008	addi	r29,r29,#8
 5966  000059f4  64210000	snei	r1,r1,#0
 5967  000059f8  1420002c	bnez	r1,L187_LF5
 5968  000059fc  54000000	nop; not filled.
 5969  00005a00  23bdfff8	addi	r29,r29,#-8
 5970  00005a04  afa20000	sw	(r29),r2
 5971  00005a08  200b002b	addi	r11,r0,#43
 5972  00005a0c  afab0004	sw	4(r29),r11
 5973  00005a10  0fffe404	jal	_dindex
 5974  00005a14  54000000	nop; not filled.
 5975  00005a18  23bd0008	addi	r29,r29,#8
 5976  00005a1c  64210000	snei	r1,r1,#0
 5977  00005a20  10200024	beqz	r1,L186_LF5
 5978  00005a24  54000000	nop; not filled.
 5979  00005a28          	L187_LF5:
 5980  00005a28  23bdfff8	addi	r29,r29,#-8
 5981  00005a2c  3c0b0000	lhi	r11,((LC26_LF5)>>16)&0xffff
 5982  00005a30  256bf7c0	addui	r11,r11,(LC26_LF5)&0xffff
 5983  00005a34  afab0000	sw	(r29),r11
 5984  00005a38  afaa0004	sw	4(r29),r10
 5985  00005a3c  0c004908	jal	_printf
 5986  00005a40  54000000	nop; not filled.
 5987  00005a44  23bd0008	addi	r29,r29,#8
 5988  00005a48          	L186_LF5:
 5989  00005a48  23bdffe8	addi	r29,r29,#-24
 5990  00005a4c  afaa0000	sw	(r29),r10
 5991  00005a50  23c1ff8c	addi	r1,r30,#-116
 5992  00005a54  afa10004	sw	4(r29),r1
 5993  00005a58  23c1ff88	addi	r1,r30,#-120
 5994  00005a5c  afa10008	sw	8(r29),r1
 5995  00005a60  23c1ff84	addi	r1,r30,#-124
 5996  00005a64  afa1000c	sw	12(r29),r1
 5997  00005a68  23c1ff80	addi	r1,r30,#-128
 5998  00005a6c  afa10010	sw	16(r29),r1
 5999  00005a70  23c1ff7c	addi	r1,r30,#-132
 6000  00005a74  afa10014	sw	20(r29),r1
 6001  00005a78  0c0005d0	jal	_ProcessGetCodeInfo
 6002  00005a7c  54000000	nop; not filled.
 6003  00005a80  00014020	add	r8,r0,r1
 6004  00005a84  23bd0018	addi	r29,r29,#24
 6005  00005a88  69010000	slti	r1,r8,#0
 6006  00005a8c  102000bc	beqz	r1,L188_LF5
 6007  00005a90  54000000	nop; not filled.
 6008  00005a94  3c030000	lhi	r3,((_freepcbs_LF5)>>16)&0xffff
 6009  00005a98  2463fe18	addui	r3,r3,(_freepcbs_LF5)&0xffff
 6010  00005a9c  208200a4	addi	r2,r4,#164
 6011  00005aa0  8c610004	lw	r1,4(r3)
 6012  00005aa4  ac8300ac	sw	172(r4),r3
 6013  00005aa8  ac8100a8	sw	168(r4),r1
 6014  00005aac  8c2b0000	lw	r11,(r1)
 6015  00005ab0  ac4b0000	sw	(r2),r11
 6016  00005ab4  ac220000	sw	(r1),r2
 6017  00005ab8  8c410000	lw	r1,(r2)
 6018  00005abc  ac220004	sw	4(r1),r2
 6019  00005ac0  8c610008	lw	r1,8(r3)
 6020  00005ac4  20210001	addi	r1,r1,#1
 6021  00005ac8  ac610008	sw	8(r3),r1
 6022  00005acc  20020000	addi	r2,r0,#0
 6023  00005ad0  8c8100a0	lw	r1,160(r4)
 6024  00005ad4  0041082a	slt	r1,r2,r1
 6025  00005ad8  10200038	beqz	r1,L194_LF5
 6026  00005adc  54000000	nop; not filled.
 6027  00005ae0  00041820	add	r3,r0,r4
 6028  00005ae4          	L196_LF5:
 6029  00005ae4  23bdfff8	addi	r29,r29,#-8
 6030  00005ae8  8c6b0060	lw	r11,96(r3)
 6031  00005aec  afab0000	sw	(r29),r11
 6032  00005af0  0fffdbcc	jal	_MemoryFreePte
 6033  00005af4  54000000	nop; not filled.
 6034  00005af8  23bd0008	addi	r29,r29,#8
 6035  00005afc  20630004	addi	r3,r3,#4
 6036  00005b00  20420001	addi	r2,r2,#1
 6037  00005b04  8c8100a0	lw	r1,160(r4)
 6038  00005b08  0041082a	slt	r1,r2,r1
 6039  00005b0c  1420ffd4	bnez	r1,L196_LF5
 6040  00005b10  54000000	nop; not filled.
 6041  00005b14          	L194_LF5:
 6042  00005b14  23bdfff8	addi	r29,r29,#-8
 6043  00005b18  94810008	lhu	r1,8(r4)
 6044  00005b1c  afa10000	sw	(r29),r1
 6045  00005b20  0fffd6d0	jal	_MemoryFreePage
 6046  00005b24  54000000	nop; not filled.
 6047  00005b28  23bd0008	addi	r29,r29,#8
 6048  00005b2c  8c81000c	lw	r1,12(r4)
 6049  00005b30  200bffc0	addi	r11,r0,#-64
 6050  00005b34  002b0824	and	r1,r1,r11
 6051  00005b38  34210001	ori	r1,r1,#1
 6052  00005b3c  ac81000c	sw	12(r4),r1
 6053  00005b40  2001ffff	addi	r1,r0,#-1
 6054  00005b44  080004c8	j	L221_LF5
 6055  00005b48  54000000	nop; not filled.
 6056  00005b4c          	L188_LF5:
 6057  00005b4c  23bdfff8	addi	r29,r29,#-8
 6058  00005b50  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6059  00005b54  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 6060  00005b58  afa20000	sw	(r29),r2
 6061  00005b5c  200b0070	addi	r11,r0,#112
 6062  00005b60  afab0004	sw	4(r29),r11
 6063  00005b64  0fffe2b0	jal	_dindex
 6064  00005b68  54000000	nop; not filled.
 6065  00005b6c  23bd0008	addi	r29,r29,#8
 6066  00005b70  64210000	snei	r1,r1,#0
 6067  00005b74  1420002c	bnez	r1,L200_LF5
 6068  00005b78  54000000	nop; not filled.
 6069  00005b7c  23bdfff8	addi	r29,r29,#-8
 6070  00005b80  afa20000	sw	(r29),r2
 6071  00005b84  200b002b	addi	r11,r0,#43
 6072  00005b88  afab0004	sw	4(r29),r11
 6073  00005b8c  0fffe288	jal	_dindex
 6074  00005b90  54000000	nop; not filled.
 6075  00005b94  23bd0008	addi	r29,r29,#8
 6076  00005b98  64210000	snei	r1,r1,#0
 6077  00005b9c  1020002c	beqz	r1,L199_LF5
 6078  00005ba0  54000000	nop; not filled.
 6079  00005ba4          	L200_LF5:
 6080  00005ba4  23bdfff0	addi	r29,r29,#-16
 6081  00005ba8  3c0b0000	lhi	r11,((LC27_LF5)>>16)&0xffff
 6082  00005bac  256bf7d4	addui	r11,r11,(LC27_LF5)&0xffff
 6083  00005bb0  afab0000	sw	(r29),r11
 6084  00005bb4  afaa0004	sw	4(r29),r10
 6085  00005bb8  8fcbff8c	lw	r11,-116(r30)
 6086  00005bbc  afab0008	sw	8(r29),r11
 6087  00005bc0  0c004784	jal	_printf
 6088  00005bc4  54000000	nop; not filled.
 6089  00005bc8  23bd0010	addi	r29,r29,#16
 6090  00005bcc          	L199_LF5:
 6091  00005bcc  23bdfff8	addi	r29,r29,#-8
 6092  00005bd0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6093  00005bd4  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 6094  00005bd8  afa20000	sw	(r29),r2
 6095  00005bdc  200b0070	addi	r11,r0,#112
 6096  00005be0  afab0004	sw	4(r29),r11
 6097  00005be4  0fffe230	jal	_dindex
 6098  00005be8  54000000	nop; not filled.
 6099  00005bec  23bd0008	addi	r29,r29,#8
 6100  00005bf0  64210000	snei	r1,r1,#0
 6101  00005bf4  1420002c	bnez	r1,L202_LF5
 6102  00005bf8  54000000	nop; not filled.
 6103  00005bfc  23bdfff8	addi	r29,r29,#-8
 6104  00005c00  afa20000	sw	(r29),r2
 6105  00005c04  200b002b	addi	r11,r0,#43
 6106  00005c08  afab0004	sw	4(r29),r11
 6107  00005c0c  0fffe208	jal	_dindex
 6108  00005c10  54000000	nop; not filled.
 6109  00005c14  23bd0008	addi	r29,r29,#8
 6110  00005c18  64210000	snei	r1,r1,#0
 6111  00005c1c  10200034	beqz	r1,L201_LF5
 6112  00005c20  54000000	nop; not filled.
 6113  00005c24          	L202_LF5:
 6114  00005c24  23bdfff0	addi	r29,r29,#-16
 6115  00005c28  3c0b0000	lhi	r11,((LC28_LF5)>>16)&0xffff
 6116  00005c2c  256bf7f0	addui	r11,r11,(LC28_LF5)&0xffff
 6117  00005c30  afab0000	sw	(r29),r11
 6118  00005c34  afaa0004	sw	4(r29),r10
 6119  00005c38  8fcbff88	lw	r11,-120(r30)
 6120  00005c3c  afab0008	sw	8(r29),r11
 6121  00005c40  8fcbff84	lw	r11,-124(r30)
 6122  00005c44  afab000c	sw	12(r29),r11
 6123  00005c48  0c0046fc	jal	_printf
 6124  00005c4c  54000000	nop; not filled.
 6125  00005c50  23bd0010	addi	r29,r29,#16
 6126  00005c54          	L201_LF5:
 6127  00005c54  23bdfff8	addi	r29,r29,#-8
 6128  00005c58  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6129  00005c5c  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 6130  00005c60  afa20000	sw	(r29),r2
 6131  00005c64  200b0070	addi	r11,r0,#112
 6132  00005c68  afab0004	sw	4(r29),r11
 6133  00005c6c  0fffe1a8	jal	_dindex
 6134  00005c70  54000000	nop; not filled.
 6135  00005c74  23bd0008	addi	r29,r29,#8
 6136  00005c78  64210000	snei	r1,r1,#0
 6137  00005c7c  1420002c	bnez	r1,L204_LF5
 6138  00005c80  54000000	nop; not filled.
 6139  00005c84  23bdfff8	addi	r29,r29,#-8
 6140  00005c88  afa20000	sw	(r29),r2
 6141  00005c8c  200b002b	addi	r11,r0,#43
 6142  00005c90  afab0004	sw	4(r29),r11
 6143  00005c94  0fffe180	jal	_dindex
 6144  00005c98  54000000	nop; not filled.
 6145  00005c9c  23bd0008	addi	r29,r29,#8
 6146  00005ca0  64210000	snei	r1,r1,#0
 6147  00005ca4  10200034	beqz	r1,L203_LF5
 6148  00005ca8  54000000	nop; not filled.
 6149  00005cac          	L204_LF5:
 6150  00005cac  23bdfff0	addi	r29,r29,#-16
 6151  00005cb0  3c0b0000	lhi	r11,((LC29_LF5)>>16)&0xffff
 6152  00005cb4  256bf818	addui	r11,r11,(LC29_LF5)&0xffff
 6153  00005cb8  afab0000	sw	(r29),r11
 6154  00005cbc  afaa0004	sw	4(r29),r10
 6155  00005cc0  8fcbff80	lw	r11,-128(r30)
 6156  00005cc4  afab0008	sw	8(r29),r11
 6157  00005cc8  8fcbff7c	lw	r11,-132(r30)
 6158  00005ccc  afab000c	sw	12(r29),r11
 6159  00005cd0  0c004674	jal	_printf
 6160  00005cd4  54000000	nop; not filled.
 6161  00005cd8  23bd0010	addi	r29,r29,#16
 6162  00005cdc          	L203_LF5:
 6163  00005cdc  23c3ff90	addi	r3,r30,#-112
 6164  00005ce0  23c9ff78	addi	r9,r30,#-136
 6165  00005ce4  3c070000	lhi	r7,((_debugstr)>>16)&0xffff
 6166  00005ce8  24e7fd4a	addui	r7,r7,(_debugstr)&0xffff
 6167  00005cec          	L205_LF5:
 6168  00005cec  23bdfff0	addi	r29,r29,#-16
 6169  00005cf0  afa80000	sw	(r29),r8
 6170  00005cf4  afa30004	sw	4(r29),r3
 6171  00005cf8  afa90008	sw	8(r29),r9
 6172  00005cfc  200b0064	addi	r11,r0,#100
 6173  00005d00  afab000c	sw	12(r29),r11
 6174  00005d04  0c0007a4	jal	_ProcessGetFromFile
 6175  00005d08  54000000	nop; not filled.
 6176  00005d0c  00011020	add	r2,r0,r1
 6177  00005d10  23bd0010	addi	r29,r29,#16
 6178  00005d14  6c410000	sgti	r1,r2,#0
 6179  00005d18  102000b0	beqz	r1,L206_LF5
 6180  00005d1c  54000000	nop; not filled.
 6181  00005d20  23bdfff8	addi	r29,r29,#-8
 6182  00005d24  afa70000	sw	(r29),r7
 6183  00005d28  200b0070	addi	r11,r0,#112
 6184  00005d2c  afab0004	sw	4(r29),r11
 6185  00005d30  0fffe0e4	jal	_dindex
 6186  00005d34  54000000	nop; not filled.
 6187  00005d38  23bd0008	addi	r29,r29,#8
 6188  00005d3c  64210000	snei	r1,r1,#0
 6189  00005d40  1420002c	bnez	r1,L209_LF5
 6190  00005d44  54000000	nop; not filled.
 6191  00005d48  23bdfff8	addi	r29,r29,#-8
 6192  00005d4c  afa70000	sw	(r29),r7
 6193  00005d50  200b002b	addi	r11,r0,#43
 6194  00005d54  afab0004	sw	4(r29),r11
 6195  00005d58  0fffe0bc	jal	_dindex
 6196  00005d5c  54000000	nop; not filled.
 6197  00005d60  23bd0008	addi	r29,r29,#8
 6198  00005d64  64210000	snei	r1,r1,#0
 6199  00005d68  10200030	beqz	r1,L208_LF5
 6200  00005d6c  54000000	nop; not filled.
 6201  00005d70          	L209_LF5:
 6202  00005d70  23bdfff0	addi	r29,r29,#-16
 6203  00005d74  3c0b0000	lhi	r11,((LC30_LF5)>>16)&0xffff
 6204  00005d78  256bf840	addui	r11,r11,(LC30_LF5)&0xffff
 6205  00005d7c  afab0000	sw	(r29),r11
 6206  00005d80  afa20004	sw	4(r29),r2
 6207  00005d84  8fc1ff78	lw	r1,-136(r30)
 6208  00005d88  00220822	sub	r1,r1,r2
 6209  00005d8c  afa10008	sw	8(r29),r1
 6210  00005d90  0c0045b4	jal	_printf
 6211  00005d94  54000000	nop; not filled.
 6212  00005d98  23bd0010	addi	r29,r29,#16
 6213  00005d9c          	L208_LF5:
 6214  00005d9c  23bdfff0	addi	r29,r29,#-16
 6215  00005da0  afa40000	sw	(r29),r4
 6216  00005da4  afa30004	sw	4(r29),r3
 6217  00005da8  8fc1ff78	lw	r1,-136(r30)
 6218  00005dac  00220822	sub	r1,r1,r2
 6219  00005db0  afa10008	sw	8(r29),r1
 6220  00005db4  afa2000c	sw	12(r29),r2
 6221  00005db8  0fffd684	jal	_MemoryCopySystemToUser
 6222  00005dbc  54000000	nop; not filled.
 6223  00005dc0  23bd0010	addi	r29,r29,#16
 6224  00005dc4  0bffff24	j	L205_LF5
 6225  00005dc8  54000000	nop; not filled.
 6226  00005dcc          	L206_LF5:
 6227  00005dcc  23bdfff8	addi	r29,r29,#-8
 6228  00005dd0  afa80000	sw	(r29),r8
 6229  00005dd4  0fffbd1c	jal	_FsClose
 6230  00005dd8  54000000	nop; not filled.
 6231  00005ddc  200b0100	addi	r11,r0,#256
 6232  00005de0  acab012c	sw	300(r5),r11
 6233  00005de4  240bffe0	addui	r11,r0,#65504
 6234  00005de8  acab009c	sw	156(r5),r11
 6235  00005dec  23bdfff8	addi	r29,r29,#-8
 6236  00005df0  afa40000	sw	(r29),r4
 6237  00005df4  23c10004	addi	r1,r30,#4
 6238  00005df8  afa10004	sw	4(r29),r1
 6239  00005dfc  8cab009c	lw	r11,156(r5)
 6240  00005e00  afab0008	sw	8(r29),r11
 6241  00005e04  200b0004	addi	r11,r0,#4
 6242  00005e08  afab000c	sw	12(r29),r11
 6243  00005e0c  0fffd630	jal	_MemoryCopySystemToUser
 6244  00005e10  54000000	nop; not filled.
 6245  00005e14  8fcbff8c	lw	r11,-116(r30)
 6246  00005e18  acab0128	sw	296(r5),r11
 6247  00005e1c  8c81000c	lw	r1,12(r4)
 6248  00005e20  34210200	ori	r1,r1,#512
 6249  00005e24  ac81000c	sw	12(r4),r1
 6250  00005e28  23bd0010	addi	r29,r29,#16
 6251  00005e2c  0800003c	j	L210_LF5
 6252  00005e30  54000000	nop; not filled.
 6253  00005e34          	L185_LF5:
 6254  00005e34  3c0b0000	lhi	r11,((_ProcessExit_LF5)>>16)&0xffff
 6255  00005e38  256b74c4	addui	r11,r11,(_ProcessExit_LF5)&0xffff
 6256  00005e3c  acab00a4	sw	164(r5),r11
 6257  00005e40  8c810008	lw	r1,8(r4)
 6258  00005e44  2421ffe0	addui	r1,r1,#65504
 6259  00005e48  aca1009c	sw	156(r5),r1
 6260  00005e4c  8fcb0004	lw	r11,4(r30)
 6261  00005e50  ac2b0000	sw	(r1),r11
 6262  00005e54  aca80128	sw	296(r5),r8
 6263  00005e58  200b0140	addi	r11,r0,#320
 6264  00005e5c  acab012c	sw	300(r5),r11
 6265  00005e60  8c81000c	lw	r1,12(r4)
 6266  00005e64  34210100	ori	r1,r1,#256
 6267  00005e68  ac81000c	sw	12(r4),r1
 6268  00005e6c          	L210_LF5:
 6269  00005e6c  23bdfff8	addi	r29,r29,#-8
 6270  00005e70  200b000f	addi	r11,r0,#15
 6271  00005e74  afab0000	sw	(r29),r11
 6272  00005e78  0fffb40c	jal	_SetIntrs
 6273  00005e7c  54000000	nop; not filled.
 6274  00005e80  23bd0008	addi	r29,r29,#8
 6275  00005e84  3c030000	lhi	r3,((_runQueue_LF5)>>16)&0xffff
 6276  00005e88  2463fe24	addui	r3,r3,(_runQueue_LF5)&0xffff
 6277  00005e8c  8c620004	lw	r2,4(r3)
 6278  00005e90  acc30008	sw	8(r6),r3
 6279  00005e94  acc20004	sw	4(r6),r2
 6280  00005e98  8c4b0000	lw	r11,(r2)
 6281  00005e9c  accb0000	sw	(r6),r11
 6282  00005ea0  ac460000	sw	(r2),r6
 6283  00005ea4  8cc20000	lw	r2,(r6)
 6284  00005ea8  ac460004	sw	4(r2),r6
 6285  00005eac  8c620008	lw	r2,8(r3)
 6286  00005eb0  20420001	addi	r2,r2,#1
 6287  00005eb4  ac620008	sw	8(r3),r2
 6288  00005eb8  23bdfff8	addi	r29,r29,#-8
 6289  00005ebc  afa10000	sw	(r29),r1
 6290  00005ec0  0fffb3c4	jal	_SetIntrs
 6291  00005ec4  54000000	nop; not filled.
 6292  00005ec8  23bd0008	addi	r29,r29,#8
 6293  00005ecc  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 6294  00005ed0  2421fe14	addui	r1,r1,(_currentPCB)&0xffff
 6295  00005ed4  8c210000	lw	r1,(r1)
 6296  00005ed8  64210000	snei	r1,r1,#0
 6297  00005edc  14200090	bnez	r1,L216_LF5
 6298  00005ee0  54000000	nop; not filled.
 6299  00005ee4  23bdfff8	addi	r29,r29,#-8
 6300  00005ee8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6301  00005eec  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 6302  00005ef0  afa20000	sw	(r29),r2
 6303  00005ef4  200b0070	addi	r11,r0,#112
 6304  00005ef8  afab0004	sw	4(r29),r11
 6305  00005efc  0fffdf18	jal	_dindex
 6306  00005f00  54000000	nop; not filled.
 6307  00005f04  23bd0008	addi	r29,r29,#8
 6308  00005f08  64210000	snei	r1,r1,#0
 6309  00005f0c  1420002c	bnez	r1,L218_LF5
 6310  00005f10  54000000	nop; not filled.
 6311  00005f14  23bdfff8	addi	r29,r29,#-8
 6312  00005f18  afa20000	sw	(r29),r2
 6313  00005f1c  200b002b	addi	r11,r0,#43
 6314  00005f20  afab0004	sw	4(r29),r11
 6315  00005f24  0fffdef0	jal	_dindex
 6316  00005f28  54000000	nop; not filled.
 6317  00005f2c  23bd0008	addi	r29,r29,#8
 6318  00005f30  64210000	snei	r1,r1,#0
 6319  00005f34  1020002c	beqz	r1,L217_LF5
 6320  00005f38  54000000	nop; not filled.
 6321  00005f3c          	L218_LF5:
 6322  00005f3c  23bdfff0	addi	r29,r29,#-16
 6323  00005f40  3c0b0000	lhi	r11,((LC31_LF5)>>16)&0xffff
 6324  00005f44  256bf864	addui	r11,r11,(LC31_LF5)&0xffff
 6325  00005f48  afab0000	sw	(r29),r11
 6326  00005f4c  afa40004	sw	4(r29),r4
 6327  00005f50  8c8b0000	lw	r11,(r4)
 6328  00005f54  afab0008	sw	8(r29),r11
 6329  00005f58  0c0043ec	jal	_printf
 6330  00005f5c  54000000	nop; not filled.
 6331  00005f60  23bd0010	addi	r29,r29,#16
 6332  00005f64          	L217_LF5:
 6333  00005f64  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 6334  00005f68  2421fe14	addui	r1,r1,(_currentPCB)&0xffff
 6335  00005f6c  ac240000	sw	(r1),r4
 6336  00005f70          	L216_LF5:
 6337  00005f70  23bdfff8	addi	r29,r29,#-8
 6338  00005f74  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6339  00005f78  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 6340  00005f7c  afa20000	sw	(r29),r2
 6341  00005f80  200b0070	addi	r11,r0,#112
 6342  00005f84  afab0004	sw	4(r29),r11
 6343  00005f88  0fffde8c	jal	_dindex
 6344  00005f8c  54000000	nop; not filled.
 6345  00005f90  23bd0008	addi	r29,r29,#8
 6346  00005f94  64210000	snei	r1,r1,#0
 6347  00005f98  1420002c	bnez	r1,L220_LF5
 6348  00005f9c  54000000	nop; not filled.
 6349  00005fa0  23bdfff8	addi	r29,r29,#-8
 6350  00005fa4  afa20000	sw	(r29),r2
 6351  00005fa8  200b002b	addi	r11,r0,#43
 6352  00005fac  afab0004	sw	4(r29),r11
 6353  00005fb0  0fffde64	jal	_dindex
 6354  00005fb4  54000000	nop; not filled.
 6355  00005fb8  23bd0008	addi	r29,r29,#8
 6356  00005fbc  64210000	snei	r1,r1,#0
 6357  00005fc0  10200024	beqz	r1,L219_LF5
 6358  00005fc4  54000000	nop; not filled.
 6359  00005fc8          	L220_LF5:
 6360  00005fc8  23bdfff8	addi	r29,r29,#-8
 6361  00005fcc  3c0b0000	lhi	r11,((LC32_LF5)>>16)&0xffff
 6362  00005fd0  256bf890	addui	r11,r11,(LC32_LF5)&0xffff
 6363  00005fd4  afab0000	sw	(r29),r11
 6364  00005fd8  afaa0004	sw	4(r29),r10
 6365  00005fdc  0c004368	jal	_printf
 6366  00005fe0  54000000	nop; not filled.
 6367  00005fe4  23bd0008	addi	r29,r29,#8
 6368  00005fe8          	L219_LF5:
 6369  00005fe8  3c0b0000	lhi	r11,((_pcbs_LF5)>>16)&0xffff
 6370  00005fec  256bfe48	addui	r11,r11,(_pcbs_LF5)&0xffff
 6371  00005ff0  008b1022	sub	r2,r4,r11
 6372  00005ff4  3c01a4fa	lhi	r1,#-23302
 6373  00005ff8  24214fa5	addui	r1,r1,#20389
 6374  00005ffc  00400035	movi2fp	f0,r2
 6375  00006000  00200835	movi2fp	f1,r1
 6376  00006004  0401000e	mult	f0,f0,f1
 6377  00006008  00000834	movfp2i	r1,f0
 6378  0000600c  5c210002	srai	r1,r1,#0x2
 6379  00006010          	L221_LF5:
 6380  00006010  8fa20000	lw	r2,0(r29)
 6381  00006014  8fa30004	lw	r3,4(r29)
 6382  00006018  8fa40008	lw	r4,8(r29)
 6383  0000601c  8fa5000c	lw	r5,12(r29)
 6384  00006020  8fa60010	lw	r6,16(r29)
 6385  00006024  8fa70014	lw	r7,20(r29)
 6386  00006028  8fa80018	lw	r8,24(r29)
 6387  0000602c  8fa9001c	lw	r9,28(r29)
 6388  00006030  8faa0020	lw	r10,32(r29)
 6389  00006034  8fab0024	lw	r11,36(r29)
 6390  00006038  8fdffff8	lw	r31,-8(r30)
 6391  0000603c  001ee820	add	r29,r0,r30
 6392  00006040  8fdefffc	lw	r30,-4(r30)
 6393  00006044  4be00000	jr	r31
 6394  00006048  54000000	nop
 6395  0000604c          	.endproc _ProcessFork
 6396  0000604c          	.data
 6397  0000f8aa          	.align 2
 6398  0000f8ac          	LC33_LF5:
 6399  0000f8ac  50726f63	.ascii "ProcessGetCodeInfo: open of %s failed (%d).\n\000"
 6399  0000f8b0  65737347	
 6399  0000f8b4  6574436f	
 6399  0000f8b8  6465496e	
 6399  0000f8bc  666f3a20	
 6399  0000f8c0  6f70656e	
 6399  0000f8c4  206f6620	
 6399  0000f8c8  25732066	
 6399  0000f8cc  61696c65	
 6399  0000f8d0  64202825	
 6399  0000f8d4  64292e0a	
 6399  0000f8d8  00      	
 6400  0000f8d9          	.align 2
 6401  0000f8dc          	LC34_LF5:
 6402  0000f8dc  46696c65	.ascii "File descriptor is now %d.\n\000"
 6402  0000f8e0  20646573	
 6402  0000f8e4  63726970	
 6402  0000f8e8  746f7220	
 6402  0000f8ec  6973206e	
 6402  0000f8f0  6f772025	
 6402  0000f8f4  642e0a00	
 6403  0000f8f8          	.align 2
 6404  0000f8f8          	LC35_LF5:
 6405  0000f8f8  50726f63	.ascii "ProcessGetCodeInfo: read got %d (not %d) bytes from %s\n\000"
 6405  0000f8fc  65737347	
 6405  0000f900  6574436f	
 6405  0000f904  6465496e	
 6405  0000f908  666f3a20	
 6405  0000f90c  72656164	
 6405  0000f910  20676f74	
 6405  0000f914  20256420	
 6405  0000f918  286e6f74	
 6405  0000f91c  20256429	
 6405  0000f920  20627974	
 6405  0000f924  65732066	
 6405  0000f928  726f6d20	
 6405  0000f92c  25730a00	
 6406  0000f930          	.align 2
 6407  0000f930          	LC36_LF5:
 6408  0000f930  73746172	.ascii "start:\000"
 6408  0000f934  743a00  	
 6409  0000f937          	.align 2
 6410  0000f938          	LC37_LF5:
 6411  0000f938  50726f63	.ascii "ProcessGetCodeInfo: %s missing start line (not a DLX executable?)\n\000"
 6411  0000f93c  65737347	
 6411  0000f940  6574436f	
 6411  0000f944  6465496e	
 6411  0000f948  666f3a20	
 6411  0000f94c  2573206d	
 6411  0000f950  69737369	
 6411  0000f954  6e672073	
 6411  0000f958  74617274	
 6411  0000f95c  206c696e	
 6411  0000f960  6520286e	
 6411  0000f964  6f742061	
 6411  0000f968  20444c58	
 6411  0000f96c  20657865	
 6411  0000f970  63757461	
 6411  0000f974  626c653f	
 6411  0000f978  290a00  	
 6412  0000f97b          	.text
 6413  0000604c          	.align 2
 6414  0000604c          	.proc _ProcessGetCodeInfo
 6415  0000604c          	.global _ProcessGetCodeInfo
 6416  0000604c          	_ProcessGetCodeInfo:
 6417                      ;  Function 'ProcessGetCodeInfo'; 112 bytes of locals, 11 regs to save.
 6418  0000604c  afbefffc	sw	-4(r29),r30; push fp
 6419  00006050  001df020	add	r30,r0,r29; fp = sp
 6420  00006054  afbffff8	sw	-8(r29),r31; push ret addr
 6421  00006058  2fbd00a8	subui	r29,r29,#168; alloc local storage
 6422  0000605c  afa20000	sw	0(r29),r2
 6423  00006060  afa30004	sw	4(r29),r3
 6424  00006064  afa40008	sw	8(r29),r4
 6425  00006068  afa5000c	sw	12(r29),r5
 6426  0000606c  afa60010	sw	16(r29),r6
 6427  00006070  afa70014	sw	20(r29),r7
 6428  00006074  afa80018	sw	24(r29),r8
 6429  00006078  afa9001c	sw	28(r29),r9
 6430  0000607c  afaa0020	sw	32(r29),r10
 6431  00006080  afab0024	sw	36(r29),r11
 6432  00006084  afac0028	sw	40(r29),r12
 6433  00006088  8fc60000	lw	r6,(r30)
 6434  0000608c  8fc70004	lw	r7,4(r30)
 6435  00006090  8fc80008	lw	r8,8(r30)
 6436  00006094  8fc9000c	lw	r9,12(r30)
 6437  00006098  8fca0010	lw	r10,16(r30)
 6438  0000609c  8fcb0014	lw	r11,20(r30)
 6439  000060a0  23bdfff8	addi	r29,r29,#-8
 6440  000060a4  afa60000	sw	(r29),r6
 6441  000060a8  200c0001	addi	r12,r0,#1
 6442  000060ac  afac0004	sw	4(r29),r12
 6443  000060b0  0fffb6e4	jal	_FsOpen
 6444  000060b4  54000000	nop; not filled.
 6445  000060b8  00011820	add	r3,r0,r1
 6446  000060bc  23bd0008	addi	r29,r29,#8
 6447  000060c0  68610000	slti	r1,r3,#0
 6448  000060c4  10200088	beqz	r1,L230_LF5
 6449  000060c8  54000000	nop; not filled.
 6450  000060cc  23bdfff8	addi	r29,r29,#-8
 6451  000060d0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6452  000060d4  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 6453  000060d8  afa20000	sw	(r29),r2
 6454  000060dc  200c0066	addi	r12,r0,#102
 6455  000060e0  afac0004	sw	4(r29),r12
 6456  000060e4  0fffdd30	jal	_dindex
 6457  000060e8  54000000	nop; not filled.
 6458  000060ec  23bd0008	addi	r29,r29,#8
 6459  000060f0  64210000	snei	r1,r1,#0
 6460  000060f4  1420002c	bnez	r1,L232_LF5
 6461  000060f8  54000000	nop; not filled.
 6462  000060fc  23bdfff8	addi	r29,r29,#-8
 6463  00006100  afa20000	sw	(r29),r2
 6464  00006104  200c002b	addi	r12,r0,#43
 6465  00006108  afac0004	sw	4(r29),r12
 6466  0000610c  0fffdd08	jal	_dindex
 6467  00006110  54000000	nop; not filled.
 6468  00006114  23bd0008	addi	r29,r29,#8
 6469  00006118  64210000	snei	r1,r1,#0
 6470  0000611c  10200224	beqz	r1,L239_LF5
 6471  00006120  54000000	nop; not filled.
 6472  00006124          	L232_LF5:
 6473  00006124  23bdfff0	addi	r29,r29,#-16
 6474  00006128  3c0c0000	lhi	r12,((LC33_LF5)>>16)&0xffff
 6475  0000612c  258cf8ac	addui	r12,r12,(LC33_LF5)&0xffff
 6476  00006130  afac0000	sw	(r29),r12
 6477  00006134  afa60004	sw	4(r29),r6
 6478  00006138  afa30008	sw	8(r29),r3
 6479  0000613c  0c004208	jal	_printf
 6480  00006140  54000000	nop; not filled.
 6481  00006144  23bd0010	addi	r29,r29,#16
 6482  00006148  080001f8	j	L239_LF5
 6483  0000614c  54000000	nop; not filled.
 6484  00006150          	L230_LF5:
 6485  00006150  23bdfff8	addi	r29,r29,#-8
 6486  00006154  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6487  00006158  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 6488  0000615c  afa20000	sw	(r29),r2
 6489  00006160  200c0066	addi	r12,r0,#102
 6490  00006164  afac0004	sw	4(r29),r12
 6491  00006168  0fffdcac	jal	_dindex
 6492  0000616c  54000000	nop; not filled.
 6493  00006170  23bd0008	addi	r29,r29,#8
 6494  00006174  64210000	snei	r1,r1,#0
 6495  00006178  1420002c	bnez	r1,L234_LF5
 6496  0000617c  54000000	nop; not filled.
 6497  00006180  23bdfff8	addi	r29,r29,#-8
 6498  00006184  afa20000	sw	(r29),r2
 6499  00006188  200c002b	addi	r12,r0,#43
 6500  0000618c  afac0004	sw	4(r29),r12
 6501  00006190  0fffdc84	jal	_dindex
 6502  00006194  54000000	nop; not filled.
 6503  00006198  23bd0008	addi	r29,r29,#8
 6504  0000619c  64210000	snei	r1,r1,#0
 6505  000061a0  10200024	beqz	r1,L233_LF5
 6506  000061a4  54000000	nop; not filled.
 6507  000061a8          	L234_LF5:
 6508  000061a8  23bdfff8	addi	r29,r29,#-8
 6509  000061ac  3c0c0000	lhi	r12,((LC34_LF5)>>16)&0xffff
 6510  000061b0  258cf8dc	addui	r12,r12,(LC34_LF5)&0xffff
 6511  000061b4  afac0000	sw	(r29),r12
 6512  000061b8  afa30004	sw	4(r29),r3
 6513  000061bc  0c004188	jal	_printf
 6514  000061c0  54000000	nop; not filled.
 6515  000061c4  23bd0008	addi	r29,r29,#8
 6516  000061c8          	L233_LF5:
 6517  000061c8  23bdfff0	addi	r29,r29,#-16
 6518  000061cc  afa30000	sw	(r29),r3
 6519  000061d0  23c4ff90	addi	r4,r30,#-112
 6520  000061d4  afa40004	sw	4(r29),r4
 6521  000061d8  200c0064	addi	r12,r0,#100
 6522  000061dc  afac0008	sw	8(r29),r12
 6523  000061e0  0fffba18	jal	_FsRead
 6524  000061e4  54000000	nop; not filled.
 6525  000061e8  00012820	add	r5,r0,r1
 6526  000061ec  23bd0010	addi	r29,r29,#16
 6527  000061f0  64a10064	snei	r1,r5,#100
 6528  000061f4  102000a8	beqz	r1,L235_LF5
 6529  000061f8  54000000	nop; not filled.
 6530  000061fc  23bdfff8	addi	r29,r29,#-8
 6531  00006200  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6532  00006204  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 6533  00006208  afa20000	sw	(r29),r2
 6534  0000620c  200c0066	addi	r12,r0,#102
 6535  00006210  afac0004	sw	4(r29),r12
 6536  00006214  0fffdc00	jal	_dindex
 6537  00006218  54000000	nop; not filled.
 6538  0000621c  23bd0008	addi	r29,r29,#8
 6539  00006220  64210000	snei	r1,r1,#0
 6540  00006224  1420002c	bnez	r1,L237_LF5
 6541  00006228  54000000	nop; not filled.
 6542  0000622c  23bdfff8	addi	r29,r29,#-8
 6543  00006230  afa20000	sw	(r29),r2
 6544  00006234  200c002b	addi	r12,r0,#43
 6545  00006238  afac0004	sw	4(r29),r12
 6546  0000623c  0fffdbd8	jal	_dindex
 6547  00006240  54000000	nop; not filled.
 6548  00006244  23bd0008	addi	r29,r29,#8
 6549  00006248  64210000	snei	r1,r1,#0
 6550  0000624c  10200030	beqz	r1,L236_LF5
 6551  00006250  54000000	nop; not filled.
 6552  00006254          	L237_LF5:
 6553  00006254  23bdfff0	addi	r29,r29,#-16
 6554  00006258  3c0c0000	lhi	r12,((LC35_LF5)>>16)&0xffff
 6555  0000625c  258cf8f8	addui	r12,r12,(LC35_LF5)&0xffff
 6556  00006260  afac0000	sw	(r29),r12
 6557  00006264  afa50004	sw	4(r29),r5
 6558  00006268  200c0064	addi	r12,r0,#100
 6559  0000626c  afac0008	sw	8(r29),r12
 6560  00006270  afa6000c	sw	12(r29),r6
 6561  00006274  0c0040d0	jal	_printf
 6562  00006278  54000000	nop; not filled.
 6563  0000627c  23bd0010	addi	r29,r29,#16
 6564  00006280          	L236_LF5:
 6565  00006280  23bdfff8	addi	r29,r29,#-8
 6566  00006284  afa30000	sw	(r29),r3
 6567  00006288  0fffb868	jal	_FsClose
 6568  0000628c  54000000	nop; not filled.
 6569  00006290  2001ffff	addi	r1,r0,#-1
 6570  00006294  23bd0008	addi	r29,r29,#8
 6571  00006298  080001d0	j	L229_LF5
 6572  0000629c  54000000	nop; not filled.
 6573  000062a0          	L235_LF5:
 6574  000062a0  23bdfff8	addi	r29,r29,#-8
 6575  000062a4  afa40000	sw	(r29),r4
 6576  000062a8  3c010000	lhi	r1,((LC36_LF5)>>16)&0xffff
 6577  000062ac  2421f930	addui	r1,r1,(LC36_LF5)&0xffff
 6578  000062b0  afa10004	sw	4(r29),r1
 6579  000062b4  0fffd948	jal	_dstrstr
 6580  000062b8  54000000	nop; not filled.
 6581  000062bc  23bd0008	addi	r29,r29,#8
 6582  000062c0  64210000	snei	r1,r1,#0
 6583  000062c4  14200088	bnez	r1,L238_LF5
 6584  000062c8  54000000	nop; not filled.
 6585  000062cc  23bdfff8	addi	r29,r29,#-8
 6586  000062d0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6587  000062d4  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 6588  000062d8  afa20000	sw	(r29),r2
 6589  000062dc  200c0066	addi	r12,r0,#102
 6590  000062e0  afac0004	sw	4(r29),r12
 6591  000062e4  0fffdb30	jal	_dindex
 6592  000062e8  54000000	nop; not filled.
 6593  000062ec  23bd0008	addi	r29,r29,#8
 6594  000062f0  64210000	snei	r1,r1,#0
 6595  000062f4  1420002c	bnez	r1,L240_LF5
 6596  000062f8  54000000	nop; not filled.
 6597  000062fc  23bdfff8	addi	r29,r29,#-8
 6598  00006300  afa20000	sw	(r29),r2
 6599  00006304  200c002b	addi	r12,r0,#43
 6600  00006308  afac0004	sw	4(r29),r12
 6601  0000630c  0fffdb08	jal	_dindex
 6602  00006310  54000000	nop; not filled.
 6603  00006314  23bd0008	addi	r29,r29,#8
 6604  00006318  64210000	snei	r1,r1,#0
 6605  0000631c  10200024	beqz	r1,L239_LF5
 6606  00006320  54000000	nop; not filled.
 6607  00006324          	L240_LF5:
 6608  00006324  23bdfff8	addi	r29,r29,#-8
 6609  00006328  3c0c0000	lhi	r12,((LC37_LF5)>>16)&0xffff
 6610  0000632c  258cf938	addui	r12,r12,(LC37_LF5)&0xffff
 6611  00006330  afac0000	sw	(r29),r12
 6612  00006334  afa60004	sw	4(r29),r6
 6613  00006338  0c00400c	jal	_printf
 6614  0000633c  54000000	nop; not filled.
 6615  00006340  23bd0008	addi	r29,r29,#8
 6616  00006344          	L239_LF5:
 6617  00006344  2001ffff	addi	r1,r0,#-1
 6618  00006348  08000120	j	L229_LF5
 6619  0000634c  54000000	nop; not filled.
 6620  00006350          	L238_LF5:
 6621  00006350  23bdfff8	addi	r29,r29,#-8
 6622  00006354  afa40000	sw	(r29),r4
 6623  00006358  200c003a	addi	r12,r0,#58
 6624  0000635c  afac0004	sw	4(r29),r12
 6625  00006360  0fffdab4	jal	_dindex
 6626  00006364  54000000	nop; not filled.
 6627  00006368  20210001	addi	r1,r1,#1
 6628  0000636c  afc1ff8c	sw	-116(r30),r1
 6629  00006370  23bdfff8	addi	r29,r29,#-8
 6630  00006374  afa10000	sw	(r29),r1
 6631  00006378  23c2ff8c	addi	r2,r30,#-116
 6632  0000637c  afa20004	sw	4(r29),r2
 6633  00006380  200c0010	addi	r12,r0,#16
 6634  00006384  afac0008	sw	8(r29),r12
 6635  00006388  0fffdc14	jal	_dstrtol
 6636  0000638c  54000000	nop; not filled.
 6637  00006390  ace10000	sw	(r7),r1
 6638  00006394  8fccff8c	lw	r12,-116(r30)
 6639  00006398  afac0000	sw	(r29),r12
 6640  0000639c  afa20004	sw	4(r29),r2
 6641  000063a0  200c0010	addi	r12,r0,#16
 6642  000063a4  afac0008	sw	8(r29),r12
 6643  000063a8  0fffdbf4	jal	_dstrtol
 6644  000063ac  54000000	nop; not filled.
 6645  000063b0  8fccff8c	lw	r12,-116(r30)
 6646  000063b4  afac0000	sw	(r29),r12
 6647  000063b8  afa20004	sw	4(r29),r2
 6648  000063bc  200c0010	addi	r12,r0,#16
 6649  000063c0  afac0008	sw	8(r29),r12
 6650  000063c4  0fffdbd8	jal	_dstrtol
 6651  000063c8  54000000	nop; not filled.
 6652  000063cc  ad010000	sw	(r8),r1
 6653  000063d0  8fccff8c	lw	r12,-116(r30)
 6654  000063d4  afac0000	sw	(r29),r12
 6655  000063d8  afa20004	sw	4(r29),r2
 6656  000063dc  200c0010	addi	r12,r0,#16
 6657  000063e0  afac0008	sw	8(r29),r12
 6658  000063e4  0fffdbb8	jal	_dstrtol
 6659  000063e8  54000000	nop; not filled.
 6660  000063ec  ad210000	sw	(r9),r1
 6661  000063f0  8fccff8c	lw	r12,-116(r30)
 6662  000063f4  afac0000	sw	(r29),r12
 6663  000063f8  afa20004	sw	4(r29),r2
 6664  000063fc  200c0010	addi	r12,r0,#16
 6665  00006400  afac0008	sw	8(r29),r12
 6666  00006404  0fffdb98	jal	_dstrtol
 6667  00006408  54000000	nop; not filled.
 6668  0000640c  ad410000	sw	(r10),r1
 6669  00006410  8fccff8c	lw	r12,-116(r30)
 6670  00006414  afac0000	sw	(r29),r12
 6671  00006418  afa20004	sw	4(r29),r2
 6672  0000641c  200c0010	addi	r12,r0,#16
 6673  00006420  afac0008	sw	8(r29),r12
 6674  00006424  0fffdb78	jal	_dstrtol
 6675  00006428  54000000	nop; not filled.
 6676  0000642c  ad610000	sw	(r11),r1
 6677  00006430  afa40000	sw	(r29),r4
 6678  00006434  200c000a	addi	r12,r0,#10
 6679  00006438  afac0004	sw	4(r29),r12
 6680  0000643c  0fffd9d8	jal	_dindex
 6681  00006440  54000000	nop; not filled.
 6682  00006444  23c2ff8f	addi	r2,r30,#-113
 6683  00006448  00220822	sub	r1,r1,r2
 6684  0000644c  afa30000	sw	(r29),r3
 6685  00006450  afa10004	sw	4(r29),r1
 6686  00006454  200c0000	addi	r12,r0,#0
 6687  00006458  afac0008	sw	8(r29),r12
 6688  0000645c  0fffb994	jal	_FsSeek
 6689  00006460  54000000	nop; not filled.
 6690  00006464  00030820	add	r1,r0,r3
 6691  00006468  23bd0010	addi	r29,r29,#16
 6692  0000646c          	L229_LF5:
 6693  0000646c  8fa20000	lw	r2,0(r29)
 6694  00006470  8fa30004	lw	r3,4(r29)
 6695  00006474  8fa40008	lw	r4,8(r29)
 6696  00006478  8fa5000c	lw	r5,12(r29)
 6697  0000647c  8fa60010	lw	r6,16(r29)
 6698  00006480  8fa70014	lw	r7,20(r29)
 6699  00006484  8fa80018	lw	r8,24(r29)
 6700  00006488  8fa9001c	lw	r9,28(r29)
 6701  0000648c  8faa0020	lw	r10,32(r29)
 6702  00006490  8fab0024	lw	r11,36(r29)
 6703  00006494  8fac0028	lw	r12,40(r29)
 6704  00006498  8fdffff8	lw	r31,-8(r30)
 6705  0000649c  001ee820	add	r29,r0,r30
 6706  000064a0  8fdefffc	lw	r30,-4(r30)
 6707  000064a4  4be00000	jr	r31
 6708  000064a8  54000000	nop
 6709  000064ac          	.endproc _ProcessGetCodeInfo
 6710  000064ac          	.data
 6711  0000f97b          	.align 2
 6712  0000f97c          	LC38_LF5:
 6713  0000f97c  476f7420	.ascii "Got %d bytes at offset %d ...\000"
 6713  0000f980  25642062	
 6713  0000f984  79746573	
 6713  0000f988  20617420	
 6713  0000f98c  6f666673	
 6713  0000f990  65742025	
 6713  0000f994  64202e2e	
 6713  0000f998  2e00    	
 6714  0000f99a          	.align 2
 6715  0000f99c          	LC39_LF5:
 6716  0000f99c  20746572	.ascii " terminated at %d.\n\000"
 6716  0000f9a0  6d696e61	
 6716  0000f9a4  74656420	
 6716  0000f9a8  61742025	
 6716  0000f9ac  642e0a00	
 6717  0000f9b0          	.align 2
 6718  0000f9b0          	LC40_LF5:
 6719  0000f9b0  42756666	.ascii "Buffer is \'%s\'\n\000"
 6719  0000f9b4  65722069	
 6719  0000f9b8  73202725	
 6719  0000f9bc  73270a00	
 6720  0000f9c0          	.align 2
 6721  0000f9c0          	LC41_LF5:
 6722  0000f9c0  4e657720	.ascii "New address is 0x%x.\n\000"
 6722  0000f9c4  61646472	
 6722  0000f9c8  65737320	
 6722  0000f9cc  69732030	
 6722  0000f9d0  7825782e	
 6722  0000f9d4  0a00    	
 6723  0000f9d6          	.align 2
 6724  0000f9d8          	LC42_LF5:
 6725  0000f9d8  5365656b	.ascii "Seeking to %d and returning %d bytes!\n\000"
 6725  0000f9dc  696e6720	
 6725  0000f9e0  746f2025	
 6725  0000f9e4  6420616e	
 6725  0000f9e8  64207265	
 6725  0000f9ec  7475726e	
 6725  0000f9f0  696e6720	
 6725  0000f9f4  25642062	
 6725  0000f9f8  79746573	
 6725  0000f9fc  210a00  	
 6726  0000f9ff          	.text
 6727  000064ac          	.align 2
 6728  000064ac          	.proc _ProcessGetFromFile
 6729  000064ac          	.global _ProcessGetFromFile
 6730  000064ac          	_ProcessGetFromFile:
 6731                      ;  Function 'ProcessGetFromFile'; 216 bytes of locals, 11 regs to save.
 6732  000064ac  afbefffc	sw	-4(r29),r30; push fp
 6733  000064b0  001df020	add	r30,r0,r29; fp = sp
 6734  000064b4  afbffff8	sw	-8(r29),r31; push ret addr
 6735  000064b8  2fbd0110	subui	r29,r29,#272; alloc local storage
 6736  000064bc  afa20000	sw	0(r29),r2
 6737  000064c0  afa30004	sw	4(r29),r3
 6738  000064c4  afa40008	sw	8(r29),r4
 6739  000064c8  afa5000c	sw	12(r29),r5
 6740  000064cc  afa60010	sw	16(r29),r6
 6741  000064d0  afa70014	sw	20(r29),r7
 6742  000064d4  afa80018	sw	24(r29),r8
 6743  000064d8  afa9001c	sw	28(r29),r9
 6744  000064dc  afaa0020	sw	32(r29),r10
 6745  000064e0  afab0024	sw	36(r29),r11
 6746  000064e4  afac0028	sw	40(r29),r12
 6747  000064e8  8fca0000	lw	r10,(r30)
 6748  000064ec  8fc70008	lw	r7,8(r30)
 6749  000064f0  8fc2000c	lw	r2,12(r30)
 6750  000064f4  8fcb0004	lw	r11,4(r30)
 6751  000064f8  23c3ff28	addi	r3,r30,#-216
 6752  000064fc  afc3ff24	sw	-220(r30),r3
 6753  00006500  23bdfff0	addi	r29,r29,#-16
 6754  00006504  afaa0000	sw	(r29),r10
 6755  00006508  200c0000	addi	r12,r0,#0
 6756  0000650c  afac0004	sw	4(r29),r12
 6757  00006510  200c0001	addi	r12,r0,#1
 6758  00006514  afac0008	sw	8(r29),r12
 6759  00006518  0fffb8d8	jal	_FsSeek
 6760  0000651c  54000000	nop; not filled.
 6761  00006520  00014820	add	r9,r0,r1
 6762  00006524  50420001	slli	r2,r2,#0x1
 6763  00006528  23bd0010	addi	r29,r29,#16
 6764  0000652c  6c4100c8	sgtui	r1,r2,#200
 6765  00006530  10200008	beqz	r1,L243_LF5
 6766  00006534  54000000	nop; not filled.
 6767  00006538  200200c8	addi	r2,r0,#200
 6768  0000653c          	L243_LF5:
 6769  0000653c  23bdfff0	addi	r29,r29,#-16
 6770  00006540  afaa0000	sw	(r29),r10
 6771  00006544  afa30004	sw	4(r29),r3
 6772  00006548  afa20008	sw	8(r29),r2
 6773  0000654c  0fffb6ac	jal	_FsRead
 6774  00006550  54000000	nop; not filled.
 6775  00006554  00012820	add	r5,r0,r1
 6776  00006558  23bd0010	addi	r29,r29,#16
 6777  0000655c  70a10000	slei	r1,r5,#0
 6778  00006560  10200010	beqz	r1,L244_LF5
 6779  00006564  54000000	nop; not filled.
 6780  00006568  20010000	addi	r1,r0,#0
 6781  0000656c  08000594	j	L298_LF5
 6782  00006570  54000000	nop; not filled.
 6783  00006574          	L244_LF5:
 6784  00006574  23bdfff8	addi	r29,r29,#-8
 6785  00006578  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6786  0000657c  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 6787  00006580  afa20000	sw	(r29),r2
 6788  00006584  200c0066	addi	r12,r0,#102
 6789  00006588  afac0004	sw	4(r29),r12
 6790  0000658c  0fffd888	jal	_dindex
 6791  00006590  54000000	nop; not filled.
 6792  00006594  23bd0008	addi	r29,r29,#8
 6793  00006598  64210000	snei	r1,r1,#0
 6794  0000659c  1420002c	bnez	r1,L246_LF5
 6795  000065a0  54000000	nop; not filled.
 6796  000065a4  23bdfff8	addi	r29,r29,#-8
 6797  000065a8  afa20000	sw	(r29),r2
 6798  000065ac  200c002b	addi	r12,r0,#43
 6799  000065b0  afac0004	sw	4(r29),r12
 6800  000065b4  0fffd860	jal	_dindex
 6801  000065b8  54000000	nop; not filled.
 6802  000065bc  23bd0008	addi	r29,r29,#8
 6803  000065c0  64210000	snei	r1,r1,#0
 6804  000065c4  10200028	beqz	r1,L245_LF5
 6805  000065c8  54000000	nop; not filled.
 6806  000065cc          	L246_LF5:
 6807  000065cc  23bdfff0	addi	r29,r29,#-16
 6808  000065d0  3c0c0000	lhi	r12,((LC38_LF5)>>16)&0xffff
 6809  000065d4  258cf97c	addui	r12,r12,(LC38_LF5)&0xffff
 6810  000065d8  afac0000	sw	(r29),r12
 6811  000065dc  afa50004	sw	4(r29),r5
 6812  000065e0  afa90008	sw	8(r29),r9
 6813  000065e4  0c003d60	jal	_printf
 6814  000065e8  54000000	nop; not filled.
 6815  000065ec  23bd0010	addi	r29,r29,#16
 6816  000065f0          	L245_LF5:
 6817  000065f0  20a5ffff	addi	r5,r5,#-1
 6818  000065f4  23c1ff28	addi	r1,r30,#-216
 6819  000065f8  00251020	add	r2,r1,r5
 6820  000065fc  0800000c	j	L301_LF5
 6821  00006600  54000000	nop; not filled.
 6822  00006604          	L247_LF5:
 6823  00006604  2042ffff	addi	r2,r2,#-1
 6824  00006608  20a5ffff	addi	r5,r5,#-1
 6825  0000660c          	L301_LF5:
 6826  0000660c  90410000	lbu	r1,(r2)
 6827  00006610  6421000a	snei	r1,r1,#10
 6828  00006614  1420ffec	bnez	r1,L247_LF5
 6829  00006618  54000000	nop; not filled.
 6830  0000661c  23c1ff29	addi	r1,r30,#-215
 6831  00006620  00250820	add	r1,r1,r5
 6832  00006624  200c005a	addi	r12,r0,(#0x5a)&0xff
 6833  00006628  a02c0000	sb	(r1),r12
 6834  0000662c  23c1ff2a	addi	r1,r30,#-214
 6835  00006630  00250820	add	r1,r1,r5
 6836  00006634  200c0000	addi	r12,r0,(#0x0)&0xff
 6837  00006638  a02c0000	sb	(r1),r12
 6838  0000663c  23bdfff8	addi	r29,r29,#-8
 6839  00006640  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6840  00006644  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 6841  00006648  afa20000	sw	(r29),r2
 6842  0000664c  200c0066	addi	r12,r0,#102
 6843  00006650  afac0004	sw	4(r29),r12
 6844  00006654  0fffd7c0	jal	_dindex
 6845  00006658  54000000	nop; not filled.
 6846  0000665c  23bd0008	addi	r29,r29,#8
 6847  00006660  64210000	snei	r1,r1,#0
 6848  00006664  1420002c	bnez	r1,L252_LF5
 6849  00006668  54000000	nop; not filled.
 6850  0000666c  23bdfff8	addi	r29,r29,#-8
 6851  00006670  afa20000	sw	(r29),r2
 6852  00006674  200c002b	addi	r12,r0,#43
 6853  00006678  afac0004	sw	4(r29),r12
 6854  0000667c  0fffd798	jal	_dindex
 6855  00006680  54000000	nop; not filled.
 6856  00006684  23bd0008	addi	r29,r29,#8
 6857  00006688  64210000	snei	r1,r1,#0
 6858  0000668c  10200024	beqz	r1,L251_LF5
 6859  00006690  54000000	nop; not filled.
 6860  00006694          	L252_LF5:
 6861  00006694  23bdfff8	addi	r29,r29,#-8
 6862  00006698  3c0c0000	lhi	r12,((LC39_LF5)>>16)&0xffff
 6863  0000669c  258cf99c	addui	r12,r12,(LC39_LF5)&0xffff
 6864  000066a0  afac0000	sw	(r29),r12
 6865  000066a4  afa50004	sw	4(r29),r5
 6866  000066a8  0c003c9c	jal	_printf
 6867  000066ac  54000000	nop; not filled.
 6868  000066b0  23bd0008	addi	r29,r29,#8
 6869  000066b4          	L251_LF5:
 6870  000066b4  23bdfff8	addi	r29,r29,#-8
 6871  000066b8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6872  000066bc  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 6873  000066c0  afa20000	sw	(r29),r2
 6874  000066c4  200c0066	addi	r12,r0,#102
 6875  000066c8  afac0004	sw	4(r29),r12
 6876  000066cc  0fffd748	jal	_dindex
 6877  000066d0  54000000	nop; not filled.
 6878  000066d4  23bd0008	addi	r29,r29,#8
 6879  000066d8  64210000	snei	r1,r1,#0
 6880  000066dc  1420002c	bnez	r1,L254_LF5
 6881  000066e0  54000000	nop; not filled.
 6882  000066e4  23bdfff8	addi	r29,r29,#-8
 6883  000066e8  afa20000	sw	(r29),r2
 6884  000066ec  200c002b	addi	r12,r0,#43
 6885  000066f0  afac0004	sw	4(r29),r12
 6886  000066f4  0fffd720	jal	_dindex
 6887  000066f8  54000000	nop; not filled.
 6888  000066fc  23bd0008	addi	r29,r29,#8
 6889  00006700  64210000	snei	r1,r1,#0
 6890  00006704  10200028	beqz	r1,L253_LF5
 6891  00006708  54000000	nop; not filled.
 6892  0000670c          	L254_LF5:
 6893  0000670c  23bdfff8	addi	r29,r29,#-8
 6894  00006710  3c0c0000	lhi	r12,((LC40_LF5)>>16)&0xffff
 6895  00006714  258cf9b0	addui	r12,r12,(LC40_LF5)&0xffff
 6896  00006718  afac0000	sw	(r29),r12
 6897  0000671c  23c1ff28	addi	r1,r30,#-216
 6898  00006720  afa10004	sw	4(r29),r1
 6899  00006724  0c003c20	jal	_printf
 6900  00006728  54000000	nop; not filled.
 6901  0000672c  23bd0008	addi	r29,r29,#8
 6902  00006730          	L253_LF5:
 6903  00006730  20050000	addi	r5,r0,#0
 6904  00006734  3c080000	lhi	r8,((_debugstr)>>16)&0xffff
 6905  00006738  2508fd4a	addui	r8,r8,(_debugstr)&0xffff
 6906  0000673c          	L255_LF5:
 6907  0000673c  23bdfff8	addi	r29,r29,#-8
 6908  00006740  8fccff24	lw	r12,-220(r30)
 6909  00006744  afac0000	sw	(r29),r12
 6910  00006748  200c005a	addi	r12,r0,#90
 6911  0000674c  afac0004	sw	4(r29),r12
 6912  00006750  0fffd6c4	jal	_dindex
 6913  00006754  54000000	nop; not filled.
 6914  00006758  23bd0008	addi	r29,r29,#8
 6915  0000675c  64210000	snei	r1,r1,#0
 6916  00006760  102002ec	beqz	r1,L256_LF5
 6917  00006764  54000000	nop; not filled.
 6918  00006768  23bdfff8	addi	r29,r29,#-8
 6919  0000676c  8fccff24	lw	r12,-220(r30)
 6920  00006770  afac0000	sw	(r29),r12
 6921  00006774  200c003a	addi	r12,r0,#58
 6922  00006778  afac0004	sw	4(r29),r12
 6923  0000677c  0fffd698	jal	_dindex
 6924  00006780  54000000	nop; not filled.
 6925  00006784  23bd0008	addi	r29,r29,#8
 6926  00006788  64210000	snei	r1,r1,#0
 6927  0000678c  102002c0	beqz	r1,L256_LF5
 6928  00006790  54000000	nop; not filled.
 6929  00006794  8fc2ff24	lw	r2,-220(r30)
 6930  00006798  90410000	lbu	r1,(r2)
 6931  0000679c  6421003a	snei	r1,r1,#58
 6932  000067a0  102000b8	beqz	r1,L300_LF5
 6933  000067a4  54000000	nop; not filled.
 6934  000067a8  6ca10000	sgti	r1,r5,#0
 6935  000067ac  142002a0	bnez	r1,L256_LF5
 6936  000067b0  54000000	nop; not filled.
 6937  000067b4  23bdfff0	addi	r29,r29,#-16
 6938  000067b8  afa20000	sw	(r29),r2
 6939  000067bc  23c1ff24	addi	r1,r30,#-220
 6940  000067c0  afa10004	sw	4(r29),r1
 6941  000067c4  200c0010	addi	r12,r0,#16
 6942  000067c8  afac0008	sw	8(r29),r12
 6943  000067cc  0fffd7d0	jal	_dstrtol
 6944  000067d0  54000000	nop; not filled.
 6945  000067d4  ace10000	sw	(r7),r1
 6946  000067d8  afa80000	sw	(r29),r8
 6947  000067dc  200c0066	addi	r12,r0,#102
 6948  000067e0  afac0004	sw	4(r29),r12
 6949  000067e4  0fffd630	jal	_dindex
 6950  000067e8  54000000	nop; not filled.
 6951  000067ec  23bd0010	addi	r29,r29,#16
 6952  000067f0  64210000	snei	r1,r1,#0
 6953  000067f4  1420002c	bnez	r1,L262_LF5
 6954  000067f8  54000000	nop; not filled.
 6955  000067fc  23bdfff8	addi	r29,r29,#-8
 6956  00006800  afa80000	sw	(r29),r8
 6957  00006804  200c002b	addi	r12,r0,#43
 6958  00006808  afac0004	sw	4(r29),r12
 6959  0000680c  0fffd608	jal	_dindex
 6960  00006810  54000000	nop; not filled.
 6961  00006814  23bd0008	addi	r29,r29,#8
 6962  00006818  64210000	snei	r1,r1,#0
 6963  0000681c  10200028	beqz	r1,L259_LF5
 6964  00006820  54000000	nop; not filled.
 6965  00006824          	L262_LF5:
 6966  00006824  23bdfff8	addi	r29,r29,#-8
 6967  00006828  3c0c0000	lhi	r12,((LC41_LF5)>>16)&0xffff
 6968  0000682c  258cf9c0	addui	r12,r12,(LC41_LF5)&0xffff
 6969  00006830  afac0000	sw	(r29),r12
 6970  00006834  8ce10000	lw	r1,(r7)
 6971  00006838  afa10004	sw	4(r29),r1
 6972  0000683c  0c003b08	jal	_printf
 6973  00006840  54000000	nop; not filled.
 6974  00006844  23bd0008	addi	r29,r29,#8
 6975  00006848          	L259_LF5:
 6976  00006848  8fc1ff24	lw	r1,-220(r30)
 6977  0000684c  90210000	lbu	r1,(r1)
 6978  00006850  6421003a	snei	r1,r1,#58
 6979  00006854  142001f8	bnez	r1,L256_LF5
 6980  00006858  54000000	nop; not filled.
 6981  0000685c          	L300_LF5:
 6982  0000685c  8fc1ff24	lw	r1,-220(r30)
 6983  00006860  20210001	addi	r1,r1,#1
 6984  00006864  afc1ff24	sw	-220(r30),r1
 6985  00006868  00ab3020	add	r6,r5,r11
 6986  0000686c          	L266_LF5:
 6987  0000686c  8fc1ff24	lw	r1,-220(r30)
 6988  00006870  08000010	j	L302_LF5
 6989  00006874  54000000	nop; not filled.
 6990  00006878          	L269_LF5:
 6991  00006878  8fc1ff24	lw	r1,-220(r30)
 6992  0000687c  20210001	addi	r1,r1,#1
 6993  00006880  afc1ff24	sw	-220(r30),r1
 6994  00006884          	L302_LF5:
 6995  00006884  903f0000	lbu	r31,(r1)
 6996  00006888  63e10020	seqi	r1,r31,#32
 6997  0000688c  1420ffe8	bnez	r1,L269_LF5
 6998  00006890  54000000	nop; not filled.
 6999  00006894  63e10009	seqi	r1,r31,#9
 7000  00006898  1420ffdc	bnez	r1,L269_LF5
 7001  0000689c  54000000	nop; not filled.
 7002  000068a0  8fc2ff24	lw	r2,-220(r30)
 7003  000068a4  805f0000	lb	r31,(r2)
 7004  000068a8  33e300ff	andi	r3,r31,#0x00ff
 7005  000068ac  6061000a	seqi	r1,r3,#10
 7006  000068b0  10200014	beqz	r1,L271_LF5
 7007  000068b4  54000000	nop; not filled.
 7008  000068b8  20410001	addi	r1,r2,#1
 7009  000068bc  afc1ff24	sw	-220(r30),r1
 7010  000068c0  0bfffe78	j	L255_LF5
 7011  000068c4  54000000	nop; not filled.
 7012  000068c8          	L271_LF5:
 7013  000068c8  20020000	addi	r2,r0,#0
 7014  000068cc  23e1ffd0	addi	r1,r31,#-48
 7015  000068d0  302100ff	andi	r1,r1,#0x00ff
 7016  000068d4  70210009	sleui	r1,r1,#9
 7017  000068d8  14200024	bnez	r1,L277_LF5
 7018  000068dc  54000000	nop; not filled.
 7019  000068e0  23e1ff9f	addi	r1,r31,#-97
 7020  000068e4  302100ff	andi	r1,r1,#0x00ff
 7021  000068e8  70210005	sleui	r1,r1,#5
 7022  000068ec  14200010	bnez	r1,L277_LF5
 7023  000068f0  54000000	nop; not filled.
 7024  000068f4  64610041	snei	r1,r3,#65
 7025  000068f8  14200008	bnez	r1,L276_LF5
 7026  000068fc  54000000	nop; not filled.
 7027  00006900          	L277_LF5:
 7028  00006900  20020001	addi	r2,r0,#1
 7029  00006904          	L276_LF5:
 7030  00006904  64410000	snei	r1,r2,#0
 7031  00006908  1020fe30	beqz	r1,L255_LF5
 7032  0000690c  54000000	nop; not filled.
 7033  00006910  8fc1ff24	lw	r1,-220(r30)
 7034  00006914  80220001	lb	r2,1(r1)
 7035  00006918  20030000	addi	r3,r0,#0
 7036  0000691c  2041ffd0	addi	r1,r2,#-48
 7037  00006920  302100ff	andi	r1,r1,#0x00ff
 7038  00006924  70210009	sleui	r1,r1,#9
 7039  00006928  14200028	bnez	r1,L280_LF5
 7040  0000692c  54000000	nop; not filled.
 7041  00006930  2041ff9f	addi	r1,r2,#-97
 7042  00006934  302100ff	andi	r1,r1,#0x00ff
 7043  00006938  70210005	sleui	r1,r1,#5
 7044  0000693c  14200014	bnez	r1,L280_LF5
 7045  00006940  54000000	nop; not filled.
 7046  00006944  304100ff	andi	r1,r2,#0x00ff
 7047  00006948  64210041	snei	r1,r1,#65
 7048  0000694c  14200008	bnez	r1,L279_LF5
 7049  00006950  54000000	nop; not filled.
 7050  00006954          	L280_LF5:
 7051  00006954  20030001	addi	r3,r0,#1
 7052  00006958          	L279_LF5:
 7053  00006958  64610000	snei	r1,r3,#0
 7054  0000695c  1020fddc	beqz	r1,L255_LF5
 7055  00006960  54000000	nop; not filled.
 7056  00006964  8fc1ff24	lw	r1,-220(r30)
 7057  00006968  90220000	lbu	r2,(r1)
 7058  0000696c  00021820	add	r3,r0,r2
 7059  00006970  205fffd0	addi	r31,r2,#-48
 7060  00006974  73e10009	sleui	r1,r31,#9
 7061  00006978  10200010	beqz	r1,L282_LF5
 7062  0000697c  54000000	nop; not filled.
 7063  00006980  001f2020	add	r4,r0,r31
 7064  00006984  08000038	j	L281_LF5
 7065  00006988  54000000	nop; not filled.
 7066  0000698c          	L282_LF5:
 7067  0000698c  2041ff9f	addi	r1,r2,#-97
 7068  00006990  70210005	sleui	r1,r1,#5
 7069  00006994  10200010	beqz	r1,L284_LF5
 7070  00006998  54000000	nop; not filled.
 7071  0000699c  2044ffa9	addi	r4,r2,#-87
 7072  000069a0  0800001c	j	L281_LF5
 7073  000069a4  54000000	nop; not filled.
 7074  000069a8          	L284_LF5:
 7075  000069a8  2061ffbf	addi	r1,r3,#-65
 7076  000069ac  70210005	sleui	r1,r1,#5
 7077  000069b0  20040000	addi	r4,r0,#0
 7078  000069b4  10200008	beqz	r1,L281_LF5
 7079  000069b8  54000000	nop; not filled.
 7080  000069bc  2064ffc9	addi	r4,r3,#-55
 7081  000069c0          	L281_LF5:
 7082  000069c0  8fc1ff24	lw	r1,-220(r30)
 7083  000069c4  90220001	lbu	r2,1(r1)
 7084  000069c8  00021820	add	r3,r0,r2
 7085  000069cc  205fffd0	addi	r31,r2,#-48
 7086  000069d0  73e10009	sleui	r1,r31,#9
 7087  000069d4  10200010	beqz	r1,L289_LF5
 7088  000069d8  54000000	nop; not filled.
 7089  000069dc  001f1020	add	r2,r0,r31
 7090  000069e0  08000038	j	L288_LF5
 7091  000069e4  54000000	nop; not filled.
 7092  000069e8          	L289_LF5:
 7093  000069e8  2041ff9f	addi	r1,r2,#-97
 7094  000069ec  70210005	sleui	r1,r1,#5
 7095  000069f0  10200010	beqz	r1,L291_LF5
 7096  000069f4  54000000	nop; not filled.
 7097  000069f8  2042ffa9	addi	r2,r2,#-87
 7098  000069fc  0800001c	j	L288_LF5
 7099  00006a00  54000000	nop; not filled.
 7100  00006a04          	L291_LF5:
 7101  00006a04  2061ffbf	addi	r1,r3,#-65
 7102  00006a08  70210005	sleui	r1,r1,#5
 7103  00006a0c  20020000	addi	r2,r0,#0
 7104  00006a10  10200008	beqz	r1,L288_LF5
 7105  00006a14  54000000	nop; not filled.
 7106  00006a18  2062ffc9	addi	r2,r3,#-55
 7107  00006a1c          	L288_LF5:
 7108  00006a1c  50810004	slli	r1,r4,#0x4
 7109  00006a20  00220820	add	r1,r1,r2
 7110  00006a24  a0c10000	sb	(r6),r1
 7111  00006a28  20c60001	addi	r6,r6,#1
 7112  00006a2c  20a50001	addi	r5,r5,#1
 7113  00006a30  8fc1ff24	lw	r1,-220(r30)
 7114  00006a34  20210002	addi	r1,r1,#2
 7115  00006a38  afc1ff24	sw	-220(r30),r1
 7116  00006a3c  8ce10000	lw	r1,(r7)
 7117  00006a40  20210001	addi	r1,r1,#1
 7118  00006a44  ace10000	sw	(r7),r1
 7119  00006a48  0bfffe20	j	L266_LF5
 7120  00006a4c  54000000	nop; not filled.
 7121  00006a50          	L256_LF5:
 7122  00006a50  23bdfff0	addi	r29,r29,#-16
 7123  00006a54  afaa0000	sw	(r29),r10
 7124  00006a58  8fc1ff24	lw	r1,-220(r30)
 7125  00006a5c  00290820	add	r1,r1,r9
 7126  00006a60  23c3ff28	addi	r3,r30,#-216
 7127  00006a64  00230822	sub	r1,r1,r3
 7128  00006a68  afa10004	sw	4(r29),r1
 7129  00006a6c  200c0000	addi	r12,r0,#0
 7130  00006a70  afac0008	sw	8(r29),r12
 7131  00006a74  0fffb37c	jal	_FsSeek
 7132  00006a78  54000000	nop; not filled.
 7133  00006a7c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7134  00006a80  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 7135  00006a84  afa20000	sw	(r29),r2
 7136  00006a88  200c0066	addi	r12,r0,#102
 7137  00006a8c  afac0004	sw	4(r29),r12
 7138  00006a90  0fffd384	jal	_dindex
 7139  00006a94  54000000	nop; not filled.
 7140  00006a98  23bd0010	addi	r29,r29,#16
 7141  00006a9c  64210000	snei	r1,r1,#0
 7142  00006aa0  1420002c	bnez	r1,L297_LF5
 7143  00006aa4  54000000	nop; not filled.
 7144  00006aa8  23bdfff8	addi	r29,r29,#-8
 7145  00006aac  afa20000	sw	(r29),r2
 7146  00006ab0  200c002b	addi	r12,r0,#43
 7147  00006ab4  afac0004	sw	4(r29),r12
 7148  00006ab8  0fffd35c	jal	_dindex
 7149  00006abc  54000000	nop; not filled.
 7150  00006ac0  23bd0008	addi	r29,r29,#8
 7151  00006ac4  64210000	snei	r1,r1,#0
 7152  00006ac8  10200034	beqz	r1,L296_LF5
 7153  00006acc  54000000	nop; not filled.
 7154  00006ad0          	L297_LF5:
 7155  00006ad0  23bdfff0	addi	r29,r29,#-16
 7156  00006ad4  3c0c0000	lhi	r12,((LC42_LF5)>>16)&0xffff
 7157  00006ad8  258cf9d8	addui	r12,r12,(LC42_LF5)&0xffff
 7158  00006adc  afac0000	sw	(r29),r12
 7159  00006ae0  8fc1ff24	lw	r1,-220(r30)
 7160  00006ae4  00290820	add	r1,r1,r9
 7161  00006ae8  00230822	sub	r1,r1,r3
 7162  00006aec  afa10004	sw	4(r29),r1
 7163  00006af0  afa50008	sw	8(r29),r5
 7164  00006af4  0c003850	jal	_printf
 7165  00006af8  54000000	nop; not filled.
 7166  00006afc  23bd0010	addi	r29,r29,#16
 7167  00006b00          	L296_LF5:
 7168  00006b00  00050820	add	r1,r0,r5
 7169  00006b04          	L298_LF5:
 7170  00006b04  8fa20000	lw	r2,0(r29)
 7171  00006b08  8fa30004	lw	r3,4(r29)
 7172  00006b0c  8fa40008	lw	r4,8(r29)
 7173  00006b10  8fa5000c	lw	r5,12(r29)
 7174  00006b14  8fa60010	lw	r6,16(r29)
 7175  00006b18  8fa70014	lw	r7,20(r29)
 7176  00006b1c  8fa80018	lw	r8,24(r29)
 7177  00006b20  8fa9001c	lw	r9,28(r29)
 7178  00006b24  8faa0020	lw	r10,32(r29)
 7179  00006b28  8fab0024	lw	r11,36(r29)
 7180  00006b2c  8fac0028	lw	r12,40(r29)
 7181  00006b30  8fdffff8	lw	r31,-8(r30)
 7182  00006b34  001ee820	add	r29,r0,r30
 7183  00006b38  8fdefffc	lw	r30,-4(r30)
 7184  00006b3c  4be00000	jr	r31
 7185  00006b40  54000000	nop
 7186  00006b44          	.endproc _ProcessGetFromFile
 7187  00006b44          	.align 2
 7188  00006b44          	.proc _GetPID
 7189  00006b44          	.global _GetPID
 7190  00006b44          	_GetPID:
 7191                      ;  Function 'GetPID'; 0 bytes of locals, 1 regs to save.
 7192  00006b44  afbefffc	sw	-4(r29),r30; push fp
 7193  00006b48  001df020	add	r30,r0,r29; fp = sp
 7194  00006b4c  afbffff8	sw	-8(r29),r31; push ret addr
 7195  00006b50  2fbd0010	subui	r29,r29,#16; alloc local storage
 7196  00006b54  afa20000	sw	0(r29),r2
 7197  00006b58  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 7198  00006b5c  2421fe14	addui	r1,r1,(_currentPCB)&0xffff
 7199  00006b60  8c210000	lw	r1,(r1)
 7200  00006b64  3c1f0000	lhi	r31,((_pcbs_LF5)>>16)&0xffff
 7201  00006b68  27fffe48	addui	r31,r31,(_pcbs_LF5)&0xffff
 7202  00006b6c  003f1022	sub	r2,r1,r31
 7203  00006b70  3c01a4fa	lhi	r1,#-23302
 7204  00006b74  24214fa5	addui	r1,r1,#20389
 7205  00006b78  00400035	movi2fp	f0,r2
 7206  00006b7c  00200835	movi2fp	f1,r1
 7207  00006b80  0401000e	mult	f0,f0,f1
 7208  00006b84  00000834	movfp2i	r1,f0
 7209  00006b88  5c210002	srai	r1,r1,#0x2
 7210  00006b8c  8fa20000	lw	r2,0(r29)
 7211  00006b90  8fdffff8	lw	r31,-8(r30)
 7212  00006b94  001ee820	add	r29,r0,r30
 7213  00006b98  8fdefffc	lw	r30,-4(r30)
 7214  00006b9c  4be00000	jr	r31
 7215  00006ba0  54000000	nop
 7216  00006ba4          	.endproc _GetPID
 7217  00006ba4          	.align 2
 7218  00006ba4          	.proc _GetSystemTime
 7219  00006ba4          	.global _GetSystemTime
 7220  00006ba4          	_GetSystemTime:
 7221                      ;  Function 'GetSystemTime'; 0 bytes of locals, 0 regs to save.
 7222  00006ba4  afbefffc	sw	-4(r29),r30; push fp
 7223  00006ba8  001df020	add	r30,r0,r29; fp = sp
 7224  00006bac  afbffff8	sw	-8(r29),r31; push ret addr
 7225  00006bb0  2fbd0008	subui	r29,r29,#8; alloc local storage
 7226  00006bb4  3c010000	lhi	r1,((__time)>>16)&0xffff
 7227  00006bb8  2421f424	addui	r1,r1,(__time)&0xffff
 7228  00006bbc  8c210000	lw	r1,(r1)
 7229  00006bc0  8fdffff8	lw	r31,-8(r30)
 7230  00006bc4  001ee820	add	r29,r0,r30
 7231  00006bc8  8fdefffc	lw	r30,-4(r30)
 7232  00006bcc  4be00000	jr	r31
 7233  00006bd0  54000000	nop
 7234  00006bd4          	.endproc _GetSystemTime
 7235  00006bd4          	.data
 7236  0000f9ff          	.align 2
 7237  0000fa00          	_temppcb64_LF5:
 7238  0000fa00          	.space 180
 7239  0000fab4          	.align 2
 7240  0000fab4          	LC43_LF5:
 7241  0000fab4  476f7420	.ascii "Got %d arguments.\n\000"
 7241  0000fab8  25642061	
 7241  0000fabc  7267756d	
 7241  0000fac0  656e7473	
 7241  0000fac4  2e0a00  	
 7242  0000fac7          	.align 2
 7243  0000fac8          	LC44_LF5:
 7244  0000fac8  41766169	.ascii "Available memory: 0x%x -> 0x%x.\n\000"
 7244  0000facc  6c61626c	
 7244  0000fad0  65206d65	
 7244  0000fad4  6d6f7279	
 7244  0000fad8  3a203078	
 7244  0000fadc  2578202d	
 7244  0000fae0  3e203078	
 7244  0000fae4  25782e0a	
 7244  0000fae8  00      	
 7245  0000fae9          	.align 2
 7246  0000faec          	LC45_LF5:
 7247  0000faec  41726775	.ascii "Argument count is %d.\n\000"
 7247  0000faf0  6d656e74	
 7247  0000faf4  20636f75	
 7247  0000faf8  6e742069	
 7247  0000fafc  73202564	
 7247  0000fb00  2e0a00  	
 7248  0000fb03          	.align 2
 7249  0000fb04          	LC46_LF5:
 7250  0000fb04  41726775	.ascii "Argument %d is %s.\n\000"
 7250  0000fb08  6d656e74	
 7250  0000fb0c  20256420	
 7250  0000fb10  69732025	
 7250  0000fb14  732e0a00	
 7251  0000fb18          	.align 2
 7252  0000fb18          	LC47_LF5:
 7253  0000fb18  436f6e76	.ascii "Converted %s to %d=%s\n\000"
 7253  0000fb1c  65727465	
 7253  0000fb20  64202573	
 7253  0000fb24  20746f20	
 7253  0000fb28  25643d25	
 7253  0000fb2c  730a00  	
 7254  0000fb2f          	_buf65_LF5:
 7255  0000fb2f          	.space 200
 7256  0000fbf7          	.align 2
 7257  0000fbf8          	LC48_LF5:
 7258  0000fbf8  25303878	.ascii "%08x: %02x%02x%02x%02x\n\000"
 7258  0000fbfc  3a202530	
 7258  0000fc00  32782530	
 7258  0000fc04  32782530	
 7258  0000fc08  32782530	
 7258  0000fc0c  32780a00	
 7259  0000fc10          	.align 2
 7260  0000fc10          	LC49_LF5:
 7261  0000fc10  4f707469	.ascii "Option %s not recognized.\n\000"
 7261  0000fc14  6f6e2025	
 7261  0000fc18  73206e6f	
 7261  0000fc1c  74207265	
 7261  0000fc20  636f676e	
 7261  0000fc24  697a6564	
 7261  0000fc28  2e0a00  	
 7262  0000fc2b          	.align 2
 7263  0000fc2c          	LC50_LF5:
 7264  0000fc2c  41626f75	.ascii "About to initialize queues.\n\000"
 7264  0000fc30  7420746f	
 7264  0000fc34  20696e69	
 7264  0000fc38  7469616c	
 7264  0000fc3c  697a6520	
 7264  0000fc40  71756575	
 7264  0000fc44  65732e0a	
 7264  0000fc48  00      	
 7265  0000fc49          	.align 2
 7266  0000fc4c          	LC51_LF5:
 7267  0000fc4c  41667465	.ascii "After initializing queues.\n\000"
 7267  0000fc50  7220696e	
 7267  0000fc54  69746961	
 7267  0000fc58  6c697a69	
 7267  0000fc5c  6e672071	
 7267  0000fc60  75657565	
 7267  0000fc64  732e0a00	
 7268  0000fc68          	.align 2
 7269  0000fc68          	LC52_LF5:
 7270  0000fc68  41667465	.ascii "After initializing memory.\n\000"
 7270  0000fc6c  7220696e	
 7270  0000fc70  69746961	
 7270  0000fc74  6c697a69	
 7270  0000fc78  6e67206d	
 7270  0000fc7c  656d6f72	
 7270  0000fc80  792e0a00	
 7271  0000fc84          	.align 2
 7272  0000fc84          	LC53_LF5:
 7273  0000fc84  41667465	.ascii "After initializing processes.\n\000"
 7273  0000fc88  7220696e	
 7273  0000fc8c  69746961	
 7273  0000fc90  6c697a69	
 7273  0000fc94  6e672070	
 7273  0000fc98  726f6365	
 7273  0000fc9c  73736573	
 7273  0000fca0  2e0a00  	
 7274  0000fca3          	.align 2
 7275  0000fca4          	LC54_LF5:
 7276  0000fca4  41667465	.ascii "After initializing keyboard.\n\000"
 7276  0000fca8  7220696e	
 7276  0000fcac  69746961	
 7276  0000fcb0  6c697a69	
 7276  0000fcb4  6e67206b	
 7276  0000fcb8  6579626f	
 7276  0000fcbc  6172642e	
 7276  0000fcc0  0a00    	
 7277  0000fcc2          	.align 2
 7278  0000fcc4          	LC55_LF5:
 7279  0000fcc4  766d00  	.ascii "vm\000"
 7280  0000fcc7          	.align 2
 7281  0000fcc8          	LC56_LF5:
 7282  0000fcc8  564d2044	.ascii "VM Descriptor is %d\n\000"
 7282  0000fccc  65736372	
 7282  0000fcd0  6970746f	
 7282  0000fcd4  72206973	
 7282  0000fcd8  2025640a	
 7282  0000fcdc  00      	
 7283  0000fcdd          	.align 2
 7284  0000fce0          	LC57_LF5:
 7285  0000fce0  43726561	.ascii "Created processes - about to set timer quantum.\n\000"
 7285  0000fce4  74656420	
 7285  0000fce8  70726f63	
 7285  0000fcec  65737365	
 7285  0000fcf0  73202d20	
 7285  0000fcf4  61626f75	
 7285  0000fcf8  7420746f	
 7285  0000fcfc  20736574	
 7285  0000fd00  2074696d	
 7285  0000fd04  65722071	
 7285  0000fd08  75616e74	
 7285  0000fd0c  756d2e0a	
 7285  0000fd10  00      	
 7286  0000fd11          	.align 2
 7287  0000fd14          	LC58_LF5:
 7288  0000fd14  53657420	.ascii "Set timer quantum to %d, about to run first process.\n\000"
 7288  0000fd18  74696d65	
 7288  0000fd1c  72207175	
 7288  0000fd20  616e7475	
 7288  0000fd24  6d20746f	
 7288  0000fd28  2025642c	
 7288  0000fd2c  2061626f	
 7288  0000fd30  75742074	
 7288  0000fd34  6f207275	
 7288  0000fd38  6e206669	
 7288  0000fd3c  72737420	
 7288  0000fd40  70726f63	
 7288  0000fd44  6573732e	
 7288  0000fd48  0a00    	
 7289  0000fd4a          	.text
 7290  00006bd4          	.align 2
 7291  00006bd4          	.proc _main
 7292  00006bd4          	.global _main
 7293  00006bd4          	_main:
 7294                      ;  Function 'main'; 144 bytes of locals, 0 regs to save.
 7295  00006bd4  afbefffc	sw	-4(r29),r30; push fp
 7296  00006bd8  001df020	add	r30,r0,r29; fp = sp
 7297  00006bdc  afbffff8	sw	-8(r29),r31; push ret addr
 7298  00006be0  2fbd0098	subui	r29,r29,#152; alloc local storage
 7299  00006be4  8fcc0000	lw	r12,(r30)
 7300  00006be8  0c0036c4	jal	___main
 7301  00006bec  54000000	nop; not filled.
 7302  00006bf0  20100000	addi	r16,r0,#0
 7303  00006bf4  3c010000	lhi	r1,((_debugstr)>>16)&0xffff
 7304  00006bf8  2421fd4a	addui	r1,r1,(_debugstr)&0xffff
 7305  00006bfc  20130000	addi	r19,r0,(#0x0)&0xff
 7306  00006c00  a0330000	sb	(r1),r19
 7307  00006c04  23bdfff8	addi	r29,r29,#-8
 7308  00006c08  3c130000	lhi	r19,((LC43_LF5)>>16)&0xffff
 7309  00006c0c  2673fab4	addui	r19,r19,(LC43_LF5)&0xffff
 7310  00006c10  afb30000	sw	(r29),r19
 7311  00006c14  afac0004	sw	4(r29),r12
 7312  00006c18  0c00372c	jal	_printf
 7313  00006c1c  54000000	nop; not filled.
 7314  00006c20  0fffbde8	jal	_MemoryGetSize
 7315  00006c24  54000000	nop; not filled.
 7316  00006c28  23bdfff8	addi	r29,r29,#-8
 7317  00006c2c  3c130000	lhi	r19,((LC44_LF5)>>16)&0xffff
 7318  00006c30  2673fac8	addui	r19,r19,(LC44_LF5)&0xffff
 7319  00006c34  afb30000	sw	(r29),r19
 7320  00006c38  3c020001	lhi	r2,((_lastosaddress)>>16)&0xffff
 7321  00006c3c  2442331c	addui	r2,r2,(_lastosaddress)&0xffff
 7322  00006c40  8c420000	lw	r2,(r2)
 7323  00006c44  afa20004	sw	4(r29),r2
 7324  00006c48  afa10008	sw	8(r29),r1
 7325  00006c4c  0c0036f8	jal	_printf
 7326  00006c50  54000000	nop; not filled.
 7327  00006c54  3c130000	lhi	r19,((LC45_LF5)>>16)&0xffff
 7328  00006c58  2673faec	addui	r19,r19,(LC45_LF5)&0xffff
 7329  00006c5c  afb30000	sw	(r29),r19
 7330  00006c60  afac0004	sw	4(r29),r12
 7331  00006c64  0c0036e0	jal	_printf
 7332  00006c68  54000000	nop; not filled.
 7333  00006c6c  20090000	addi	r9,r0,#0
 7334  00006c70  23bd0010	addi	r29,r29,#16
 7335  00006c74  020c082a	slt	r1,r16,r12
 7336  00006c78  10200044	beqz	r1,L309_LF5
 7337  00006c7c  54000000	nop; not filled.
 7338  00006c80  8fc20004	lw	r2,4(r30)
 7339  00006c84          	L311_LF5:
 7340  00006c84  23bdfff0	addi	r29,r29,#-16
 7341  00006c88  3c130000	lhi	r19,((LC46_LF5)>>16)&0xffff
 7342  00006c8c  2673fb04	addui	r19,r19,(LC46_LF5)&0xffff
 7343  00006c90  afb30000	sw	(r29),r19
 7344  00006c94  afa90004	sw	4(r29),r9
 7345  00006c98  8c530000	lw	r19,(r2)
 7346  00006c9c  afb30008	sw	8(r29),r19
 7347  00006ca0  0c0036a4	jal	_printf
 7348  00006ca4  54000000	nop; not filled.
 7349  00006ca8  23bd0010	addi	r29,r29,#16
 7350  00006cac  20420004	addi	r2,r2,#4
 7351  00006cb0  21290001	addi	r9,r9,#1
 7352  00006cb4  012c082a	slt	r1,r9,r12
 7353  00006cb8  1420ffc8	bnez	r1,L311_LF5
 7354  00006cbc  54000000	nop; not filled.
 7355  00006cc0          	L309_LF5:
 7356  00006cc0  0fffb7bc	jal	_FsModuleInit
 7357  00006cc4  54000000	nop; not filled.
 7358  00006cc8  20090000	addi	r9,r0,#0
 7359  00006ccc  012c082a	slt	r1,r9,r12
 7360  00006cd0  1020032c	beqz	r1,L314_LF5
 7361  00006cd4  54000000	nop; not filled.
 7362  00006cd8  23cdff80	addi	r13,r30,#-128
 7363  00006cdc  23ceff68	addi	r14,r30,#-152
 7364  00006ce0  3c0f0000	lhi	r15,((_buf65_LF5)>>16)&0xffff
 7365  00006ce4  25effb2f	addui	r15,r15,(_buf65_LF5)&0xffff
 7366  00006ce8  21f20001	addi	r18,r15,#1
 7367  00006cec  21f10002	addi	r17,r15,#2
 7368  00006cf0  8fc80004	lw	r8,4(r30)
 7369  00006cf4          	L316_LF5:
 7370  00006cf4  8d020000	lw	r2,(r8)
 7371  00006cf8  90410000	lbu	r1,(r2)
 7372  00006cfc  6021002d	seqi	r1,r1,#45
 7373  00006d00  102002e8	beqz	r1,L315_LF5
 7374  00006d04  54000000	nop; not filled.
 7375  00006d08  90420001	lbu	r2,1(r2)
 7376  00006d0c  60410066	seqi	r1,r2,#102
 7377  00006d10  142000e0	bnez	r1,L321_LF5
 7378  00006d14  54000000	nop; not filled.
 7379  00006d18  6c410066	sgti	r1,r2,#102
 7380  00006d1c  14200018	bnez	r1,L333_LF5
 7381  00006d20  54000000	nop; not filled.
 7382  00006d24  60410044	seqi	r1,r2,#68
 7383  00006d28  1020029c	beqz	r1,L331_LF5
 7384  00006d2c  54000000	nop; not filled.
 7385  00006d30  08000024	j	L319_LF5
 7386  00006d34  54000000	nop; not filled.
 7387  00006d38          	L333_LF5:
 7388  00006d38  60410069	seqi	r1,r2,#105
 7389  00006d3c  14200048	bnez	r1,L320_LF5
 7390  00006d40  54000000	nop; not filled.
 7391  00006d44  60410075	seqi	r1,r2,#117
 7392  00006d48  1020027c	beqz	r1,L331_LF5
 7393  00006d4c  54000000	nop; not filled.
 7394  00006d50  08000260	j	L330_LF5
 7395  00006d54  54000000	nop; not filled.
 7396  00006d58          	L319_LF5:
 7397  00006d58  23bdfff8	addi	r29,r29,#-8
 7398  00006d5c  3c130000	lhi	r19,((_debugstr)>>16)&0xffff
 7399  00006d60  2673fd4a	addui	r19,r19,(_debugstr)&0xffff
 7400  00006d64  afb30000	sw	(r29),r19
 7401  00006d68  21080004	addi	r8,r8,#4
 7402  00006d6c  21290001	addi	r9,r9,#1
 7403  00006d70  8d010000	lw	r1,(r8)
 7404  00006d74  afa10004	sw	4(r29),r1
 7405  00006d78  0fffcbdc	jal	_dstrcpy
 7406  00006d7c  54000000	nop; not filled.
 7407  00006d80  08000264	j	L357_LF5
 7408  00006d84  54000000	nop; not filled.
 7409  00006d88          	L320_LF5:
 7410  00006d88  23bdfff0	addi	r29,r29,#-16
 7411  00006d8c  21080004	addi	r8,r8,#4
 7412  00006d90  21290001	addi	r9,r9,#1
 7413  00006d94  8d130000	lw	r19,(r8)
 7414  00006d98  afb30000	sw	(r29),r19
 7415  00006d9c  20130000	addi	r19,r0,#0
 7416  00006da0  afb30004	sw	4(r29),r19
 7417  00006da4  afb30008	sw	8(r29),r19
 7418  00006da8  0fffd1f4	jal	_dstrtol
 7419  00006dac  54000000	nop; not filled.
 7420  00006db0  00011820	add	r3,r0,r1
 7421  00006db4  afa10000	sw	(r29),r1
 7422  00006db8  afad0004	sw	4(r29),r13
 7423  00006dbc  0fffd0d4	jal	_ditoa
 7424  00006dc0  54000000	nop; not filled.
 7425  00006dc4  3c130000	lhi	r19,((LC47_LF5)>>16)&0xffff
 7426  00006dc8  2673fb18	addui	r19,r19,(LC47_LF5)&0xffff
 7427  00006dcc  afb30000	sw	(r29),r19
 7428  00006dd0  8d010000	lw	r1,(r8)
 7429  00006dd4  afa10004	sw	4(r29),r1
 7430  00006dd8  afa30008	sw	8(r29),r3
 7431  00006ddc  afad000c	sw	12(r29),r13
 7432  00006de0  0c003564	jal	_printf
 7433  00006de4  54000000	nop; not filled.
 7434  00006de8  23bd0010	addi	r29,r29,#16
 7435  00006dec  080001fc	j	L315_LF5
 7436  00006df0  54000000	nop; not filled.
 7437  00006df4          	L321_LF5:
 7438  00006df4  20130000	addi	r19,r0,#0
 7439  00006df8  afd3ff68	sw	-152(r30),r19
 7440  00006dfc  23bdffe8	addi	r29,r29,#-24
 7441  00006e00  21080004	addi	r8,r8,#4
 7442  00006e04  21290001	addi	r9,r9,#1
 7443  00006e08  8d130000	lw	r19,(r8)
 7444  00006e0c  afb30000	sw	(r29),r19
 7445  00006e10  23c1ff7c	addi	r1,r30,#-132
 7446  00006e14  afa10004	sw	4(r29),r1
 7447  00006e18  23c1ff78	addi	r1,r30,#-136
 7448  00006e1c  afa10008	sw	8(r29),r1
 7449  00006e20  23c1ff74	addi	r1,r30,#-140
 7450  00006e24  afa1000c	sw	12(r29),r1
 7451  00006e28  23c1ff70	addi	r1,r30,#-144
 7452  00006e2c  afa10010	sw	16(r29),r1
 7453  00006e30  23c1ff6c	addi	r1,r30,#-148
 7454  00006e34  afa10014	sw	20(r29),r1
 7455  00006e38  0ffff210	jal	_ProcessGetCodeInfo
 7456  00006e3c  54000000	nop; not filled.
 7457  00006e40  00015020	add	r10,r0,r1
 7458  00006e44  3c130000	lhi	r19,((LC27_LF5)>>16)&0xffff
 7459  00006e48  2673f7d4	addui	r19,r19,(LC27_LF5)&0xffff
 7460  00006e4c  afb30000	sw	(r29),r19
 7461  00006e50  8d010000	lw	r1,(r8)
 7462  00006e54  afa10004	sw	4(r29),r1
 7463  00006e58  8fd3ff7c	lw	r19,-132(r30)
 7464  00006e5c  afb30008	sw	8(r29),r19
 7465  00006e60  0c0034e4	jal	_printf
 7466  00006e64  54000000	nop; not filled.
 7467  00006e68  3c130000	lhi	r19,((LC28_LF5)>>16)&0xffff
 7468  00006e6c  2673f7f0	addui	r19,r19,(LC28_LF5)&0xffff
 7469  00006e70  afb30000	sw	(r29),r19
 7470  00006e74  8d010000	lw	r1,(r8)
 7471  00006e78  afa10004	sw	4(r29),r1
 7472  00006e7c  8fd3ff78	lw	r19,-136(r30)
 7473  00006e80  afb30008	sw	8(r29),r19
 7474  00006e84  8fd3ff74	lw	r19,-140(r30)
 7475  00006e88  afb3000c	sw	12(r29),r19
 7476  00006e8c  0c0034b8	jal	_printf
 7477  00006e90  54000000	nop; not filled.
 7478  00006e94  3c130000	lhi	r19,((LC29_LF5)>>16)&0xffff
 7479  00006e98  2673f818	addui	r19,r19,(LC29_LF5)&0xffff
 7480  00006e9c  afb30000	sw	(r29),r19
 7481  00006ea0  8d010000	lw	r1,(r8)
 7482  00006ea4  afa10004	sw	4(r29),r1
 7483  00006ea8  8fd3ff70	lw	r19,-144(r30)
 7484  00006eac  afb30008	sw	8(r29),r19
 7485  00006eb0  8fd3ff6c	lw	r19,-148(r30)
 7486  00006eb4  afb3000c	sw	12(r29),r19
 7487  00006eb8  0c00348c	jal	_printf
 7488  00006ebc  54000000	nop; not filled.
 7489  00006ec0  23bd0018	addi	r29,r29,#24
 7490  00006ec4  3c0b0000	lhi	r11,((_buf65_LF5+3)>>16)&0xffff
 7491  00006ec8  256bfb32	addui	r11,r11,(_buf65_LF5+3)&0xffff
 7492  00006ecc          	L322_LF5:
 7493  00006ecc  23bdfff0	addi	r29,r29,#-16
 7494  00006ed0  afaa0000	sw	(r29),r10
 7495  00006ed4  3c130000	lhi	r19,((_buf65_LF5)>>16)&0xffff
 7496  00006ed8  2673fb2f	addui	r19,r19,(_buf65_LF5)&0xffff
 7497  00006edc  afb30004	sw	4(r29),r19
 7498  00006ee0  afae0008	sw	8(r29),r14
 7499  00006ee4  201300c8	addi	r19,r0,#200
 7500  00006ee8  afb3000c	sw	12(r29),r19
 7501  00006eec  0ffff5bc	jal	_ProcessGetFromFile
 7502  00006ef0  54000000	nop; not filled.
 7503  00006ef4  00011820	add	r3,r0,r1
 7504  00006ef8  23bd0010	addi	r29,r29,#16
 7505  00006efc  6c610000	sgti	r1,r3,#0
 7506  00006f00  10200098	beqz	r1,L323_LF5
 7507  00006f04  54000000	nop; not filled.
 7508  00006f08  20020000	addi	r2,r0,#0
 7509  00006f0c  0043082a	slt	r1,r2,r3
 7510  00006f10  1020ffb8	beqz	r1,L322_LF5
 7511  00006f14  54000000	nop; not filled.
 7512  00006f18  000b3820	add	r7,r0,r11
 7513  00006f1c  00113020	add	r6,r0,r17
 7514  00006f20  00122820	add	r5,r0,r18
 7515  00006f24  000f2020	add	r4,r0,r15
 7516  00006f28          	L328_LF5:
 7517  00006f28  23bdffe8	addi	r29,r29,#-24
 7518  00006f2c  3c130000	lhi	r19,((LC48_LF5)>>16)&0xffff
 7519  00006f30  2673fbf8	addui	r19,r19,(LC48_LF5)&0xffff
 7520  00006f34  afb30000	sw	(r29),r19
 7521  00006f38  8fc1ff68	lw	r1,-152(r30)
 7522  00006f3c  00220820	add	r1,r1,r2
 7523  00006f40  00230822	sub	r1,r1,r3
 7524  00006f44  afa10004	sw	4(r29),r1
 7525  00006f48  90810000	lbu	r1,(r4)
 7526  00006f4c  afa10008	sw	8(r29),r1
 7527  00006f50  90a10000	lbu	r1,(r5)
 7528  00006f54  afa1000c	sw	12(r29),r1
 7529  00006f58  90c10000	lbu	r1,(r6)
 7530  00006f5c  afa10010	sw	16(r29),r1
 7531  00006f60  90e10000	lbu	r1,(r7)
 7532  00006f64  afa10014	sw	20(r29),r1
 7533  00006f68  0c0033dc	jal	_printf
 7534  00006f6c  54000000	nop; not filled.
 7535  00006f70  23bd0018	addi	r29,r29,#24
 7536  00006f74  20e70004	addi	r7,r7,#4
 7537  00006f78  20c60004	addi	r6,r6,#4
 7538  00006f7c  20a50004	addi	r5,r5,#4
 7539  00006f80  20840004	addi	r4,r4,#4
 7540  00006f84  20420004	addi	r2,r2,#4
 7541  00006f88  0043082a	slt	r1,r2,r3
 7542  00006f8c  1420ff98	bnez	r1,L328_LF5
 7543  00006f90  54000000	nop; not filled.
 7544  00006f94  0bffff34	j	L322_LF5
 7545  00006f98  54000000	nop; not filled.
 7546  00006f9c          	L323_LF5:
 7547  00006f9c  23bdfff8	addi	r29,r29,#-8
 7548  00006fa0  afaa0000	sw	(r29),r10
 7549  00006fa4  0c00331c	jal	_close
 7550  00006fa8  54000000	nop; not filled.
 7551  00006fac  08000038	j	L357_LF5
 7552  00006fb0  54000000	nop; not filled.
 7553  00006fb4          	L330_LF5:
 7554  00006fb4  21080004	addi	r8,r8,#4
 7555  00006fb8  21290001	addi	r9,r9,#1
 7556  00006fbc  8d100000	lw	r16,(r8)
 7557  00006fc0  08000028	j	L315_LF5
 7558  00006fc4  54000000	nop; not filled.
 7559  00006fc8          	L331_LF5:
 7560  00006fc8  23bdfff8	addi	r29,r29,#-8
 7561  00006fcc  3c130000	lhi	r19,((LC49_LF5)>>16)&0xffff
 7562  00006fd0  2673fc10	addui	r19,r19,(LC49_LF5)&0xffff
 7563  00006fd4  afb30000	sw	(r29),r19
 7564  00006fd8  8d010000	lw	r1,(r8)
 7565  00006fdc  afa10004	sw	4(r29),r1
 7566  00006fe0  0c003364	jal	_printf
 7567  00006fe4  54000000	nop; not filled.
 7568  00006fe8          	L357_LF5:
 7569  00006fe8  23bd0008	addi	r29,r29,#8
 7570  00006fec          	L315_LF5:
 7571  00006fec  21080004	addi	r8,r8,#4
 7572  00006ff0  21290001	addi	r9,r9,#1
 7573  00006ff4  012c082a	slt	r1,r9,r12
 7574  00006ff8  1420fcf8	bnez	r1,L316_LF5
 7575  00006ffc  54000000	nop; not filled.
 7576  00007000          	L314_LF5:
 7577  00007000  23bdfff8	addi	r29,r29,#-8
 7578  00007004  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7579  00007008  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 7580  0000700c  afa20000	sw	(r29),r2
 7581  00007010  20130069	addi	r19,r0,#105
 7582  00007014  afb30004	sw	4(r29),r19
 7583  00007018  0fffcdfc	jal	_dindex
 7584  0000701c  54000000	nop; not filled.
 7585  00007020  23bd0008	addi	r29,r29,#8
 7586  00007024  64210000	snei	r1,r1,#0
 7587  00007028  1420002c	bnez	r1,L336_LF5
 7588  0000702c  54000000	nop; not filled.
 7589  00007030  23bdfff8	addi	r29,r29,#-8
 7590  00007034  afa20000	sw	(r29),r2
 7591  00007038  2013002b	addi	r19,r0,#43
 7592  0000703c  afb30004	sw	4(r29),r19
 7593  00007040  0fffcdd4	jal	_dindex
 7594  00007044  54000000	nop; not filled.
 7595  00007048  23bd0008	addi	r29,r29,#8
 7596  0000704c  64210000	snei	r1,r1,#0
 7597  00007050  10200020	beqz	r1,L335_LF5
 7598  00007054  54000000	nop; not filled.
 7599  00007058          	L336_LF5:
 7600  00007058  23bdfff8	addi	r29,r29,#-8
 7601  0000705c  3c130000	lhi	r19,((LC50_LF5)>>16)&0xffff
 7602  00007060  2673fc2c	addui	r19,r19,(LC50_LF5)&0xffff
 7603  00007064  afb30000	sw	(r29),r19
 7604  00007068  0c0032dc	jal	_printf
 7605  0000706c  54000000	nop; not filled.
 7606  00007070  23bd0008	addi	r29,r29,#8
 7607  00007074          	L335_LF5:
 7608  00007074  0c000914	jal	_QueueModuleInit
 7609  00007078  54000000	nop; not filled.
 7610  0000707c  23bdfff8	addi	r29,r29,#-8
 7611  00007080  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7612  00007084  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 7613  00007088  afa20000	sw	(r29),r2
 7614  0000708c  20130069	addi	r19,r0,#105
 7615  00007090  afb30004	sw	4(r29),r19
 7616  00007094  0fffcd80	jal	_dindex
 7617  00007098  54000000	nop; not filled.
 7618  0000709c  23bd0008	addi	r29,r29,#8
 7619  000070a0  64210000	snei	r1,r1,#0
 7620  000070a4  1420002c	bnez	r1,L338_LF5
 7621  000070a8  54000000	nop; not filled.
 7622  000070ac  23bdfff8	addi	r29,r29,#-8
 7623  000070b0  afa20000	sw	(r29),r2
 7624  000070b4  2013002b	addi	r19,r0,#43
 7625  000070b8  afb30004	sw	4(r29),r19
 7626  000070bc  0fffcd58	jal	_dindex
 7627  000070c0  54000000	nop; not filled.
 7628  000070c4  23bd0008	addi	r29,r29,#8
 7629  000070c8  64210000	snei	r1,r1,#0
 7630  000070cc  10200020	beqz	r1,L337_LF5
 7631  000070d0  54000000	nop; not filled.
 7632  000070d4          	L338_LF5:
 7633  000070d4  23bdfff8	addi	r29,r29,#-8
 7634  000070d8  3c130000	lhi	r19,((LC51_LF5)>>16)&0xffff
 7635  000070dc  2673fc4c	addui	r19,r19,(LC51_LF5)&0xffff
 7636  000070e0  afb30000	sw	(r29),r19
 7637  000070e4  0c003260	jal	_printf
 7638  000070e8  54000000	nop; not filled.
 7639  000070ec  23bd0008	addi	r29,r29,#8
 7640  000070f0          	L337_LF5:
 7641  000070f0  0fffba78	jal	_MemoryModuleInit
 7642  000070f4  54000000	nop; not filled.
 7643  000070f8  23bdfff8	addi	r29,r29,#-8
 7644  000070fc  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7645  00007100  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 7646  00007104  afa20000	sw	(r29),r2
 7647  00007108  20130069	addi	r19,r0,#105
 7648  0000710c  afb30004	sw	4(r29),r19
 7649  00007110  0fffcd04	jal	_dindex
 7650  00007114  54000000	nop; not filled.
 7651  00007118  23bd0008	addi	r29,r29,#8
 7652  0000711c  64210000	snei	r1,r1,#0
 7653  00007120  1420002c	bnez	r1,L340_LF5
 7654  00007124  54000000	nop; not filled.
 7655  00007128  23bdfff8	addi	r29,r29,#-8
 7656  0000712c  afa20000	sw	(r29),r2
 7657  00007130  2013002b	addi	r19,r0,#43
 7658  00007134  afb30004	sw	4(r29),r19
 7659  00007138  0fffccdc	jal	_dindex
 7660  0000713c  54000000	nop; not filled.
 7661  00007140  23bd0008	addi	r29,r29,#8
 7662  00007144  64210000	snei	r1,r1,#0
 7663  00007148  10200020	beqz	r1,L339_LF5
 7664  0000714c  54000000	nop; not filled.
 7665  00007150          	L340_LF5:
 7666  00007150  23bdfff8	addi	r29,r29,#-8
 7667  00007154  3c130000	lhi	r19,((LC52_LF5)>>16)&0xffff
 7668  00007158  2673fc68	addui	r19,r19,(LC52_LF5)&0xffff
 7669  0000715c  afb30000	sw	(r29),r19
 7670  00007160  0c0031e4	jal	_printf
 7671  00007164  54000000	nop; not filled.
 7672  00007168  23bd0008	addi	r29,r29,#8
 7673  0000716c          	L339_LF5:
 7674  0000716c  0fffd5ac	jal	_ProcessModuleInit
 7675  00007170  54000000	nop; not filled.
 7676  00007174  23bdfff8	addi	r29,r29,#-8
 7677  00007178  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7678  0000717c  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 7679  00007180  afa20000	sw	(r29),r2
 7680  00007184  20130069	addi	r19,r0,#105
 7681  00007188  afb30004	sw	4(r29),r19
 7682  0000718c  0fffcc88	jal	_dindex
 7683  00007190  54000000	nop; not filled.
 7684  00007194  23bd0008	addi	r29,r29,#8
 7685  00007198  64210000	snei	r1,r1,#0
 7686  0000719c  1420002c	bnez	r1,L342_LF5
 7687  000071a0  54000000	nop; not filled.
 7688  000071a4  23bdfff8	addi	r29,r29,#-8
 7689  000071a8  afa20000	sw	(r29),r2
 7690  000071ac  2013002b	addi	r19,r0,#43
 7691  000071b0  afb30004	sw	4(r29),r19
 7692  000071b4  0fffcc60	jal	_dindex
 7693  000071b8  54000000	nop; not filled.
 7694  000071bc  23bd0008	addi	r29,r29,#8
 7695  000071c0  64210000	snei	r1,r1,#0
 7696  000071c4  10200020	beqz	r1,L341_LF5
 7697  000071c8  54000000	nop; not filled.
 7698  000071cc          	L342_LF5:
 7699  000071cc  23bdfff8	addi	r29,r29,#-8
 7700  000071d0  3c130000	lhi	r19,((LC53_LF5)>>16)&0xffff
 7701  000071d4  2673fc84	addui	r19,r19,(LC53_LF5)&0xffff
 7702  000071d8  afb30000	sw	(r29),r19
 7703  000071dc  0c003168	jal	_printf
 7704  000071e0  54000000	nop; not filled.
 7705  000071e4  23bd0008	addi	r29,r29,#8
 7706  000071e8          	L341_LF5:
 7707  000071e8  0c0019c0	jal	_KbdModuleInit
 7708  000071ec  54000000	nop; not filled.
 7709  000071f0  23bdfff8	addi	r29,r29,#-8
 7710  000071f4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7711  000071f8  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 7712  000071fc  afa20000	sw	(r29),r2
 7713  00007200  20130069	addi	r19,r0,#105
 7714  00007204  afb30004	sw	4(r29),r19
 7715  00007208  0fffcc0c	jal	_dindex
 7716  0000720c  54000000	nop; not filled.
 7717  00007210  23bd0008	addi	r29,r29,#8
 7718  00007214  64210000	snei	r1,r1,#0
 7719  00007218  1420002c	bnez	r1,L344_LF5
 7720  0000721c  54000000	nop; not filled.
 7721  00007220  23bdfff8	addi	r29,r29,#-8
 7722  00007224  afa20000	sw	(r29),r2
 7723  00007228  2013002b	addi	r19,r0,#43
 7724  0000722c  afb30004	sw	4(r29),r19
 7725  00007230  0fffcbe4	jal	_dindex
 7726  00007234  54000000	nop; not filled.
 7727  00007238  23bd0008	addi	r29,r29,#8
 7728  0000723c  64210000	snei	r1,r1,#0
 7729  00007240  10200020	beqz	r1,L343_LF5
 7730  00007244  54000000	nop; not filled.
 7731  00007248          	L344_LF5:
 7732  00007248  23bdfff8	addi	r29,r29,#-8
 7733  0000724c  3c130000	lhi	r19,((LC54_LF5)>>16)&0xffff
 7734  00007250  2673fca4	addui	r19,r19,(LC54_LF5)&0xffff
 7735  00007254  afb30000	sw	(r29),r19
 7736  00007258  0c0030ec	jal	_printf
 7737  0000725c  54000000	nop; not filled.
 7738  00007260  23bd0008	addi	r29,r29,#8
 7739  00007264          	L343_LF5:
 7740  00007264  23c2ff80	addi	r2,r30,#-128
 7741  00007268  23c3ffe3	addi	r3,r30,#-29
 7742  0000726c          	L348_LF5:
 7743  0000726c  20130061	addi	r19,r0,(#0x61)&0xff
 7744  00007270  a0530000	sb	(r2),r19
 7745  00007274  20420001	addi	r2,r2,#1
 7746  00007278  0043082c	sle	r1,r2,r3
 7747  0000727c  1420ffec	bnez	r1,L348_LF5
 7748  00007280  54000000	nop; not filled.
 7749  00007284  23bdfff8	addi	r29,r29,#-8
 7750  00007288  3c130000	lhi	r19,((LC55_LF5)>>16)&0xffff
 7751  0000728c  2673fcc4	addui	r19,r19,(LC55_LF5)&0xffff
 7752  00007290  afb30000	sw	(r29),r19
 7753  00007294  20130002	addi	r19,r0,#2
 7754  00007298  afb30004	sw	4(r29),r19
 7755  0000729c  0fffa4f8	jal	_FsOpen
 7756  000072a0  54000000	nop; not filled.
 7757  000072a4  00014820	add	r9,r0,r1
 7758  000072a8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7759  000072ac  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 7760  000072b0  afa20000	sw	(r29),r2
 7761  000072b4  20130069	addi	r19,r0,#105
 7762  000072b8  afb30004	sw	4(r29),r19
 7763  000072bc  0fffcb58	jal	_dindex
 7764  000072c0  54000000	nop; not filled.
 7765  000072c4  23bd0008	addi	r29,r29,#8
 7766  000072c8  64210000	snei	r1,r1,#0
 7767  000072cc  1420002c	bnez	r1,L351_LF5
 7768  000072d0  54000000	nop; not filled.
 7769  000072d4  23bdfff8	addi	r29,r29,#-8
 7770  000072d8  afa20000	sw	(r29),r2
 7771  000072dc  2013002b	addi	r19,r0,#43
 7772  000072e0  afb30004	sw	4(r29),r19
 7773  000072e4  0fffcb30	jal	_dindex
 7774  000072e8  54000000	nop; not filled.
 7775  000072ec  23bd0008	addi	r29,r29,#8
 7776  000072f0  64210000	snei	r1,r1,#0
 7777  000072f4  10200024	beqz	r1,L350_LF5
 7778  000072f8  54000000	nop; not filled.
 7779  000072fc          	L351_LF5:
 7780  000072fc  23bdfff8	addi	r29,r29,#-8
 7781  00007300  3c130000	lhi	r19,((LC56_LF5)>>16)&0xffff
 7782  00007304  2673fcc8	addui	r19,r19,(LC56_LF5)&0xffff
 7783  00007308  afb30000	sw	(r29),r19
 7784  0000730c  afa90004	sw	4(r29),r9
 7785  00007310  0c003034	jal	_printf
 7786  00007314  54000000	nop; not filled.
 7787  00007318  23bd0008	addi	r29,r29,#8
 7788  0000731c          	L350_LF5:
 7789  0000731c  23bdfff0	addi	r29,r29,#-16
 7790  00007320  afa90000	sw	(r29),r9
 7791  00007324  20130000	addi	r19,r0,#0
 7792  00007328  afb30004	sw	4(r29),r19
 7793  0000732c  afb30008	sw	8(r29),r19
 7794  00007330  0fffaac0	jal	_FsSeek
 7795  00007334  54000000	nop; not filled.
 7796  00007338  afa90000	sw	(r29),r9
 7797  0000733c  23c1ff80	addi	r1,r30,#-128
 7798  00007340  afa10004	sw	4(r29),r1
 7799  00007344  20130050	addi	r19,r0,#80
 7800  00007348  afb30008	sw	8(r29),r19
 7801  0000734c  0fffa9a8	jal	_FsWrite
 7802  00007350  54000000	nop; not filled.
 7803  00007354  afa90000	sw	(r29),r9
 7804  00007358  0fffa798	jal	_FsClose
 7805  0000735c  54000000	nop; not filled.
 7806  00007360  23bd0010	addi	r29,r29,#16
 7807  00007364  66010000	snei	r1,r16,#0
 7808  00007368  10200030	beqz	r1,L352_LF5
 7809  0000736c  54000000	nop; not filled.
 7810  00007370  23bdfff0	addi	r29,r29,#-16
 7811  00007374  20130000	addi	r19,r0,#0
 7812  00007378  afb30000	sw	(r29),r19
 7813  0000737c  20131234	addi	r19,r0,#4660
 7814  00007380  afb30004	sw	4(r29),r19
 7815  00007384  afb00008	sw	8(r29),r16
 7816  00007388  20130001	addi	r19,r0,#1
 7817  0000738c  afb3000c	sw	12(r29),r19
 7818  00007390  0fffe120	jal	_ProcessFork
 7819  00007394  54000000	nop; not filled.
 7820  00007398  23bd0010	addi	r29,r29,#16
 7821  0000739c          	L352_LF5:
 7822  0000739c  0c002e90	jal	_SysprocCreateProcesses
 7823  000073a0  54000000	nop; not filled.
 7824  000073a4  23bdfff8	addi	r29,r29,#-8
 7825  000073a8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7826  000073ac  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 7827  000073b0  afa20000	sw	(r29),r2
 7828  000073b4  20130069	addi	r19,r0,#105
 7829  000073b8  afb30004	sw	4(r29),r19
 7830  000073bc  0fffca58	jal	_dindex
 7831  000073c0  54000000	nop; not filled.
 7832  000073c4  23bd0008	addi	r29,r29,#8
 7833  000073c8  64210000	snei	r1,r1,#0
 7834  000073cc  1420002c	bnez	r1,L354_LF5
 7835  000073d0  54000000	nop; not filled.
 7836  000073d4  23bdfff8	addi	r29,r29,#-8
 7837  000073d8  afa20000	sw	(r29),r2
 7838  000073dc  2013002b	addi	r19,r0,#43
 7839  000073e0  afb30004	sw	4(r29),r19
 7840  000073e4  0fffca30	jal	_dindex
 7841  000073e8  54000000	nop; not filled.
 7842  000073ec  23bd0008	addi	r29,r29,#8
 7843  000073f0  64210000	snei	r1,r1,#0
 7844  000073f4  10200020	beqz	r1,L353_LF5
 7845  000073f8  54000000	nop; not filled.
 7846  000073fc          	L354_LF5:
 7847  000073fc  23bdfff8	addi	r29,r29,#-8
 7848  00007400  3c130000	lhi	r19,((LC57_LF5)>>16)&0xffff
 7849  00007404  2673fce0	addui	r19,r19,(LC57_LF5)&0xffff
 7850  00007408  afb30000	sw	(r29),r19
 7851  0000740c  0c002f38	jal	_printf
 7852  00007410  54000000	nop; not filled.
 7853  00007414  23bd0008	addi	r29,r29,#8
 7854  00007418          	L353_LF5:
 7855  00007418  23bdfff8	addi	r29,r29,#-8
 7856  0000741c  3c030000	lhi	r3,((_processQuantum_LF5)>>16)&0xffff
 7857  00007420  2463f420	addui	r3,r3,(_processQuantum_LF5)&0xffff
 7858  00007424  8c730000	lw	r19,(r3)
 7859  00007428  afb30000	sw	(r29),r19
 7860  0000742c  0c001748	jal	_TimerSet
 7861  00007430  54000000	nop; not filled.
 7862  00007434  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7863  00007438  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 7864  0000743c  afa20000	sw	(r29),r2
 7865  00007440  20130069	addi	r19,r0,#105
 7866  00007444  afb30004	sw	4(r29),r19
 7867  00007448  0fffc9cc	jal	_dindex
 7868  0000744c  54000000	nop; not filled.
 7869  00007450  23bd0008	addi	r29,r29,#8
 7870  00007454  64210000	snei	r1,r1,#0
 7871  00007458  1420002c	bnez	r1,L356_LF5
 7872  0000745c  54000000	nop; not filled.
 7873  00007460  23bdfff8	addi	r29,r29,#-8
 7874  00007464  afa20000	sw	(r29),r2
 7875  00007468  2013002b	addi	r19,r0,#43
 7876  0000746c  afb30004	sw	4(r29),r19
 7877  00007470  0fffc9a4	jal	_dindex
 7878  00007474  54000000	nop; not filled.
 7879  00007478  23bd0008	addi	r29,r29,#8
 7880  0000747c  64210000	snei	r1,r1,#0
 7881  00007480  10200028	beqz	r1,L355_LF5
 7882  00007484  54000000	nop; not filled.
 7883  00007488          	L356_LF5:
 7884  00007488  23bdfff8	addi	r29,r29,#-8
 7885  0000748c  3c130000	lhi	r19,((LC58_LF5)>>16)&0xffff
 7886  00007490  2673fd14	addui	r19,r19,(LC58_LF5)&0xffff
 7887  00007494  afb30000	sw	(r29),r19
 7888  00007498  8c610000	lw	r1,(r3)
 7889  0000749c  afa10004	sw	4(r29),r1
 7890  000074a0  0c002ea4	jal	_printf
 7891  000074a4  54000000	nop; not filled.
 7892  000074a8  23bd0008	addi	r29,r29,#8
 7893  000074ac          	L355_LF5:
 7894  000074ac  0fff9cb8	jal	_intrreturn
 7895  000074b0  54000000	nop; not filled.
 7896  000074b4  0c002e78	jal	_exitsim
 7897  000074b8  54000000	nop; not filled.
 7898  000074bc  0c002e7c	jal	_exit
 7899  000074c0  54000000	nop
 7900  000074c4          	.endproc _main
 7901  000074c4          	.data
 7902  0000fd4a          	.global _debugstr
 7903  0000fd4a          	_debugstr:
 7904  0000fd4a          	.space 200
 7905  0000fe12          	.align 2
 7906  0000fe14          	.global _currentPCB
 7907  0000fe14          	_currentPCB:
 7908  0000fe14          	.space 4
 7909  0000fe18          	.align 2
 7910  0000fe18          	_freepcbs_LF5:
 7911  0000fe18          	.space 12
 7912  0000fe24          	.align 2
 7913  0000fe24          	_runQueue_LF5:
 7914  0000fe24          	.space 12
 7915  0000fe30          	.align 2
 7916  0000fe30          	_waitQueue_LF5:
 7917  0000fe30          	.space 12
 7918  0000fe3c          	.align 2
 7919  0000fe3c          	_zombieQueue_LF5:
 7920  0000fe3c          	.space 12
 7921  0000fe48          	.align 2
 7922  0000fe48          	_pcbs_LF5:
 7923  0000fe48          	.space 5760
 7924  000114c8          	.text
 7925  000074c4          	.align 2
 7926  000074c4          	.proc _ProcessExit_LF5
 7927  000074c4          	_ProcessExit_LF5:
 7928                      ;  Function 'ProcessExit'; 0 bytes of locals, 0 regs to save.
 7929  000074c4  afbefffc	sw	-4(r29),r30; push fp
 7930  000074c8  001df020	add	r30,r0,r29; fp = sp
 7931  000074cc  afbffff8	sw	-8(r29),r31; push ret addr
 7932  000074d0  2fbd0008	subui	r29,r29,#8; alloc local storage
 7933  000074d4  0c002e64	jal	_exit
 7934  000074d8  54000000	nop; not filled.
 7935  000074dc  8fdffff8	lw	r31,-8(r30)
 7936  000074e0  001ee820	add	r29,r0,r30
 7937  000074e4  8fdefffc	lw	r30,-4(r30)
 7938  000074e8  4be00000	jr	r31
 7939  000074ec  54000000	nop
 7940  000074f0          	.endproc _ProcessExit_LF5
 7941                      ; Compiled by GCC
 7943  000074f0          	.align 2
 7944  000074f0          	.proc _isspace
 7945  000074f0          	.global _isspace
 7946  000074f0          	_isspace:
 7947                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 7948  000074f0  afbefffc	sw	-4(r29),r30; push fp
 7949  000074f4  001df020	add	r30,r0,r29; fp = sp
 7950  000074f8  afbffff8	sw	-8(r29),r31; push ret addr
 7951  000074fc  2fbd0010	subui	r29,r29,#16; alloc local storage
 7952  00007500  afa20000	sw	0(r29),r2
 7953  00007504  83c20003	lb	r2,3(r30)
 7954  00007508  201f0000	addi	r31,r0,#0
 7955  0000750c  304100ff	andi	r1,r2,#0x00ff
 7956  00007510  60210020	seqi	r1,r1,#32
 7957  00007514  14200018	bnez	r1,L6_LF6
 7958  00007518  54000000	nop; not filled.
 7959  0000751c  2041fff7	addi	r1,r2,#-9
 7960  00007520  302100ff	andi	r1,r1,#0x00ff
 7961  00007524  70210001	sleui	r1,r1,#1
 7962  00007528  10200008	beqz	r1,L5_LF6
 7963  0000752c  54000000	nop; not filled.
 7964  00007530          	L6_LF6:
 7965  00007530  201f0001	addi	r31,r0,#1
 7966  00007534          	L5_LF6:
 7967  00007534  001f0820	add	r1,r0,r31
 7968  00007538  8fa20000	lw	r2,0(r29)
 7969  0000753c  8fdffff8	lw	r31,-8(r30)
 7970  00007540  001ee820	add	r29,r0,r30
 7971  00007544  8fdefffc	lw	r30,-4(r30)
 7972  00007548  4be00000	jr	r31
 7973  0000754c  54000000	nop
 7974  00007550          	.endproc _isspace
 7975  00007550          	.align 2
 7976  00007550          	.proc _isxdigit
 7977  00007550          	.global _isxdigit
 7978  00007550          	_isxdigit:
 7979                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 7980  00007550  afbefffc	sw	-4(r29),r30; push fp
 7981  00007554  001df020	add	r30,r0,r29; fp = sp
 7982  00007558  afbffff8	sw	-8(r29),r31; push ret addr
 7983  0000755c  2fbd0010	subui	r29,r29,#16; alloc local storage
 7984  00007560  afa20000	sw	0(r29),r2
 7985  00007564  83df0003	lb	r31,3(r30)
 7986  00007568  20020000	addi	r2,r0,#0
 7987  0000756c  23e1ffd0	addi	r1,r31,#-48
 7988  00007570  302100ff	andi	r1,r1,#0x00ff
 7989  00007574  70210009	sleui	r1,r1,#9
 7990  00007578  14200028	bnez	r1,L12_LF6
 7991  0000757c  54000000	nop; not filled.
 7992  00007580  23e1ff9f	addi	r1,r31,#-97
 7993  00007584  302100ff	andi	r1,r1,#0x00ff
 7994  00007588  70210005	sleui	r1,r1,#5
 7995  0000758c  14200014	bnez	r1,L12_LF6
 7996  00007590  54000000	nop; not filled.
 7997  00007594  33e100ff	andi	r1,r31,#0x00ff
 7998  00007598  64210041	snei	r1,r1,#65
 7999  0000759c  14200008	bnez	r1,L11_LF6
 8000  000075a0  54000000	nop; not filled.
 8001  000075a4          	L12_LF6:
 8002  000075a4  20020001	addi	r2,r0,#1
 8003  000075a8          	L11_LF6:
 8004  000075a8  00020820	add	r1,r0,r2
 8005  000075ac  8fa20000	lw	r2,0(r29)
 8006  000075b0  8fdffff8	lw	r31,-8(r30)
 8007  000075b4  001ee820	add	r29,r0,r30
 8008  000075b8  8fdefffc	lw	r30,-4(r30)
 8009  000075bc  4be00000	jr	r31
 8010  000075c0  54000000	nop
 8011  000075c4          	.endproc _isxdigit
 8012  000075c4          	.align 2
 8013  000075c4          	.proc _DisableIntrs
 8014  000075c4          	.global _DisableIntrs
 8015  000075c4          	_DisableIntrs:
 8016                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
 8017  000075c4  afbefffc	sw	-4(r29),r30; push fp
 8018  000075c8  001df020	add	r30,r0,r29; fp = sp
 8019  000075cc  afbffff8	sw	-8(r29),r31; push ret addr
 8020  000075d0  2fbd0010	subui	r29,r29,#16; alloc local storage
 8021  000075d4  afa20000	sw	0(r29),r2
 8022  000075d8  23bdfff8	addi	r29,r29,#-8
 8023  000075dc  2002000f	addi	r2,r0,#15
 8024  000075e0  afa20000	sw	(r29),r2
 8025  000075e4  0fff9ca0	jal	_SetIntrs
 8026  000075e8  54000000	nop; not filled.
 8027  000075ec  23bd0008	addi	r29,r29,#8
 8028  000075f0  8fa20000	lw	r2,0(r29)
 8029  000075f4  8fdffff8	lw	r31,-8(r30)
 8030  000075f8  001ee820	add	r29,r0,r30
 8031  000075fc  8fdefffc	lw	r30,-4(r30)
 8032  00007600  4be00000	jr	r31
 8033  00007604  54000000	nop
 8034  00007608          	.endproc _DisableIntrs
 8035  00007608          	.align 2
 8036  00007608          	.proc _EnableIntrs
 8037  00007608          	.global _EnableIntrs
 8038  00007608          	_EnableIntrs:
 8039                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
 8040  00007608  afbefffc	sw	-4(r29),r30; push fp
 8041  0000760c  001df020	add	r30,r0,r29; fp = sp
 8042  00007610  afbffff8	sw	-8(r29),r31; push ret addr
 8043  00007614  2fbd0010	subui	r29,r29,#16; alloc local storage
 8044  00007618  afa20000	sw	0(r29),r2
 8045  0000761c  23bdfff8	addi	r29,r29,#-8
 8046  00007620  20020000	addi	r2,r0,#0
 8047  00007624  afa20000	sw	(r29),r2
 8048  00007628  0fff9c5c	jal	_SetIntrs
 8049  0000762c  54000000	nop; not filled.
 8050  00007630  23bd0008	addi	r29,r29,#8
 8051  00007634  8fa20000	lw	r2,0(r29)
 8052  00007638  8fdffff8	lw	r31,-8(r30)
 8053  0000763c  001ee820	add	r29,r0,r30
 8054  00007640  8fdefffc	lw	r30,-4(r30)
 8055  00007644  4be00000	jr	r31
 8056  00007648  54000000	nop
 8057  0000764c          	.endproc _EnableIntrs
 8058  0000764c          	.align 2
 8059  0000764c          	.proc _RestoreIntrs
 8060  0000764c          	.global _RestoreIntrs
 8061  0000764c          	_RestoreIntrs:
 8062                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
 8063  0000764c  afbefffc	sw	-4(r29),r30; push fp
 8064  00007650  001df020	add	r30,r0,r29; fp = sp
 8065  00007654  afbffff8	sw	-8(r29),r31; push ret addr
 8066  00007658  2fbd0010	subui	r29,r29,#16; alloc local storage
 8067  0000765c  afa20000	sw	0(r29),r2
 8068  00007660  23bdfff8	addi	r29,r29,#-8
 8069  00007664  8fc20000	lw	r2,(r30)
 8070  00007668  afa20000	sw	(r29),r2
 8071  0000766c  0fff9c18	jal	_SetIntrs
 8072  00007670  54000000	nop; not filled.
 8073  00007674  23bd0008	addi	r29,r29,#8
 8074  00007678  8fa20000	lw	r2,0(r29)
 8075  0000767c  8fdffff8	lw	r31,-8(r30)
 8076  00007680  001ee820	add	r29,r0,r30
 8077  00007684  8fdefffc	lw	r30,-4(r30)
 8078  00007688  4be00000	jr	r31
 8079  0000768c  54000000	nop
 8080  00007690          	.endproc _RestoreIntrs
 8081  00007690          	.align 2
 8082  00007690          	.proc _QueueLinkInit
 8083  00007690          	.global _QueueLinkInit
 8084  00007690          	_QueueLinkInit:
 8085                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
 8086  00007690  afbefffc	sw	-4(r29),r30; push fp
 8087  00007694  001df020	add	r30,r0,r29; fp = sp
 8088  00007698  afbffff8	sw	-8(r29),r31; push ret addr
 8089  0000769c  2fbd0010	subui	r29,r29,#16; alloc local storage
 8090  000076a0  afa20000	sw	0(r29),r2
 8091  000076a4  8fc10000	lw	r1,(r30)
 8092  000076a8  8fc20004	lw	r2,4(r30)
 8093  000076ac  201f0000	addi	r31,r0,#0
 8094  000076b0  ac3f0000	sw	(r1),r31
 8095  000076b4  ac22000c	sw	12(r1),r2
 8096  000076b8  8fa20000	lw	r2,0(r29)
 8097  000076bc  8fdffff8	lw	r31,-8(r30)
 8098  000076c0  001ee820	add	r29,r0,r30
 8099  000076c4  8fdefffc	lw	r30,-4(r30)
 8100  000076c8  4be00000	jr	r31
 8101  000076cc  54000000	nop
 8102  000076d0          	.endproc _QueueLinkInit
 8103  000076d0          	.align 2
 8104  000076d0          	.proc _QueueNext
 8105  000076d0          	.global _QueueNext
 8106  000076d0          	_QueueNext:
 8107                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
 8108  000076d0  afbefffc	sw	-4(r29),r30; push fp
 8109  000076d4  001df020	add	r30,r0,r29; fp = sp
 8110  000076d8  afbffff8	sw	-8(r29),r31; push ret addr
 8111  000076dc  2fbd0008	subui	r29,r29,#8; alloc local storage
 8112  000076e0  8fc10000	lw	r1,(r30)
 8113  000076e4  8c210000	lw	r1,(r1)
 8114  000076e8  8fdffff8	lw	r31,-8(r30)
 8115  000076ec  001ee820	add	r29,r0,r30
 8116  000076f0  8fdefffc	lw	r30,-4(r30)
 8117  000076f4  4be00000	jr	r31
 8118  000076f8  54000000	nop
 8119  000076fc          	.endproc _QueueNext
 8120  000076fc          	.align 2
 8121  000076fc          	.proc _QueuePrev
 8122  000076fc          	.global _QueuePrev
 8123  000076fc          	_QueuePrev:
 8124                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
 8125  000076fc  afbefffc	sw	-4(r29),r30; push fp
 8126  00007700  001df020	add	r30,r0,r29; fp = sp
 8127  00007704  afbffff8	sw	-8(r29),r31; push ret addr
 8128  00007708  2fbd0008	subui	r29,r29,#8; alloc local storage
 8129  0000770c  8fc10000	lw	r1,(r30)
 8130  00007710  8c210004	lw	r1,4(r1)
 8131  00007714  8fdffff8	lw	r31,-8(r30)
 8132  00007718  001ee820	add	r29,r0,r30
 8133  0000771c  8fdefffc	lw	r30,-4(r30)
 8134  00007720  4be00000	jr	r31
 8135  00007724  54000000	nop
 8136  00007728          	.endproc _QueuePrev
 8137  00007728          	.align 2
 8138  00007728          	.proc _QueueFirst
 8139  00007728          	.global _QueueFirst
 8140  00007728          	_QueueFirst:
 8141                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
 8142  00007728  afbefffc	sw	-4(r29),r30; push fp
 8143  0000772c  001df020	add	r30,r0,r29; fp = sp
 8144  00007730  afbffff8	sw	-8(r29),r31; push ret addr
 8145  00007734  2fbd0008	subui	r29,r29,#8; alloc local storage
 8146  00007738  8fc10000	lw	r1,(r30)
 8147  0000773c  8c210000	lw	r1,(r1)
 8148  00007740  8fdffff8	lw	r31,-8(r30)
 8149  00007744  001ee820	add	r29,r0,r30
 8150  00007748  8fdefffc	lw	r30,-4(r30)
 8151  0000774c  4be00000	jr	r31
 8152  00007750  54000000	nop
 8153  00007754          	.endproc _QueueFirst
 8154  00007754          	.align 2
 8155  00007754          	.proc _QueueLast
 8156  00007754          	.global _QueueLast
 8157  00007754          	_QueueLast:
 8158                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
 8159  00007754  afbefffc	sw	-4(r29),r30; push fp
 8160  00007758  001df020	add	r30,r0,r29; fp = sp
 8161  0000775c  afbffff8	sw	-8(r29),r31; push ret addr
 8162  00007760  2fbd0008	subui	r29,r29,#8; alloc local storage
 8163  00007764  8fc10000	lw	r1,(r30)
 8164  00007768  8c210004	lw	r1,4(r1)
 8165  0000776c  8fdffff8	lw	r31,-8(r30)
 8166  00007770  001ee820	add	r29,r0,r30
 8167  00007774  8fdefffc	lw	r30,-4(r30)
 8168  00007778  4be00000	jr	r31
 8169  0000777c  54000000	nop
 8170  00007780          	.endproc _QueueLast
 8171  00007780          	.align 2
 8172  00007780          	.proc _QueueInsertAfter
 8173  00007780          	.global _QueueInsertAfter
 8174  00007780          	_QueueInsertAfter:
 8175                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
 8176  00007780  afbefffc	sw	-4(r29),r30; push fp
 8177  00007784  001df020	add	r30,r0,r29; fp = sp
 8178  00007788  afbffff8	sw	-8(r29),r31; push ret addr
 8179  0000778c  2fbd0010	subui	r29,r29,#16; alloc local storage
 8180  00007790  afa20000	sw	0(r29),r2
 8181  00007794  afa30004	sw	4(r29),r3
 8182  00007798  8fc30000	lw	r3,(r30)
 8183  0000779c  8fc20004	lw	r2,4(r30)
 8184  000077a0  8fc10008	lw	r1,8(r30)
 8185  000077a4  ac230008	sw	8(r1),r3
 8186  000077a8  ac220004	sw	4(r1),r2
 8187  000077ac  8c5f0000	lw	r31,(r2)
 8188  000077b0  ac3f0000	sw	(r1),r31
 8189  000077b4  ac410000	sw	(r2),r1
 8190  000077b8  8c220000	lw	r2,(r1)
 8191  000077bc  ac410004	sw	4(r2),r1
 8192  000077c0  8c610008	lw	r1,8(r3)
 8193  000077c4  20210001	addi	r1,r1,#1
 8194  000077c8  ac610008	sw	8(r3),r1
 8195  000077cc  8fa20000	lw	r2,0(r29)
 8196  000077d0  8fa30004	lw	r3,4(r29)
 8197  000077d4  8fdffff8	lw	r31,-8(r30)
 8198  000077d8  001ee820	add	r29,r0,r30
 8199  000077dc  8fdefffc	lw	r30,-4(r30)
 8200  000077e0  4be00000	jr	r31
 8201  000077e4  54000000	nop
 8202  000077e8          	.endproc _QueueInsertAfter
 8203  000077e8          	.align 2
 8204  000077e8          	.proc _QueueInsertFirst
 8205  000077e8          	.global _QueueInsertFirst
 8206  000077e8          	_QueueInsertFirst:
 8207                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
 8208  000077e8  afbefffc	sw	-4(r29),r30; push fp
 8209  000077ec  001df020	add	r30,r0,r29; fp = sp
 8210  000077f0  afbffff8	sw	-8(r29),r31; push ret addr
 8211  000077f4  2fbd0010	subui	r29,r29,#16; alloc local storage
 8212  000077f8  afa20000	sw	0(r29),r2
 8213  000077fc  afa30004	sw	4(r29),r3
 8214  00007800  8fc30000	lw	r3,(r30)
 8215  00007804  8fc10004	lw	r1,4(r30)
 8216  00007808  ac230008	sw	8(r1),r3
 8217  0000780c  ac230004	sw	4(r1),r3
 8218  00007810  8c7f0000	lw	r31,(r3)
 8219  00007814  ac3f0000	sw	(r1),r31
 8220  00007818  ac610000	sw	(r3),r1
 8221  0000781c  8c220000	lw	r2,(r1)
 8222  00007820  ac410004	sw	4(r2),r1
 8223  00007824  8c610008	lw	r1,8(r3)
 8224  00007828  20210001	addi	r1,r1,#1
 8225  0000782c  ac610008	sw	8(r3),r1
 8226  00007830  8fa20000	lw	r2,0(r29)
 8227  00007834  8fa30004	lw	r3,4(r29)
 8228  00007838  8fdffff8	lw	r31,-8(r30)
 8229  0000783c  001ee820	add	r29,r0,r30
 8230  00007840  8fdefffc	lw	r30,-4(r30)
 8231  00007844  4be00000	jr	r31
 8232  00007848  54000000	nop
 8233  0000784c          	.endproc _QueueInsertFirst
 8234  0000784c          	.align 2
 8235  0000784c          	.proc _QueueInsertLast
 8236  0000784c          	.global _QueueInsertLast
 8237  0000784c          	_QueueInsertLast:
 8238                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
 8239  0000784c  afbefffc	sw	-4(r29),r30; push fp
 8240  00007850  001df020	add	r30,r0,r29; fp = sp
 8241  00007854  afbffff8	sw	-8(r29),r31; push ret addr
 8242  00007858  2fbd0010	subui	r29,r29,#16; alloc local storage
 8243  0000785c  afa20000	sw	0(r29),r2
 8244  00007860  afa30004	sw	4(r29),r3
 8245  00007864  8fc30000	lw	r3,(r30)
 8246  00007868  8fc10004	lw	r1,4(r30)
 8247  0000786c  8c620004	lw	r2,4(r3)
 8248  00007870  ac230008	sw	8(r1),r3
 8249  00007874  ac220004	sw	4(r1),r2
 8250  00007878  8c5f0000	lw	r31,(r2)
 8251  0000787c  ac3f0000	sw	(r1),r31
 8252  00007880  ac410000	sw	(r2),r1
 8253  00007884  8c220000	lw	r2,(r1)
 8254  00007888  ac410004	sw	4(r2),r1
 8255  0000788c  8c610008	lw	r1,8(r3)
 8256  00007890  20210001	addi	r1,r1,#1
 8257  00007894  ac610008	sw	8(r3),r1
 8258  00007898  8fa20000	lw	r2,0(r29)
 8259  0000789c  8fa30004	lw	r3,4(r29)
 8260  000078a0  8fdffff8	lw	r31,-8(r30)
 8261  000078a4  001ee820	add	r29,r0,r30
 8262  000078a8  8fdefffc	lw	r30,-4(r30)
 8263  000078ac  4be00000	jr	r31
 8264  000078b0  54000000	nop
 8265  000078b4          	.endproc _QueueInsertLast
 8266  000078b4          	.align 2
 8267  000078b4          	.proc _QueueRemove
 8268  000078b4          	.global _QueueRemove
 8269  000078b4          	_QueueRemove:
 8270                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
 8271  000078b4  afbefffc	sw	-4(r29),r30; push fp
 8272  000078b8  001df020	add	r30,r0,r29; fp = sp
 8273  000078bc  afbffff8	sw	-8(r29),r31; push ret addr
 8274  000078c0  2fbd0010	subui	r29,r29,#16; alloc local storage
 8275  000078c4  afa20000	sw	0(r29),r2
 8276  000078c8  afa30004	sw	4(r29),r3
 8277  000078cc  8fdf0000	lw	r31,(r30)
 8278  000078d0  8fe10008	lw	r1,8(r31)
 8279  000078d4  8c210008	lw	r1,8(r1)
 8280  000078d8  6c210000	sgti	r1,r1,#0
 8281  000078dc  1020002c	beqz	r1,L44_LF6
 8282  000078e0  54000000	nop; not filled.
 8283  000078e4  8fe10004	lw	r1,4(r31)
 8284  000078e8  8fe30000	lw	r3,(r31)
 8285  000078ec  ac230000	sw	(r1),r3
 8286  000078f0  8fe10000	lw	r1,(r31)
 8287  000078f4  8fe30004	lw	r3,4(r31)
 8288  000078f8  ac230004	sw	4(r1),r3
 8289  000078fc  8fe20008	lw	r2,8(r31)
 8290  00007900  8c410008	lw	r1,8(r2)
 8291  00007904  2021ffff	addi	r1,r1,#-1
 8292  00007908  ac410008	sw	8(r2),r1
 8293  0000790c          	L44_LF6:
 8294  0000790c  20030000	addi	r3,r0,#0
 8295  00007910  afe30000	sw	(r31),r3
 8296  00007914  8fa20000	lw	r2,0(r29)
 8297  00007918  8fa30004	lw	r3,4(r29)
 8298  0000791c  8fdffff8	lw	r31,-8(r30)
 8299  00007920  001ee820	add	r29,r0,r30
 8300  00007924  8fdefffc	lw	r30,-4(r30)
 8301  00007928  4be00000	jr	r31
 8302  0000792c  54000000	nop
 8303  00007930          	.endproc _QueueRemove
 8304  00007930          	.align 2
 8305  00007930          	.proc _QueueLength
 8306  00007930          	.global _QueueLength
 8307  00007930          	_QueueLength:
 8308                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
 8309  00007930  afbefffc	sw	-4(r29),r30; push fp
 8310  00007934  001df020	add	r30,r0,r29; fp = sp
 8311  00007938  afbffff8	sw	-8(r29),r31; push ret addr
 8312  0000793c  2fbd0008	subui	r29,r29,#8; alloc local storage
 8313  00007940  8fc10000	lw	r1,(r30)
 8314  00007944  8c210008	lw	r1,8(r1)
 8315  00007948  8fdffff8	lw	r31,-8(r30)
 8316  0000794c  001ee820	add	r29,r0,r30
 8317  00007950  8fdefffc	lw	r30,-4(r30)
 8318  00007954  4be00000	jr	r31
 8319  00007958  54000000	nop
 8320  0000795c          	.endproc _QueueLength
 8321  0000795c          	.align 2
 8322  0000795c          	.proc _QueueEmpty
 8323  0000795c          	.global _QueueEmpty
 8324  0000795c          	_QueueEmpty:
 8325                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
 8326  0000795c  afbefffc	sw	-4(r29),r30; push fp
 8327  00007960  001df020	add	r30,r0,r29; fp = sp
 8328  00007964  afbffff8	sw	-8(r29),r31; push ret addr
 8329  00007968  2fbd0008	subui	r29,r29,#8; alloc local storage
 8330  0000796c  8fc10000	lw	r1,(r30)
 8331  00007970  8c210008	lw	r1,8(r1)
 8332  00007974  60210000	seqi	r1,r1,#0
 8333  00007978  8fdffff8	lw	r31,-8(r30)
 8334  0000797c  001ee820	add	r29,r0,r30
 8335  00007980  8fdefffc	lw	r30,-4(r30)
 8336  00007984  4be00000	jr	r31
 8337  00007988  54000000	nop
 8338  0000798c          	.endproc _QueueEmpty
 8339  0000798c          	.data
 8340  000114c8          	.align 2
 8341  000114c8          	LC0_LF6:
 8342  000114c8  496e6974	.ascii "Initializing queue link %d.\n\000"
 8342  000114cc  69616c69	
 8342  000114d0  7a696e67	
 8342  000114d4  20717565	
 8342  000114d8  7565206c	
 8342  000114dc  696e6b20	
 8342  000114e0  25642e0a	
 8342  000114e4  00      	
 8343  000114e5          	.text
 8344  0000798c          	.align 2
 8345  0000798c          	.proc _QueueModuleInit
 8346  0000798c          	.global _QueueModuleInit
 8347  0000798c          	_QueueModuleInit:
 8348                      ;  Function 'QueueModuleInit'; 0 bytes of locals, 4 regs to save.
 8349  0000798c  afbefffc	sw	-4(r29),r30; push fp
 8350  00007990  001df020	add	r30,r0,r29; fp = sp
 8351  00007994  afbffff8	sw	-8(r29),r31; push ret addr
 8352  00007998  2fbd0018	subui	r29,r29,#24; alloc local storage
 8353  0000799c  afa20000	sw	0(r29),r2
 8354  000079a0  afa30004	sw	4(r29),r3
 8355  000079a4  afa40008	sw	8(r29),r4
 8356  000079a8  afa5000c	sw	12(r29),r5
 8357  000079ac  23bdfff8	addi	r29,r29,#-8
 8358  000079b0  3c050001	lhi	r5,((_freeLinks)>>16)&0xffff
 8359  000079b4  24a51534	addui	r5,r5,(_freeLinks)&0xffff
 8360  000079b8  afa50000	sw	(r29),r5
 8361  000079bc  0c0000e0	jal	_QueueInit
 8362  000079c0  54000000	nop; not filled.
 8363  000079c4  20030000	addi	r3,r0,#0
 8364  000079c8  23bd0008	addi	r29,r29,#8
 8365  000079cc  3c040000	lhi	r4,((_debugstr)>>16)&0xffff
 8366  000079d0  2484fd4a	addui	r4,r4,(_debugstr)&0xffff
 8367  000079d4  3c020001	lhi	r2,((_linkpool_LF6)>>16)&0xffff
 8368  000079d8  24421540	addui	r2,r2,(_linkpool_LF6)&0xffff
 8369  000079dc          	L63_LF6:
 8370  000079dc  23bdfff8	addi	r29,r29,#-8
 8371  000079e0  afa40000	sw	(r29),r4
 8372  000079e4  20050069	addi	r5,r0,#105
 8373  000079e8  afa50004	sw	4(r29),r5
 8374  000079ec  0fffc428	jal	_dindex
 8375  000079f0  54000000	nop; not filled.
 8376  000079f4  23bd0008	addi	r29,r29,#8
 8377  000079f8  64210000	snei	r1,r1,#0
 8378  000079fc  1420002c	bnez	r1,L65_LF6
 8379  00007a00  54000000	nop; not filled.
 8380  00007a04  23bdfff8	addi	r29,r29,#-8
 8381  00007a08  afa40000	sw	(r29),r4
 8382  00007a0c  2005002b	addi	r5,r0,#43
 8383  00007a10  afa50004	sw	4(r29),r5
 8384  00007a14  0fffc400	jal	_dindex
 8385  00007a18  54000000	nop; not filled.
 8386  00007a1c  23bd0008	addi	r29,r29,#8
 8387  00007a20  64210000	snei	r1,r1,#0
 8388  00007a24  10200024	beqz	r1,L64_LF6
 8389  00007a28  54000000	nop; not filled.
 8390  00007a2c          	L65_LF6:
 8391  00007a2c  23bdfff8	addi	r29,r29,#-8
 8392  00007a30  3c050001	lhi	r5,((LC0_LF6)>>16)&0xffff
 8393  00007a34  24a514c8	addui	r5,r5,(LC0_LF6)&0xffff
 8394  00007a38  afa50000	sw	(r29),r5
 8395  00007a3c  afa30004	sw	4(r29),r3
 8396  00007a40  0c002904	jal	_printf
 8397  00007a44  54000000	nop; not filled.
 8398  00007a48  23bd0008	addi	r29,r29,#8
 8399  00007a4c          	L64_LF6:
 8400  00007a4c  20050000	addi	r5,r0,#0
 8401  00007a50  ac450000	sw	(r2),r5
 8402  00007a54  23bdfff8	addi	r29,r29,#-8
 8403  00007a58  afa20000	sw	(r29),r2
 8404  00007a5c  0c000078	jal	_QueueFreeLink
 8405  00007a60  54000000	nop; not filled.
 8406  00007a64  23bd0008	addi	r29,r29,#8
 8407  00007a68  20420010	addi	r2,r2,#16
 8408  00007a6c  20630001	addi	r3,r3,#1
 8409  00007a70  7061018f	slei	r1,r3,#399
 8410  00007a74  1420ff64	bnez	r1,L63_LF6
 8411  00007a78  54000000	nop; not filled.
 8412  00007a7c  8fa20000	lw	r2,0(r29)
 8413  00007a80  8fa30004	lw	r3,4(r29)
 8414  00007a84  8fa40008	lw	r4,8(r29)
 8415  00007a88  8fa5000c	lw	r5,12(r29)
 8416  00007a8c  8fdffff8	lw	r31,-8(r30)
 8417  00007a90  001ee820	add	r29,r0,r30
 8418  00007a94  8fdefffc	lw	r30,-4(r30)
 8419  00007a98  4be00000	jr	r31
 8420  00007a9c  54000000	nop
 8421  00007aa0          	.endproc _QueueModuleInit
 8422  00007aa0          	.align 2
 8423  00007aa0          	.proc _QueueInit
 8424  00007aa0          	.global _QueueInit
 8425  00007aa0          	_QueueInit:
 8426                      ;  Function 'QueueInit'; 0 bytes of locals, 0 regs to save.
 8427  00007aa0  afbefffc	sw	-4(r29),r30; push fp
 8428  00007aa4  001df020	add	r30,r0,r29; fp = sp
 8429  00007aa8  afbffff8	sw	-8(r29),r31; push ret addr
 8430  00007aac  2fbd0008	subui	r29,r29,#8; alloc local storage
 8431  00007ab0  8fc10000	lw	r1,(r30)
 8432  00007ab4  ac210000	sw	(r1),r1
 8433  00007ab8  ac210004	sw	4(r1),r1
 8434  00007abc  201f0000	addi	r31,r0,#0
 8435  00007ac0  ac3f0008	sw	8(r1),r31
 8436  00007ac4  8fdffff8	lw	r31,-8(r30)
 8437  00007ac8  001ee820	add	r29,r0,r30
 8438  00007acc  8fdefffc	lw	r30,-4(r30)
 8439  00007ad0  4be00000	jr	r31
 8440  00007ad4  54000000	nop
 8441  00007ad8          	.endproc _QueueInit
 8442  00007ad8          	.data
 8443  000114e5          	.align 2
 8444  000114e8          	LC1_LF6:
 8445  000114e8  25733a20	.ascii "%s: %s\n\000"
 8445  000114ec  25730a00	
 8446  000114f0          	.align 2
 8447  000114f0          	LC2_LF6:
 8448  000114f0  51756575	.ascii "QueueFreeLink\000"
 8448  000114f4  65467265	
 8448  000114f8  654c696e	
 8448  000114fc  6b00    	
 8449  000114fe          	.align 2
 8450  00011500          	LC3_LF6:
 8451  00011500  4c696e6b	.ascii "Link not empty\000"
 8451  00011504  206e6f74	
 8451  00011508  20656d70	
 8451  0001150c  747900  	
 8452  0001150f          	.text
 8453  00007ad8          	.align 2
 8454  00007ad8          	.proc _QueueFreeLink
 8455  00007ad8          	.global _QueueFreeLink
 8456  00007ad8          	_QueueFreeLink:
 8457                      ;  Function 'QueueFreeLink'; 0 bytes of locals, 3 regs to save.
 8458  00007ad8  afbefffc	sw	-4(r29),r30; push fp
 8459  00007adc  001df020	add	r30,r0,r29; fp = sp
 8460  00007ae0  afbffff8	sw	-8(r29),r31; push ret addr
 8461  00007ae4  2fbd0018	subui	r29,r29,#24; alloc local storage
 8462  00007ae8  afa20000	sw	0(r29),r2
 8463  00007aec  afa30004	sw	4(r29),r3
 8464  00007af0  afa40008	sw	8(r29),r4
 8465  00007af4  8fc30000	lw	r3,(r30)
 8466  00007af8  8c610000	lw	r1,(r3)
 8467  00007afc  64210000	snei	r1,r1,#0
 8468  00007b00  10200038	beqz	r1,L77_LF6
 8469  00007b04  54000000	nop; not filled.
 8470  00007b08  23bdfff0	addi	r29,r29,#-16
 8471  00007b0c  3c040001	lhi	r4,((LC1_LF6)>>16)&0xffff
 8472  00007b10  248414e8	addui	r4,r4,(LC1_LF6)&0xffff
 8473  00007b14  afa40000	sw	(r29),r4
 8474  00007b18  3c010001	lhi	r1,((LC2_LF6)>>16)&0xffff
 8475  00007b1c  242114f0	addui	r1,r1,(LC2_LF6)&0xffff
 8476  00007b20  afa10004	sw	4(r29),r1
 8477  00007b24  3c040001	lhi	r4,((LC3_LF6)>>16)&0xffff
 8478  00007b28  24841500	addui	r4,r4,(LC3_LF6)&0xffff
 8479  00007b2c  afa40008	sw	8(r29),r4
 8480  00007b30  0c002814	jal	_printf
 8481  00007b34  54000000	nop; not filled.
 8482  00007b38  23bd0010	addi	r29,r29,#16
 8483  00007b3c          	L77_LF6:
 8484  00007b3c  3c020001	lhi	r2,((_freeLinks)>>16)&0xffff
 8485  00007b40  24421534	addui	r2,r2,(_freeLinks)&0xffff
 8486  00007b44  8c410004	lw	r1,4(r2)
 8487  00007b48  ac620008	sw	8(r3),r2
 8488  00007b4c  ac610004	sw	4(r3),r1
 8489  00007b50  8c240000	lw	r4,(r1)
 8490  00007b54  ac640000	sw	(r3),r4
 8491  00007b58  ac230000	sw	(r1),r3
 8492  00007b5c  8c610000	lw	r1,(r3)
 8493  00007b60  ac230004	sw	4(r1),r3
 8494  00007b64  8c410008	lw	r1,8(r2)
 8495  00007b68  20210001	addi	r1,r1,#1
 8496  00007b6c  ac410008	sw	8(r2),r1
 8497  00007b70  8fa20000	lw	r2,0(r29)
 8498  00007b74  8fa30004	lw	r3,4(r29)
 8499  00007b78  8fa40008	lw	r4,8(r29)
 8500  00007b7c  8fdffff8	lw	r31,-8(r30)
 8501  00007b80  001ee820	add	r29,r0,r30
 8502  00007b84  8fdefffc	lw	r30,-4(r30)
 8503  00007b88  4be00000	jr	r31
 8504  00007b8c  54000000	nop
 8505  00007b90          	.endproc _QueueFreeLink
 8506  00007b90          	.data
 8507  0001150f          	.align 2
 8508  00011510          	LC4_LF6:
 8509  00011510  51756575	.ascii "QueueAllocLink\000"
 8509  00011514  65416c6c	
 8509  00011518  6f634c69	
 8509  0001151c  6e6b00  	
 8510  0001151f          	.align 2
 8511  00011520          	LC5_LF6:
 8512  00011520  4c696e6b	.ascii "Link not allocated!\000"
 8512  00011524  206e6f74	
 8512  00011528  20616c6c	
 8512  0001152c  6f636174	
 8512  00011530  65642100	
 8513  00011534          	.text
 8514  00007b90          	.align 2
 8515  00007b90          	.proc _QueueAllocLink
 8516  00007b90          	.global _QueueAllocLink
 8517  00007b90          	_QueueAllocLink:
 8518                      ;  Function 'QueueAllocLink'; 0 bytes of locals, 3 regs to save.
 8519  00007b90  afbefffc	sw	-4(r29),r30; push fp
 8520  00007b94  001df020	add	r30,r0,r29; fp = sp
 8521  00007b98  afbffff8	sw	-8(r29),r31; push ret addr
 8522  00007b9c  2fbd0018	subui	r29,r29,#24; alloc local storage
 8523  00007ba0  afa20000	sw	0(r29),r2
 8524  00007ba4  afa30004	sw	4(r29),r3
 8525  00007ba8  afa40008	sw	8(r29),r4
 8526  00007bac  3c020001	lhi	r2,((_freeLinks)>>16)&0xffff
 8527  00007bb0  24421534	addui	r2,r2,(_freeLinks)&0xffff
 8528  00007bb4  8c410008	lw	r1,8(r2)
 8529  00007bb8  60210000	seqi	r1,r1,#0
 8530  00007bbc  14200054	bnez	r1,L92_LF6
 8531  00007bc0  54000000	nop; not filled.
 8532  00007bc4  8c430000	lw	r3,(r2)
 8533  00007bc8  8c610008	lw	r1,8(r3)
 8534  00007bcc  8c210008	lw	r1,8(r1)
 8535  00007bd0  6c210000	sgti	r1,r1,#0
 8536  00007bd4  1020002c	beqz	r1,L97_LF6
 8537  00007bd8  54000000	nop; not filled.
 8538  00007bdc  8c610004	lw	r1,4(r3)
 8539  00007be0  8c640000	lw	r4,(r3)
 8540  00007be4  ac240000	sw	(r1),r4
 8541  00007be8  8c610000	lw	r1,(r3)
 8542  00007bec  8c640004	lw	r4,4(r3)
 8543  00007bf0  ac240004	sw	4(r1),r4
 8544  00007bf4  8c620008	lw	r2,8(r3)
 8545  00007bf8  8c410008	lw	r1,8(r2)
 8546  00007bfc  2021ffff	addi	r1,r1,#-1
 8547  00007c00  ac410008	sw	8(r2),r1
 8548  00007c04          	L97_LF6:
 8549  00007c04  20040000	addi	r4,r0,#0
 8550  00007c08  ac640000	sw	(r3),r4
 8551  00007c0c  08000008	j	L98_LF6
 8552  00007c10  54000000	nop; not filled.
 8553  00007c14          	L92_LF6:
 8554  00007c14  20030000	addi	r3,r0,#0
 8555  00007c18          	L98_LF6:
 8556  00007c18  64610000	snei	r1,r3,#0
 8557  00007c1c  14200038	bnez	r1,L100_LF6
 8558  00007c20  54000000	nop; not filled.
 8559  00007c24  23bdfff0	addi	r29,r29,#-16
 8560  00007c28  3c040001	lhi	r4,((LC1_LF6)>>16)&0xffff
 8561  00007c2c  248414e8	addui	r4,r4,(LC1_LF6)&0xffff
 8562  00007c30  afa40000	sw	(r29),r4
 8563  00007c34  3c010001	lhi	r1,((LC4_LF6)>>16)&0xffff
 8564  00007c38  24211510	addui	r1,r1,(LC4_LF6)&0xffff
 8565  00007c3c  afa10004	sw	4(r29),r1
 8566  00007c40  3c040001	lhi	r4,((LC5_LF6)>>16)&0xffff
 8567  00007c44  24841520	addui	r4,r4,(LC5_LF6)&0xffff
 8568  00007c48  afa40008	sw	8(r29),r4
 8569  00007c4c  0c0026f8	jal	_printf
 8570  00007c50  54000000	nop; not filled.
 8571  00007c54  23bd0010	addi	r29,r29,#16
 8572  00007c58          	L100_LF6:
 8573  00007c58  00030820	add	r1,r0,r3
 8574  00007c5c  8fa20000	lw	r2,0(r29)
 8575  00007c60  8fa30004	lw	r3,4(r29)
 8576  00007c64  8fa40008	lw	r4,8(r29)
 8577  00007c68  8fdffff8	lw	r31,-8(r30)
 8578  00007c6c  001ee820	add	r29,r0,r30
 8579  00007c70  8fdefffc	lw	r30,-4(r30)
 8580  00007c74  4be00000	jr	r31
 8581  00007c78  54000000	nop
 8582  00007c7c          	.endproc _QueueAllocLink
 8583  00007c7c          	.data
 8584  00011534          	.align 2
 8585  00011534          	.global _freeLinks
 8586  00011534          	_freeLinks:
 8587  00011534          	.space 12
 8588  00011540          	.align 2
 8589  00011540          	_linkpool_LF6:
 8590  00011540          	.space 6400
 8591                      ; Compiled by GCC
 8592  00012e40          	.text
 8593  00007c7c          	.align 2
 8594  00007c7c          	.proc _isspace
 8595  00007c7c          	.global _isspace
 8596  00007c7c          	_isspace:
 8597                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 8598  00007c7c  afbefffc	sw	-4(r29),r30; push fp
 8599  00007c80  001df020	add	r30,r0,r29; fp = sp
 8600  00007c84  afbffff8	sw	-8(r29),r31; push ret addr
 8601  00007c88  2fbd0010	subui	r29,r29,#16; alloc local storage
 8602  00007c8c  afa20000	sw	0(r29),r2
 8603  00007c90  83c20003	lb	r2,3(r30)
 8604  00007c94  201f0000	addi	r31,r0,#0
 8605  00007c98  304100ff	andi	r1,r2,#0x00ff
 8606  00007c9c  60210020	seqi	r1,r1,#32
 8607  00007ca0  14200018	bnez	r1,L6_LF7
 8608  00007ca4  54000000	nop; not filled.
 8609  00007ca8  2041fff7	addi	r1,r2,#-9
 8610  00007cac  302100ff	andi	r1,r1,#0x00ff
 8611  00007cb0  70210001	sleui	r1,r1,#1
 8612  00007cb4  10200008	beqz	r1,L5_LF7
 8613  00007cb8  54000000	nop; not filled.
 8614  00007cbc          	L6_LF7:
 8615  00007cbc  201f0001	addi	r31,r0,#1
 8616  00007cc0          	L5_LF7:
 8617  00007cc0  001f0820	add	r1,r0,r31
 8618  00007cc4  8fa20000	lw	r2,0(r29)
 8619  00007cc8  8fdffff8	lw	r31,-8(r30)
 8620  00007ccc  001ee820	add	r29,r0,r30
 8621  00007cd0  8fdefffc	lw	r30,-4(r30)
 8622  00007cd4  4be00000	jr	r31
 8623  00007cd8  54000000	nop
 8624  00007cdc          	.endproc _isspace
 8625  00007cdc          	.align 2
 8626  00007cdc          	.proc _isxdigit
 8627  00007cdc          	.global _isxdigit
 8628  00007cdc          	_isxdigit:
 8629                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 8630  00007cdc  afbefffc	sw	-4(r29),r30; push fp
 8631  00007ce0  001df020	add	r30,r0,r29; fp = sp
 8632  00007ce4  afbffff8	sw	-8(r29),r31; push ret addr
 8633  00007ce8  2fbd0010	subui	r29,r29,#16; alloc local storage
 8634  00007cec  afa20000	sw	0(r29),r2
 8635  00007cf0  83df0003	lb	r31,3(r30)
 8636  00007cf4  20020000	addi	r2,r0,#0
 8637  00007cf8  23e1ffd0	addi	r1,r31,#-48
 8638  00007cfc  302100ff	andi	r1,r1,#0x00ff
 8639  00007d00  70210009	sleui	r1,r1,#9
 8640  00007d04  14200028	bnez	r1,L12_LF7
 8641  00007d08  54000000	nop; not filled.
 8642  00007d0c  23e1ff9f	addi	r1,r31,#-97
 8643  00007d10  302100ff	andi	r1,r1,#0x00ff
 8644  00007d14  70210005	sleui	r1,r1,#5
 8645  00007d18  14200014	bnez	r1,L12_LF7
 8646  00007d1c  54000000	nop; not filled.
 8647  00007d20  33e100ff	andi	r1,r31,#0x00ff
 8648  00007d24  64210041	snei	r1,r1,#65
 8649  00007d28  14200008	bnez	r1,L11_LF7
 8650  00007d2c  54000000	nop; not filled.
 8651  00007d30          	L12_LF7:
 8652  00007d30  20020001	addi	r2,r0,#1
 8653  00007d34          	L11_LF7:
 8654  00007d34  00020820	add	r1,r0,r2
 8655  00007d38  8fa20000	lw	r2,0(r29)
 8656  00007d3c  8fdffff8	lw	r31,-8(r30)
 8657  00007d40  001ee820	add	r29,r0,r30
 8658  00007d44  8fdefffc	lw	r30,-4(r30)
 8659  00007d48  4be00000	jr	r31
 8660  00007d4c  54000000	nop
 8661  00007d50          	.endproc _isxdigit
 8662  00007d50          	.align 2
 8663  00007d50          	.proc _DisableIntrs
 8664  00007d50          	.global _DisableIntrs
 8665  00007d50          	_DisableIntrs:
 8666                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
 8667  00007d50  afbefffc	sw	-4(r29),r30; push fp
 8668  00007d54  001df020	add	r30,r0,r29; fp = sp
 8669  00007d58  afbffff8	sw	-8(r29),r31; push ret addr
 8670  00007d5c  2fbd0010	subui	r29,r29,#16; alloc local storage
 8671  00007d60  afa20000	sw	0(r29),r2
 8672  00007d64  23bdfff8	addi	r29,r29,#-8
 8673  00007d68  2002000f	addi	r2,r0,#15
 8674  00007d6c  afa20000	sw	(r29),r2
 8675  00007d70  0fff9514	jal	_SetIntrs
 8676  00007d74  54000000	nop; not filled.
 8677  00007d78  23bd0008	addi	r29,r29,#8
 8678  00007d7c  8fa20000	lw	r2,0(r29)
 8679  00007d80  8fdffff8	lw	r31,-8(r30)
 8680  00007d84  001ee820	add	r29,r0,r30
 8681  00007d88  8fdefffc	lw	r30,-4(r30)
 8682  00007d8c  4be00000	jr	r31
 8683  00007d90  54000000	nop
 8684  00007d94          	.endproc _DisableIntrs
 8685  00007d94          	.align 2
 8686  00007d94          	.proc _EnableIntrs
 8687  00007d94          	.global _EnableIntrs
 8688  00007d94          	_EnableIntrs:
 8689                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
 8690  00007d94  afbefffc	sw	-4(r29),r30; push fp
 8691  00007d98  001df020	add	r30,r0,r29; fp = sp
 8692  00007d9c  afbffff8	sw	-8(r29),r31; push ret addr
 8693  00007da0  2fbd0010	subui	r29,r29,#16; alloc local storage
 8694  00007da4  afa20000	sw	0(r29),r2
 8695  00007da8  23bdfff8	addi	r29,r29,#-8
 8696  00007dac  20020000	addi	r2,r0,#0
 8697  00007db0  afa20000	sw	(r29),r2
 8698  00007db4  0fff94d0	jal	_SetIntrs
 8699  00007db8  54000000	nop; not filled.
 8700  00007dbc  23bd0008	addi	r29,r29,#8
 8701  00007dc0  8fa20000	lw	r2,0(r29)
 8702  00007dc4  8fdffff8	lw	r31,-8(r30)
 8703  00007dc8  001ee820	add	r29,r0,r30
 8704  00007dcc  8fdefffc	lw	r30,-4(r30)
 8705  00007dd0  4be00000	jr	r31
 8706  00007dd4  54000000	nop
 8707  00007dd8          	.endproc _EnableIntrs
 8708  00007dd8          	.align 2
 8709  00007dd8          	.proc _RestoreIntrs
 8710  00007dd8          	.global _RestoreIntrs
 8711  00007dd8          	_RestoreIntrs:
 8712                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
 8713  00007dd8  afbefffc	sw	-4(r29),r30; push fp
 8714  00007ddc  001df020	add	r30,r0,r29; fp = sp
 8715  00007de0  afbffff8	sw	-8(r29),r31; push ret addr
 8716  00007de4  2fbd0010	subui	r29,r29,#16; alloc local storage
 8717  00007de8  afa20000	sw	0(r29),r2
 8718  00007dec  23bdfff8	addi	r29,r29,#-8
 8719  00007df0  8fc20000	lw	r2,(r30)
 8720  00007df4  afa20000	sw	(r29),r2
 8721  00007df8  0fff948c	jal	_SetIntrs
 8722  00007dfc  54000000	nop; not filled.
 8723  00007e00  23bd0008	addi	r29,r29,#8
 8724  00007e04  8fa20000	lw	r2,0(r29)
 8725  00007e08  8fdffff8	lw	r31,-8(r30)
 8726  00007e0c  001ee820	add	r29,r0,r30
 8727  00007e10  8fdefffc	lw	r30,-4(r30)
 8728  00007e14  4be00000	jr	r31
 8729  00007e18  54000000	nop
 8730  00007e1c          	.endproc _RestoreIntrs
 8731  00007e1c          	.align 2
 8732  00007e1c          	.proc _QueueLinkInit
 8733  00007e1c          	.global _QueueLinkInit
 8734  00007e1c          	_QueueLinkInit:
 8735                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
 8736  00007e1c  afbefffc	sw	-4(r29),r30; push fp
 8737  00007e20  001df020	add	r30,r0,r29; fp = sp
 8738  00007e24  afbffff8	sw	-8(r29),r31; push ret addr
 8739  00007e28  2fbd0010	subui	r29,r29,#16; alloc local storage
 8740  00007e2c  afa20000	sw	0(r29),r2
 8741  00007e30  8fc10000	lw	r1,(r30)
 8742  00007e34  8fc20004	lw	r2,4(r30)
 8743  00007e38  201f0000	addi	r31,r0,#0
 8744  00007e3c  ac3f0000	sw	(r1),r31
 8745  00007e40  ac22000c	sw	12(r1),r2
 8746  00007e44  8fa20000	lw	r2,0(r29)
 8747  00007e48  8fdffff8	lw	r31,-8(r30)
 8748  00007e4c  001ee820	add	r29,r0,r30
 8749  00007e50  8fdefffc	lw	r30,-4(r30)
 8750  00007e54  4be00000	jr	r31
 8751  00007e58  54000000	nop
 8752  00007e5c          	.endproc _QueueLinkInit
 8753  00007e5c          	.align 2
 8754  00007e5c          	.proc _QueueNext
 8755  00007e5c          	.global _QueueNext
 8756  00007e5c          	_QueueNext:
 8757                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
 8758  00007e5c  afbefffc	sw	-4(r29),r30; push fp
 8759  00007e60  001df020	add	r30,r0,r29; fp = sp
 8760  00007e64  afbffff8	sw	-8(r29),r31; push ret addr
 8761  00007e68  2fbd0008	subui	r29,r29,#8; alloc local storage
 8762  00007e6c  8fc10000	lw	r1,(r30)
 8763  00007e70  8c210000	lw	r1,(r1)
 8764  00007e74  8fdffff8	lw	r31,-8(r30)
 8765  00007e78  001ee820	add	r29,r0,r30
 8766  00007e7c  8fdefffc	lw	r30,-4(r30)
 8767  00007e80  4be00000	jr	r31
 8768  00007e84  54000000	nop
 8769  00007e88          	.endproc _QueueNext
 8770  00007e88          	.align 2
 8771  00007e88          	.proc _QueuePrev
 8772  00007e88          	.global _QueuePrev
 8773  00007e88          	_QueuePrev:
 8774                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
 8775  00007e88  afbefffc	sw	-4(r29),r30; push fp
 8776  00007e8c  001df020	add	r30,r0,r29; fp = sp
 8777  00007e90  afbffff8	sw	-8(r29),r31; push ret addr
 8778  00007e94  2fbd0008	subui	r29,r29,#8; alloc local storage
 8779  00007e98  8fc10000	lw	r1,(r30)
 8780  00007e9c  8c210004	lw	r1,4(r1)
 8781  00007ea0  8fdffff8	lw	r31,-8(r30)
 8782  00007ea4  001ee820	add	r29,r0,r30
 8783  00007ea8  8fdefffc	lw	r30,-4(r30)
 8784  00007eac  4be00000	jr	r31
 8785  00007eb0  54000000	nop
 8786  00007eb4          	.endproc _QueuePrev
 8787  00007eb4          	.align 2
 8788  00007eb4          	.proc _QueueFirst
 8789  00007eb4          	.global _QueueFirst
 8790  00007eb4          	_QueueFirst:
 8791                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
 8792  00007eb4  afbefffc	sw	-4(r29),r30; push fp
 8793  00007eb8  001df020	add	r30,r0,r29; fp = sp
 8794  00007ebc  afbffff8	sw	-8(r29),r31; push ret addr
 8795  00007ec0  2fbd0008	subui	r29,r29,#8; alloc local storage
 8796  00007ec4  8fc10000	lw	r1,(r30)
 8797  00007ec8  8c210000	lw	r1,(r1)
 8798  00007ecc  8fdffff8	lw	r31,-8(r30)
 8799  00007ed0  001ee820	add	r29,r0,r30
 8800  00007ed4  8fdefffc	lw	r30,-4(r30)
 8801  00007ed8  4be00000	jr	r31
 8802  00007edc  54000000	nop
 8803  00007ee0          	.endproc _QueueFirst
 8804  00007ee0          	.align 2
 8805  00007ee0          	.proc _QueueLast
 8806  00007ee0          	.global _QueueLast
 8807  00007ee0          	_QueueLast:
 8808                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
 8809  00007ee0  afbefffc	sw	-4(r29),r30; push fp
 8810  00007ee4  001df020	add	r30,r0,r29; fp = sp
 8811  00007ee8  afbffff8	sw	-8(r29),r31; push ret addr
 8812  00007eec  2fbd0008	subui	r29,r29,#8; alloc local storage
 8813  00007ef0  8fc10000	lw	r1,(r30)
 8814  00007ef4  8c210004	lw	r1,4(r1)
 8815  00007ef8  8fdffff8	lw	r31,-8(r30)
 8816  00007efc  001ee820	add	r29,r0,r30
 8817  00007f00  8fdefffc	lw	r30,-4(r30)
 8818  00007f04  4be00000	jr	r31
 8819  00007f08  54000000	nop
 8820  00007f0c          	.endproc _QueueLast
 8821  00007f0c          	.align 2
 8822  00007f0c          	.proc _QueueInsertAfter
 8823  00007f0c          	.global _QueueInsertAfter
 8824  00007f0c          	_QueueInsertAfter:
 8825                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
 8826  00007f0c  afbefffc	sw	-4(r29),r30; push fp
 8827  00007f10  001df020	add	r30,r0,r29; fp = sp
 8828  00007f14  afbffff8	sw	-8(r29),r31; push ret addr
 8829  00007f18  2fbd0010	subui	r29,r29,#16; alloc local storage
 8830  00007f1c  afa20000	sw	0(r29),r2
 8831  00007f20  afa30004	sw	4(r29),r3
 8832  00007f24  8fc30000	lw	r3,(r30)
 8833  00007f28  8fc20004	lw	r2,4(r30)
 8834  00007f2c  8fc10008	lw	r1,8(r30)
 8835  00007f30  ac230008	sw	8(r1),r3
 8836  00007f34  ac220004	sw	4(r1),r2
 8837  00007f38  8c5f0000	lw	r31,(r2)
 8838  00007f3c  ac3f0000	sw	(r1),r31
 8839  00007f40  ac410000	sw	(r2),r1
 8840  00007f44  8c220000	lw	r2,(r1)
 8841  00007f48  ac410004	sw	4(r2),r1
 8842  00007f4c  8c610008	lw	r1,8(r3)
 8843  00007f50  20210001	addi	r1,r1,#1
 8844  00007f54  ac610008	sw	8(r3),r1
 8845  00007f58  8fa20000	lw	r2,0(r29)
 8846  00007f5c  8fa30004	lw	r3,4(r29)
 8847  00007f60  8fdffff8	lw	r31,-8(r30)
 8848  00007f64  001ee820	add	r29,r0,r30
 8849  00007f68  8fdefffc	lw	r30,-4(r30)
 8850  00007f6c  4be00000	jr	r31
 8851  00007f70  54000000	nop
 8852  00007f74          	.endproc _QueueInsertAfter
 8853  00007f74          	.align 2
 8854  00007f74          	.proc _QueueInsertFirst
 8855  00007f74          	.global _QueueInsertFirst
 8856  00007f74          	_QueueInsertFirst:
 8857                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
 8858  00007f74  afbefffc	sw	-4(r29),r30; push fp
 8859  00007f78  001df020	add	r30,r0,r29; fp = sp
 8860  00007f7c  afbffff8	sw	-8(r29),r31; push ret addr
 8861  00007f80  2fbd0010	subui	r29,r29,#16; alloc local storage
 8862  00007f84  afa20000	sw	0(r29),r2
 8863  00007f88  afa30004	sw	4(r29),r3
 8864  00007f8c  8fc30000	lw	r3,(r30)
 8865  00007f90  8fc10004	lw	r1,4(r30)
 8866  00007f94  ac230008	sw	8(r1),r3
 8867  00007f98  ac230004	sw	4(r1),r3
 8868  00007f9c  8c7f0000	lw	r31,(r3)
 8869  00007fa0  ac3f0000	sw	(r1),r31
 8870  00007fa4  ac610000	sw	(r3),r1
 8871  00007fa8  8c220000	lw	r2,(r1)
 8872  00007fac  ac410004	sw	4(r2),r1
 8873  00007fb0  8c610008	lw	r1,8(r3)
 8874  00007fb4  20210001	addi	r1,r1,#1
 8875  00007fb8  ac610008	sw	8(r3),r1
 8876  00007fbc  8fa20000	lw	r2,0(r29)
 8877  00007fc0  8fa30004	lw	r3,4(r29)
 8878  00007fc4  8fdffff8	lw	r31,-8(r30)
 8879  00007fc8  001ee820	add	r29,r0,r30
 8880  00007fcc  8fdefffc	lw	r30,-4(r30)
 8881  00007fd0  4be00000	jr	r31
 8882  00007fd4  54000000	nop
 8883  00007fd8          	.endproc _QueueInsertFirst
 8884  00007fd8          	.align 2
 8885  00007fd8          	.proc _QueueInsertLast
 8886  00007fd8          	.global _QueueInsertLast
 8887  00007fd8          	_QueueInsertLast:
 8888                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
 8889  00007fd8  afbefffc	sw	-4(r29),r30; push fp
 8890  00007fdc  001df020	add	r30,r0,r29; fp = sp
 8891  00007fe0  afbffff8	sw	-8(r29),r31; push ret addr
 8892  00007fe4  2fbd0010	subui	r29,r29,#16; alloc local storage
 8893  00007fe8  afa20000	sw	0(r29),r2
 8894  00007fec  afa30004	sw	4(r29),r3
 8895  00007ff0  8fc30000	lw	r3,(r30)
 8896  00007ff4  8fc10004	lw	r1,4(r30)
 8897  00007ff8  8c620004	lw	r2,4(r3)
 8898  00007ffc  ac230008	sw	8(r1),r3
 8899  00008000  ac220004	sw	4(r1),r2
 8900  00008004  8c5f0000	lw	r31,(r2)
 8901  00008008  ac3f0000	sw	(r1),r31
 8902  0000800c  ac410000	sw	(r2),r1
 8903  00008010  8c220000	lw	r2,(r1)
 8904  00008014  ac410004	sw	4(r2),r1
 8905  00008018  8c610008	lw	r1,8(r3)
 8906  0000801c  20210001	addi	r1,r1,#1
 8907  00008020  ac610008	sw	8(r3),r1
 8908  00008024  8fa20000	lw	r2,0(r29)
 8909  00008028  8fa30004	lw	r3,4(r29)
 8910  0000802c  8fdffff8	lw	r31,-8(r30)
 8911  00008030  001ee820	add	r29,r0,r30
 8912  00008034  8fdefffc	lw	r30,-4(r30)
 8913  00008038  4be00000	jr	r31
 8914  0000803c  54000000	nop
 8915  00008040          	.endproc _QueueInsertLast
 8916  00008040          	.align 2
 8917  00008040          	.proc _QueueRemove
 8918  00008040          	.global _QueueRemove
 8919  00008040          	_QueueRemove:
 8920                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
 8921  00008040  afbefffc	sw	-4(r29),r30; push fp
 8922  00008044  001df020	add	r30,r0,r29; fp = sp
 8923  00008048  afbffff8	sw	-8(r29),r31; push ret addr
 8924  0000804c  2fbd0010	subui	r29,r29,#16; alloc local storage
 8925  00008050  afa20000	sw	0(r29),r2
 8926  00008054  afa30004	sw	4(r29),r3
 8927  00008058  8fdf0000	lw	r31,(r30)
 8928  0000805c  8fe10008	lw	r1,8(r31)
 8929  00008060  8c210008	lw	r1,8(r1)
 8930  00008064  6c210000	sgti	r1,r1,#0
 8931  00008068  1020002c	beqz	r1,L44_LF7
 8932  0000806c  54000000	nop; not filled.
 8933  00008070  8fe10004	lw	r1,4(r31)
 8934  00008074  8fe30000	lw	r3,(r31)
 8935  00008078  ac230000	sw	(r1),r3
 8936  0000807c  8fe10000	lw	r1,(r31)
 8937  00008080  8fe30004	lw	r3,4(r31)
 8938  00008084  ac230004	sw	4(r1),r3
 8939  00008088  8fe20008	lw	r2,8(r31)
 8940  0000808c  8c410008	lw	r1,8(r2)
 8941  00008090  2021ffff	addi	r1,r1,#-1
 8942  00008094  ac410008	sw	8(r2),r1
 8943  00008098          	L44_LF7:
 8944  00008098  20030000	addi	r3,r0,#0
 8945  0000809c  afe30000	sw	(r31),r3
 8946  000080a0  8fa20000	lw	r2,0(r29)
 8947  000080a4  8fa30004	lw	r3,4(r29)
 8948  000080a8  8fdffff8	lw	r31,-8(r30)
 8949  000080ac  001ee820	add	r29,r0,r30
 8950  000080b0  8fdefffc	lw	r30,-4(r30)
 8951  000080b4  4be00000	jr	r31
 8952  000080b8  54000000	nop
 8953  000080bc          	.endproc _QueueRemove
 8954  000080bc          	.align 2
 8955  000080bc          	.proc _QueueLength
 8956  000080bc          	.global _QueueLength
 8957  000080bc          	_QueueLength:
 8958                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
 8959  000080bc  afbefffc	sw	-4(r29),r30; push fp
 8960  000080c0  001df020	add	r30,r0,r29; fp = sp
 8961  000080c4  afbffff8	sw	-8(r29),r31; push ret addr
 8962  000080c8  2fbd0008	subui	r29,r29,#8; alloc local storage
 8963  000080cc  8fc10000	lw	r1,(r30)
 8964  000080d0  8c210008	lw	r1,8(r1)
 8965  000080d4  8fdffff8	lw	r31,-8(r30)
 8966  000080d8  001ee820	add	r29,r0,r30
 8967  000080dc  8fdefffc	lw	r30,-4(r30)
 8968  000080e0  4be00000	jr	r31
 8969  000080e4  54000000	nop
 8970  000080e8          	.endproc _QueueLength
 8971  000080e8          	.align 2
 8972  000080e8          	.proc _QueueEmpty
 8973  000080e8          	.global _QueueEmpty
 8974  000080e8          	_QueueEmpty:
 8975                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
 8976  000080e8  afbefffc	sw	-4(r29),r30; push fp
 8977  000080ec  001df020	add	r30,r0,r29; fp = sp
 8978  000080f0  afbffff8	sw	-8(r29),r31; push ret addr
 8979  000080f4  2fbd0008	subui	r29,r29,#8; alloc local storage
 8980  000080f8  8fc10000	lw	r1,(r30)
 8981  000080fc  8c210008	lw	r1,8(r1)
 8982  00008100  60210000	seqi	r1,r1,#0
 8983  00008104  8fdffff8	lw	r31,-8(r30)
 8984  00008108  001ee820	add	r29,r0,r30
 8985  0000810c  8fdefffc	lw	r30,-4(r30)
 8986  00008110  4be00000	jr	r31
 8987  00008114  54000000	nop
 8988  00008118          	.endproc _QueueEmpty
 8989  00008118          	.align 2
 8990  00008118          	.proc _SemInit
 8991  00008118          	.global _SemInit
 8992  00008118          	_SemInit:
 8993                      ;  Function 'SemInit'; 0 bytes of locals, 2 regs to save.
 8994  00008118  afbefffc	sw	-4(r29),r30; push fp
 8995  0000811c  001df020	add	r30,r0,r29; fp = sp
 8996  00008120  afbffff8	sw	-8(r29),r31; push ret addr
 8997  00008124  2fbd0010	subui	r29,r29,#16; alloc local storage
 8998  00008128  afa20000	sw	0(r29),r2
 8999  0000812c  afa30004	sw	4(r29),r3
 9000  00008130  8fc20000	lw	r2,(r30)
 9001  00008134  8fc30004	lw	r3,4(r30)
 9002  00008138  23bdfff8	addi	r29,r29,#-8
 9003  0000813c  afa20000	sw	(r29),r2
 9004  00008140  0ffff95c	jal	_QueueInit
 9005  00008144  54000000	nop; not filled.
 9006  00008148  ac43000c	sw	12(r2),r3
 9007  0000814c  23bd0008	addi	r29,r29,#8
 9008  00008150  8fa20000	lw	r2,0(r29)
 9009  00008154  8fa30004	lw	r3,4(r29)
 9010  00008158  8fdffff8	lw	r31,-8(r30)
 9011  0000815c  001ee820	add	r29,r0,r30
 9012  00008160  8fdefffc	lw	r30,-4(r30)
 9013  00008164  4be00000	jr	r31
 9014  00008168  54000000	nop
 9015  0000816c          	.endproc _SemInit
 9016  0000816c          	.data
 9017  00012e40          	.align 2
 9018  00012e40          	LC0_LF7:
 9019  00012e40  4f6c6420	.ascii "Old interrupt value was 0x%x.\n\000"
 9019  00012e44  696e7465	
 9019  00012e48  72727570	
 9019  00012e4c  74207661	
 9019  00012e50  6c756520	
 9019  00012e54  77617320	
 9019  00012e58  30782578	
 9019  00012e5c  2e0a00  	
 9020  00012e5f          	.align 2
 9021  00012e60          	LC1_LF7:
 9022  00012e60  50726f63	.ascii "Proc 0x%x waiting on sem 0x%x, count=%d.\n\000"
 9022  00012e64  20307825	
 9022  00012e68  78207761	
 9022  00012e6c  6974696e	
 9022  00012e70  67206f6e	
 9022  00012e74  2073656d	
 9022  00012e78  20307825	
 9022  00012e7c  782c2063	
 9022  00012e80  6f756e74	
 9022  00012e84  3d25642e	
 9022  00012e88  0a00    	
 9023  00012e8a          	.align 2
 9024  00012e8c          	LC2_LF7:
 9025  00012e8c  53757370	.ascii "Suspending current proc (0x%x).\n\000"
 9025  00012e90  656e6469	
 9025  00012e94  6e672063	
 9025  00012e98  75727265	
 9025  00012e9c  6e742070	
 9025  00012ea0  726f6320	
 9025  00012ea4  28307825	
 9025  00012ea8  78292e0a	
 9025  00012eac  00      	
 9026  00012ead          	.text
 9027  0000816c          	.align 2
 9028  0000816c          	.proc _SemWait
 9029  0000816c          	.global _SemWait
 9030  0000816c          	_SemWait:
 9031                      ;  Function 'SemWait'; 0 bytes of locals, 6 regs to save.
 9032  0000816c  afbefffc	sw	-4(r29),r30; push fp
 9033  00008170  001df020	add	r30,r0,r29; fp = sp
 9034  00008174  afbffff8	sw	-8(r29),r31; push ret addr
 9035  00008178  2fbd0020	subui	r29,r29,#32; alloc local storage
 9036  0000817c  afa20000	sw	0(r29),r2
 9037  00008180  afa30004	sw	4(r29),r3
 9038  00008184  afa40008	sw	8(r29),r4
 9039  00008188  afa5000c	sw	12(r29),r5
 9040  0000818c  afa60010	sw	16(r29),r6
 9041  00008190  afa70014	sw	20(r29),r7
 9042  00008194  8fc40000	lw	r4,(r30)
 9043  00008198  23bdfff8	addi	r29,r29,#-8
 9044  0000819c  2007000f	addi	r7,r0,#15
 9045  000081a0  afa70000	sw	(r29),r7
 9046  000081a4  0fff90e0	jal	_SetIntrs
 9047  000081a8  54000000	nop; not filled.
 9048  000081ac  00013020	add	r6,r0,r1
 9049  000081b0  23bd0008	addi	r29,r29,#8
 9050  000081b4  23bdfff8	addi	r29,r29,#-8
 9051  000081b8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 9052  000081bc  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 9053  000081c0  afa20000	sw	(r29),r2
 9054  000081c4  20070049	addi	r7,r0,#73
 9055  000081c8  afa70004	sw	4(r29),r7
 9056  000081cc  0fffbc48	jal	_dindex
 9057  000081d0  54000000	nop; not filled.
 9058  000081d4  23bd0008	addi	r29,r29,#8
 9059  000081d8  64210000	snei	r1,r1,#0
 9060  000081dc  1420002c	bnez	r1,L56_LF7
 9061  000081e0  54000000	nop; not filled.
 9062  000081e4  23bdfff8	addi	r29,r29,#-8
 9063  000081e8  afa20000	sw	(r29),r2
 9064  000081ec  2007002b	addi	r7,r0,#43
 9065  000081f0  afa70004	sw	4(r29),r7
 9066  000081f4  0fffbc20	jal	_dindex
 9067  000081f8  54000000	nop; not filled.
 9068  000081fc  23bd0008	addi	r29,r29,#8
 9069  00008200  64210000	snei	r1,r1,#0
 9070  00008204  10200024	beqz	r1,L55_LF7
 9071  00008208  54000000	nop; not filled.
 9072  0000820c          	L56_LF7:
 9073  0000820c  23bdfff8	addi	r29,r29,#-8
 9074  00008210  3c070001	lhi	r7,((LC0_LF7)>>16)&0xffff
 9075  00008214  24e72e40	addui	r7,r7,(LC0_LF7)&0xffff
 9076  00008218  afa70000	sw	(r29),r7
 9077  0000821c  afa60004	sw	4(r29),r6
 9078  00008220  0c002124	jal	_printf
 9079  00008224  54000000	nop; not filled.
 9080  00008228  23bd0008	addi	r29,r29,#8
 9081  0000822c          	L55_LF7:
 9082  0000822c  23bdfff8	addi	r29,r29,#-8
 9083  00008230  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 9084  00008234  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 9085  00008238  afa20000	sw	(r29),r2
 9086  0000823c  20070073	addi	r7,r0,#115
 9087  00008240  afa70004	sw	4(r29),r7
 9088  00008244  0fffbbd0	jal	_dindex
 9089  00008248  54000000	nop; not filled.
 9090  0000824c  23bd0008	addi	r29,r29,#8
 9091  00008250  64210000	snei	r1,r1,#0
 9092  00008254  1420002c	bnez	r1,L58_LF7
 9093  00008258  54000000	nop; not filled.
 9094  0000825c  23bdfff8	addi	r29,r29,#-8
 9095  00008260  afa20000	sw	(r29),r2
 9096  00008264  2007002b	addi	r7,r0,#43
 9097  00008268  afa70004	sw	4(r29),r7
 9098  0000826c  0fffbba8	jal	_dindex
 9099  00008270  54000000	nop; not filled.
 9100  00008274  23bd0008	addi	r29,r29,#8
 9101  00008278  64210000	snei	r1,r1,#0
 9102  0000827c  1020003c	beqz	r1,L57_LF7
 9103  00008280  54000000	nop; not filled.
 9104  00008284          	L58_LF7:
 9105  00008284  23bdfff0	addi	r29,r29,#-16
 9106  00008288  3c070001	lhi	r7,((LC1_LF7)>>16)&0xffff
 9107  0000828c  24e72e60	addui	r7,r7,(LC1_LF7)&0xffff
 9108  00008290  afa70000	sw	(r29),r7
 9109  00008294  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 9110  00008298  2421fe14	addui	r1,r1,(_currentPCB)&0xffff
 9111  0000829c  8c210000	lw	r1,(r1)
 9112  000082a0  afa10004	sw	4(r29),r1
 9113  000082a4  afa40008	sw	8(r29),r4
 9114  000082a8  8c87000c	lw	r7,12(r4)
 9115  000082ac  afa7000c	sw	12(r29),r7
 9116  000082b0  0c002094	jal	_printf
 9117  000082b4  54000000	nop; not filled.
 9118  000082b8  23bd0010	addi	r29,r29,#16
 9119  000082bc          	L57_LF7:
 9120  000082bc  8c81000c	lw	r1,12(r4)
 9121  000082c0  2021ffff	addi	r1,r1,#-1
 9122  000082c4  ac81000c	sw	12(r4),r1
 9123  000082c8  68210000	slti	r1,r1,#0
 9124  000082cc  102000d8	beqz	r1,L59_LF7
 9125  000082d0  54000000	nop; not filled.
 9126  000082d4  0ffff8b8	jal	_QueueAllocLink
 9127  000082d8  54000000	nop; not filled.
 9128  000082dc  00011020	add	r2,r0,r1
 9129  000082e0  3c050000	lhi	r5,((_currentPCB)>>16)&0xffff
 9130  000082e4  24a5fe14	addui	r5,r5,(_currentPCB)&0xffff
 9131  000082e8  8ca10000	lw	r1,(r5)
 9132  000082ec  20070000	addi	r7,r0,#0
 9133  000082f0  ac470000	sw	(r2),r7
 9134  000082f4  ac41000c	sw	12(r2),r1
 9135  000082f8  23bdfff8	addi	r29,r29,#-8
 9136  000082fc  3c030000	lhi	r3,((_debugstr)>>16)&0xffff
 9137  00008300  2463fd4a	addui	r3,r3,(_debugstr)&0xffff
 9138  00008304  afa30000	sw	(r29),r3
 9139  00008308  20070073	addi	r7,r0,#115
 9140  0000830c  afa70004	sw	4(r29),r7
 9141  00008310  0fffbb04	jal	_dindex
 9142  00008314  54000000	nop; not filled.
 9143  00008318  23bd0008	addi	r29,r29,#8
 9144  0000831c  64210000	snei	r1,r1,#0
 9145  00008320  1420002c	bnez	r1,L62_LF7
 9146  00008324  54000000	nop; not filled.
 9147  00008328  23bdfff8	addi	r29,r29,#-8
 9148  0000832c  afa30000	sw	(r29),r3
 9149  00008330  2007002b	addi	r7,r0,#43
 9150  00008334  afa70004	sw	4(r29),r7
 9151  00008338  0fffbadc	jal	_dindex
 9152  0000833c  54000000	nop; not filled.
 9153  00008340  23bd0008	addi	r29,r29,#8
 9154  00008344  64210000	snei	r1,r1,#0
 9155  00008348  10200028	beqz	r1,L61_LF7
 9156  0000834c  54000000	nop; not filled.
 9157  00008350          	L62_LF7:
 9158  00008350  23bdfff8	addi	r29,r29,#-8
 9159  00008354  3c070001	lhi	r7,((LC2_LF7)>>16)&0xffff
 9160  00008358  24e72e8c	addui	r7,r7,(LC2_LF7)&0xffff
 9161  0000835c  afa70000	sw	(r29),r7
 9162  00008360  8ca10000	lw	r1,(r5)
 9163  00008364  afa10004	sw	4(r29),r1
 9164  00008368  0c001fdc	jal	_printf
 9165  0000836c  54000000	nop; not filled.
 9166  00008370  23bd0008	addi	r29,r29,#8
 9167  00008374          	L61_LF7:
 9168  00008374  8c810004	lw	r1,4(r4)
 9169  00008378  ac440008	sw	8(r2),r4
 9170  0000837c  ac410004	sw	4(r2),r1
 9171  00008380  8c270000	lw	r7,(r1)
 9172  00008384  ac470000	sw	(r2),r7
 9173  00008388  ac220000	sw	(r1),r2
 9174  0000838c  8c410000	lw	r1,(r2)
 9175  00008390  ac220004	sw	4(r1),r2
 9176  00008394  8c810008	lw	r1,8(r4)
 9177  00008398  20210001	addi	r1,r1,#1
 9178  0000839c  ac810008	sw	8(r4),r1
 9179  000083a0  0fff8f30	jal	_ProcessSleep
 9180  000083a4  54000000	nop; not filled.
 9181  000083a8          	L59_LF7:
 9182  000083a8  23bdfff8	addi	r29,r29,#-8
 9183  000083ac  afa60000	sw	(r29),r6
 9184  000083b0  0fff8ed4	jal	_SetIntrs
 9185  000083b4  54000000	nop; not filled.
 9186  000083b8  23bd0008	addi	r29,r29,#8
 9187  000083bc  8fa20000	lw	r2,0(r29)
 9188  000083c0  8fa30004	lw	r3,4(r29)
 9189  000083c4  8fa40008	lw	r4,8(r29)
 9190  000083c8  8fa5000c	lw	r5,12(r29)
 9191  000083cc  8fa60010	lw	r6,16(r29)
 9192  000083d0  8fa70014	lw	r7,20(r29)
 9193  000083d4  8fdffff8	lw	r31,-8(r30)
 9194  000083d8  001ee820	add	r29,r0,r30
 9195  000083dc  8fdefffc	lw	r30,-4(r30)
 9196  000083e0  4be00000	jr	r31
 9197  000083e4  54000000	nop
 9198  000083e8          	.endproc _SemWait
 9199  000083e8          	.data
 9200  00012ead          	.align 2
 9201  00012eb0          	LC3_LF7:
 9202  00012eb0  5369676e	.ascii "Signalling on sem 0x%x, count=%d.\n\000"
 9202  00012eb4  616c6c69	
 9202  00012eb8  6e67206f	
 9202  00012ebc  6e207365	
 9202  00012ec0  6d203078	
 9202  00012ec4  25782c20	
 9202  00012ec8  636f756e	
 9202  00012ecc  743d2564	
 9202  00012ed0  2e0a00  	
 9203  00012ed3          	.align 2
 9204  00012ed4          	LC4_LF7:
 9205  00012ed4  57616b69	.ascii "Waking up PCB 0x%x.\n\000"
 9205  00012ed8  6e672075	
 9205  00012edc  70205043	
 9205  00012ee0  42203078	
 9205  00012ee4  25782e0a	
 9205  00012ee8  00      	
 9206  00012ee9          	.text
 9207  000083e8          	.align 2
 9208  000083e8          	.proc _SemSignal
 9209  000083e8          	.global _SemSignal
 9210  000083e8          	_SemSignal:
 9211                      ;  Function 'SemSignal'; 0 bytes of locals, 4 regs to save.
 9212  000083e8  afbefffc	sw	-4(r29),r30; push fp
 9213  000083ec  001df020	add	r30,r0,r29; fp = sp
 9214  000083f0  afbffff8	sw	-8(r29),r31; push ret addr
 9215  000083f4  2fbd0018	subui	r29,r29,#24; alloc local storage
 9216  000083f8  afa20000	sw	0(r29),r2
 9217  000083fc  afa30004	sw	4(r29),r3
 9218  00008400  afa40008	sw	8(r29),r4
 9219  00008404  afa5000c	sw	12(r29),r5
 9220  00008408  8fc20000	lw	r2,(r30)
 9221  0000840c  23bdfff8	addi	r29,r29,#-8
 9222  00008410  2005000f	addi	r5,r0,#15
 9223  00008414  afa50000	sw	(r29),r5
 9224  00008418  0fff8e6c	jal	_SetIntrs
 9225  0000841c  54000000	nop; not filled.
 9226  00008420  00012020	add	r4,r0,r1
 9227  00008424  23bd0008	addi	r29,r29,#8
 9228  00008428  23bdfff8	addi	r29,r29,#-8
 9229  0000842c  3c030000	lhi	r3,((_debugstr)>>16)&0xffff
 9230  00008430  2463fd4a	addui	r3,r3,(_debugstr)&0xffff
 9231  00008434  afa30000	sw	(r29),r3
 9232  00008438  20050073	addi	r5,r0,#115
 9233  0000843c  afa50004	sw	4(r29),r5
 9234  00008440  0fffb9d4	jal	_dindex
 9235  00008444  54000000	nop; not filled.
 9236  00008448  23bd0008	addi	r29,r29,#8
 9237  0000844c  64210000	snei	r1,r1,#0
 9238  00008450  1420002c	bnez	r1,L70_LF7
 9239  00008454  54000000	nop; not filled.
 9240  00008458  23bdfff8	addi	r29,r29,#-8
 9241  0000845c  afa30000	sw	(r29),r3
 9242  00008460  2005002b	addi	r5,r0,#43
 9243  00008464  afa50004	sw	4(r29),r5
 9244  00008468  0fffb9ac	jal	_dindex
 9245  0000846c  54000000	nop; not filled.
 9246  00008470  23bd0008	addi	r29,r29,#8
 9247  00008474  64210000	snei	r1,r1,#0
 9248  00008478  1020002c	beqz	r1,L69_LF7
 9249  0000847c  54000000	nop; not filled.
 9250  00008480          	L70_LF7:
 9251  00008480  23bdfff0	addi	r29,r29,#-16
 9252  00008484  3c050001	lhi	r5,((LC3_LF7)>>16)&0xffff
 9253  00008488  24a52eb0	addui	r5,r5,(LC3_LF7)&0xffff
 9254  0000848c  afa50000	sw	(r29),r5
 9255  00008490  afa20004	sw	4(r29),r2
 9256  00008494  8c45000c	lw	r5,12(r2)
 9257  00008498  afa50008	sw	8(r29),r5
 9258  0000849c  0c001ea8	jal	_printf
 9259  000084a0  54000000	nop; not filled.
 9260  000084a4  23bd0010	addi	r29,r29,#16
 9261  000084a8          	L69_LF7:
 9262  000084a8  8c41000c	lw	r1,12(r2)
 9263  000084ac  20210001	addi	r1,r1,#1
 9264  000084b0  ac41000c	sw	12(r2),r1
 9265  000084b4  70210000	slei	r1,r1,#0
 9266  000084b8  102000ec	beqz	r1,L71_LF7
 9267  000084bc  54000000	nop; not filled.
 9268  000084c0  8c430000	lw	r3,(r2)
 9269  000084c4  8c610008	lw	r1,8(r3)
 9270  000084c8  8c210008	lw	r1,8(r1)
 9271  000084cc  6c210000	sgti	r1,r1,#0
 9272  000084d0  1020002c	beqz	r1,L74_LF7
 9273  000084d4  54000000	nop; not filled.
 9274  000084d8  8c610004	lw	r1,4(r3)
 9275  000084dc  8c650000	lw	r5,(r3)
 9276  000084e0  ac250000	sw	(r1),r5
 9277  000084e4  8c610000	lw	r1,(r3)
 9278  000084e8  8c650004	lw	r5,4(r3)
 9279  000084ec  ac250004	sw	4(r1),r5
 9280  000084f0  8c620008	lw	r2,8(r3)
 9281  000084f4  8c410008	lw	r1,8(r2)
 9282  000084f8  2021ffff	addi	r1,r1,#-1
 9283  000084fc  ac410008	sw	8(r2),r1
 9284  00008500          	L74_LF7:
 9285  00008500  20050000	addi	r5,r0,#0
 9286  00008504  ac650000	sw	(r3),r5
 9287  00008508  23bdfff8	addi	r29,r29,#-8
 9288  0000850c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 9289  00008510  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
 9290  00008514  afa20000	sw	(r29),r2
 9291  00008518  20050073	addi	r5,r0,#115
 9292  0000851c  afa50004	sw	4(r29),r5
 9293  00008520  0fffb8f4	jal	_dindex
 9294  00008524  54000000	nop; not filled.
 9295  00008528  23bd0008	addi	r29,r29,#8
 9296  0000852c  64210000	snei	r1,r1,#0
 9297  00008530  1420002c	bnez	r1,L76_LF7
 9298  00008534  54000000	nop; not filled.
 9299  00008538  23bdfff8	addi	r29,r29,#-8
 9300  0000853c  afa20000	sw	(r29),r2
 9301  00008540  2005002b	addi	r5,r0,#43
 9302  00008544  afa50004	sw	4(r29),r5
 9303  00008548  0fffb8cc	jal	_dindex
 9304  0000854c  54000000	nop; not filled.
 9305  00008550  23bd0008	addi	r29,r29,#8
 9306  00008554  64210000	snei	r1,r1,#0
 9307  00008558  10200028	beqz	r1,L75_LF7
 9308  0000855c  54000000	nop; not filled.
 9309  00008560          	L76_LF7:
 9310  00008560  23bdfff8	addi	r29,r29,#-8
 9311  00008564  3c050001	lhi	r5,((LC4_LF7)>>16)&0xffff
 9312  00008568  24a52ed4	addui	r5,r5,(LC4_LF7)&0xffff
 9313  0000856c  afa50000	sw	(r29),r5
 9314  00008570  8c61000c	lw	r1,12(r3)
 9315  00008574  afa10004	sw	4(r29),r1
 9316  00008578  0c001dcc	jal	_printf
 9317  0000857c  54000000	nop; not filled.
 9318  00008580  23bd0008	addi	r29,r29,#8
 9319  00008584          	L75_LF7:
 9320  00008584  23bdfff8	addi	r29,r29,#-8
 9321  00008588  8c65000c	lw	r5,12(r3)
 9322  0000858c  afa50000	sw	(r29),r5
 9323  00008590  0fffcbd4	jal	_ProcessWakeup
 9324  00008594  54000000	nop; not filled.
 9325  00008598  afa30000	sw	(r29),r3
 9326  0000859c  0ffff538	jal	_QueueFreeLink
 9327  000085a0  54000000	nop; not filled.
 9328  000085a4  23bd0008	addi	r29,r29,#8
 9329  000085a8          	L71_LF7:
 9330  000085a8  23bdfff8	addi	r29,r29,#-8
 9331  000085ac  afa40000	sw	(r29),r4
 9332  000085b0  0fff8cd4	jal	_SetIntrs
 9333  000085b4  54000000	nop; not filled.
 9334  000085b8  23bd0008	addi	r29,r29,#8
 9335  000085bc  8fa20000	lw	r2,0(r29)
 9336  000085c0  8fa30004	lw	r3,4(r29)
 9337  000085c4  8fa40008	lw	r4,8(r29)
 9338  000085c8  8fa5000c	lw	r5,12(r29)
 9339  000085cc  8fdffff8	lw	r31,-8(r30)
 9340  000085d0  001ee820	add	r29,r0,r30
 9341  000085d4  8fdefffc	lw	r30,-4(r30)
 9342  000085d8  4be00000	jr	r31
 9343  000085dc  54000000	nop
 9344  000085e0          	.endproc _SemSignal
 9345  000085e0          	.align 2
 9346  000085e0          	.proc _LockInit
 9347  000085e0          	.global _LockInit
 9348  000085e0          	_LockInit:
 9349                      ;  Function 'LockInit'; 0 bytes of locals, 0 regs to save.
 9350  000085e0  afbefffc	sw	-4(r29),r30; push fp
 9351  000085e4  001df020	add	r30,r0,r29; fp = sp
 9352  000085e8  afbffff8	sw	-8(r29),r31; push ret addr
 9353  000085ec  2fbd0008	subui	r29,r29,#8; alloc local storage
 9354  000085f0  8fdffff8	lw	r31,-8(r30)
 9355  000085f4  001ee820	add	r29,r0,r30
 9356  000085f8  8fdefffc	lw	r30,-4(r30)
 9357  000085fc  4be00000	jr	r31
 9358  00008600  54000000	nop
 9359  00008604          	.endproc _LockInit
 9360  00008604          	.align 2
 9361  00008604          	.proc _LockAcquire
 9362  00008604          	.global _LockAcquire
 9363  00008604          	_LockAcquire:
 9364                      ;  Function 'LockAcquire'; 0 bytes of locals, 0 regs to save.
 9365  00008604  afbefffc	sw	-4(r29),r30; push fp
 9366  00008608  001df020	add	r30,r0,r29; fp = sp
 9367  0000860c  afbffff8	sw	-8(r29),r31; push ret addr
 9368  00008610  2fbd0008	subui	r29,r29,#8; alloc local storage
 9369  00008614  8fdffff8	lw	r31,-8(r30)
 9370  00008618  001ee820	add	r29,r0,r30
 9371  0000861c  8fdefffc	lw	r30,-4(r30)
 9372  00008620  4be00000	jr	r31
 9373  00008624  54000000	nop
 9374  00008628          	.endproc _LockAcquire
 9375  00008628          	.align 2
 9376  00008628          	.proc _LockRelease
 9377  00008628          	.global _LockRelease
 9378  00008628          	_LockRelease:
 9379                      ;  Function 'LockRelease'; 0 bytes of locals, 0 regs to save.
 9380  00008628  afbefffc	sw	-4(r29),r30; push fp
 9381  0000862c  001df020	add	r30,r0,r29; fp = sp
 9382  00008630  afbffff8	sw	-8(r29),r31; push ret addr
 9383  00008634  2fbd0008	subui	r29,r29,#8; alloc local storage
 9384  00008638  8fdffff8	lw	r31,-8(r30)
 9385  0000863c  001ee820	add	r29,r0,r30
 9386  00008640  8fdefffc	lw	r30,-4(r30)
 9387  00008644  4be00000	jr	r31
 9388  00008648  54000000	nop
 9389  0000864c          	.endproc _LockRelease
 9390  0000864c          	.align 2
 9391  0000864c          	.proc _CondInit
 9392  0000864c          	.global _CondInit
 9393  0000864c          	_CondInit:
 9394                      ;  Function 'CondInit'; 0 bytes of locals, 0 regs to save.
 9395  0000864c  afbefffc	sw	-4(r29),r30; push fp
 9396  00008650  001df020	add	r30,r0,r29; fp = sp
 9397  00008654  afbffff8	sw	-8(r29),r31; push ret addr
 9398  00008658  2fbd0008	subui	r29,r29,#8; alloc local storage
 9399  0000865c  8fdffff8	lw	r31,-8(r30)
 9400  00008660  001ee820	add	r29,r0,r30
 9401  00008664  8fdefffc	lw	r30,-4(r30)
 9402  00008668  4be00000	jr	r31
 9403  0000866c  54000000	nop
 9404  00008670          	.endproc _CondInit
 9405  00008670          	.align 2
 9406  00008670          	.proc _CondWait
 9407  00008670          	.global _CondWait
 9408  00008670          	_CondWait:
 9409                      ;  Function 'CondWait'; 0 bytes of locals, 0 regs to save.
 9410  00008670  afbefffc	sw	-4(r29),r30; push fp
 9411  00008674  001df020	add	r30,r0,r29; fp = sp
 9412  00008678  afbffff8	sw	-8(r29),r31; push ret addr
 9413  0000867c  2fbd0008	subui	r29,r29,#8; alloc local storage
 9414  00008680  8fdffff8	lw	r31,-8(r30)
 9415  00008684  001ee820	add	r29,r0,r30
 9416  00008688  8fdefffc	lw	r30,-4(r30)
 9417  0000868c  4be00000	jr	r31
 9418  00008690  54000000	nop
 9419  00008694          	.endproc _CondWait
 9420  00008694          	.align 2
 9421  00008694          	.proc _CondSignal
 9422  00008694          	.global _CondSignal
 9423  00008694          	_CondSignal:
 9424                      ;  Function 'CondSignal'; 0 bytes of locals, 0 regs to save.
 9425  00008694  afbefffc	sw	-4(r29),r30; push fp
 9426  00008698  001df020	add	r30,r0,r29; fp = sp
 9427  0000869c  afbffff8	sw	-8(r29),r31; push ret addr
 9428  000086a0  2fbd0008	subui	r29,r29,#8; alloc local storage
 9429  000086a4  8fdffff8	lw	r31,-8(r30)
 9430  000086a8  001ee820	add	r29,r0,r30
 9431  000086ac  8fdefffc	lw	r30,-4(r30)
 9432  000086b0  4be00000	jr	r31
 9433  000086b4  54000000	nop
 9434  000086b8          	.endproc _CondSignal
 9435  000086b8          	.align 2
 9436  000086b8          	.proc _CondBroadcast
 9437  000086b8          	.global _CondBroadcast
 9438  000086b8          	_CondBroadcast:
 9439                      ;  Function 'CondBroadcast'; 0 bytes of locals, 0 regs to save.
 9440  000086b8  afbefffc	sw	-4(r29),r30; push fp
 9441  000086bc  001df020	add	r30,r0,r29; fp = sp
 9442  000086c0  afbffff8	sw	-8(r29),r31; push ret addr
 9443  000086c4  2fbd0008	subui	r29,r29,#8; alloc local storage
 9444  000086c8  8fdffff8	lw	r31,-8(r30)
 9445  000086cc  001ee820	add	r29,r0,r30
 9446  000086d0  8fdefffc	lw	r30,-4(r30)
 9447  000086d4  4be00000	jr	r31
 9448  000086d8  54000000	nop
 9449  000086dc          	.endproc _CondBroadcast
 9450                      ; Compiled by GCC
 9451  000086dc          	.data
 9452  00012ee9          	.align 2
 9453  00012eec          	_rcsid_LF8:
 9454  00012eec  3a207472	.ascii "$Id: traps.c,v 1.1 2000/09/20 01:50:19 elm Exp elm $\000"
 9454  00012ef0  6170732e	
 9454  00012ef4  632c7620	
 9454  00012ef8  312e3120	
 9454  00012efc  32303030	
 9454  00012f00  2f30392f	
 9454  00012f04  32302030	
 9454  00012f08  313a3530	
 9454  00012f0c  3a313920	
 9454  00012f10  656c6d20	
 9454  00012f14  45787020	
 9454  00012f18  656c6d20	
 9454  00012f1c  303030  	
 9455  00012f1f          	.text
 9456  000086dc          	.align 2
 9457  000086dc          	.proc _isspace
 9458  000086dc          	.global _isspace
 9459  000086dc          	_isspace:
 9460                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 9461  000086dc  afbefffc	sw	-4(r29),r30; push fp
 9462  000086e0  001df020	add	r30,r0,r29; fp = sp
 9463  000086e4  afbffff8	sw	-8(r29),r31; push ret addr
 9464  000086e8  2fbd0010	subui	r29,r29,#16; alloc local storage
 9465  000086ec  afa20000	sw	0(r29),r2
 9466  000086f0  83c20003	lb	r2,3(r30)
 9467  000086f4  201f0000	addi	r31,r0,#0
 9468  000086f8  304100ff	andi	r1,r2,#0x00ff
 9469  000086fc  60210020	seqi	r1,r1,#32
 9470  00008700  14200018	bnez	r1,L6_LF8
 9471  00008704  54000000	nop; not filled.
 9472  00008708  2041fff7	addi	r1,r2,#-9
 9473  0000870c  302100ff	andi	r1,r1,#0x00ff
 9474  00008710  70210001	sleui	r1,r1,#1
 9475  00008714  10200008	beqz	r1,L5_LF8
 9476  00008718  54000000	nop; not filled.
 9477  0000871c          	L6_LF8:
 9478  0000871c  201f0001	addi	r31,r0,#1
 9479  00008720          	L5_LF8:
 9480  00008720  001f0820	add	r1,r0,r31
 9481  00008724  8fa20000	lw	r2,0(r29)
 9482  00008728  8fdffff8	lw	r31,-8(r30)
 9483  0000872c  001ee820	add	r29,r0,r30
 9484  00008730  8fdefffc	lw	r30,-4(r30)
 9485  00008734  4be00000	jr	r31
 9486  00008738  54000000	nop
 9487  0000873c          	.endproc _isspace
 9488  0000873c          	.align 2
 9489  0000873c          	.proc _isxdigit
 9490  0000873c          	.global _isxdigit
 9491  0000873c          	_isxdigit:
 9492                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 9493  0000873c  afbefffc	sw	-4(r29),r30; push fp
 9494  00008740  001df020	add	r30,r0,r29; fp = sp
 9495  00008744  afbffff8	sw	-8(r29),r31; push ret addr
 9496  00008748  2fbd0010	subui	r29,r29,#16; alloc local storage
 9497  0000874c  afa20000	sw	0(r29),r2
 9498  00008750  83df0003	lb	r31,3(r30)
 9499  00008754  20020000	addi	r2,r0,#0
 9500  00008758  23e1ffd0	addi	r1,r31,#-48
 9501  0000875c  302100ff	andi	r1,r1,#0x00ff
 9502  00008760  70210009	sleui	r1,r1,#9
 9503  00008764  14200028	bnez	r1,L12_LF8
 9504  00008768  54000000	nop; not filled.
 9505  0000876c  23e1ff9f	addi	r1,r31,#-97
 9506  00008770  302100ff	andi	r1,r1,#0x00ff
 9507  00008774  70210005	sleui	r1,r1,#5
 9508  00008778  14200014	bnez	r1,L12_LF8
 9509  0000877c  54000000	nop; not filled.
 9510  00008780  33e100ff	andi	r1,r31,#0x00ff
 9511  00008784  64210041	snei	r1,r1,#65
 9512  00008788  14200008	bnez	r1,L11_LF8
 9513  0000878c  54000000	nop; not filled.
 9514  00008790          	L12_LF8:
 9515  00008790  20020001	addi	r2,r0,#1
 9516  00008794          	L11_LF8:
 9517  00008794  00020820	add	r1,r0,r2
 9518  00008798  8fa20000	lw	r2,0(r29)
 9519  0000879c  8fdffff8	lw	r31,-8(r30)
 9520  000087a0  001ee820	add	r29,r0,r30
 9521  000087a4  8fdefffc	lw	r30,-4(r30)
 9522  000087a8  4be00000	jr	r31
 9523  000087ac  54000000	nop
 9524  000087b0          	.endproc _isxdigit
 9525  000087b0          	.align 2
 9526  000087b0          	.proc _DisableIntrs
 9527  000087b0          	.global _DisableIntrs
 9528  000087b0          	_DisableIntrs:
 9529                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
 9530  000087b0  afbefffc	sw	-4(r29),r30; push fp
 9531  000087b4  001df020	add	r30,r0,r29; fp = sp
 9532  000087b8  afbffff8	sw	-8(r29),r31; push ret addr
 9533  000087bc  2fbd0010	subui	r29,r29,#16; alloc local storage
 9534  000087c0  afa20000	sw	0(r29),r2
 9535  000087c4  23bdfff8	addi	r29,r29,#-8
 9536  000087c8  2002000f	addi	r2,r0,#15
 9537  000087cc  afa20000	sw	(r29),r2
 9538  000087d0  0fff8ab4	jal	_SetIntrs
 9539  000087d4  54000000	nop; not filled.
 9540  000087d8  23bd0008	addi	r29,r29,#8
 9541  000087dc  8fa20000	lw	r2,0(r29)
 9542  000087e0  8fdffff8	lw	r31,-8(r30)
 9543  000087e4  001ee820	add	r29,r0,r30
 9544  000087e8  8fdefffc	lw	r30,-4(r30)
 9545  000087ec  4be00000	jr	r31
 9546  000087f0  54000000	nop
 9547  000087f4          	.endproc _DisableIntrs
 9548  000087f4          	.align 2
 9549  000087f4          	.proc _EnableIntrs
 9550  000087f4          	.global _EnableIntrs
 9551  000087f4          	_EnableIntrs:
 9552                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
 9553  000087f4  afbefffc	sw	-4(r29),r30; push fp
 9554  000087f8  001df020	add	r30,r0,r29; fp = sp
 9555  000087fc  afbffff8	sw	-8(r29),r31; push ret addr
 9556  00008800  2fbd0010	subui	r29,r29,#16; alloc local storage
 9557  00008804  afa20000	sw	0(r29),r2
 9558  00008808  23bdfff8	addi	r29,r29,#-8
 9559  0000880c  20020000	addi	r2,r0,#0
 9560  00008810  afa20000	sw	(r29),r2
 9561  00008814  0fff8a70	jal	_SetIntrs
 9562  00008818  54000000	nop; not filled.
 9563  0000881c  23bd0008	addi	r29,r29,#8
 9564  00008820  8fa20000	lw	r2,0(r29)
 9565  00008824  8fdffff8	lw	r31,-8(r30)
 9566  00008828  001ee820	add	r29,r0,r30
 9567  0000882c  8fdefffc	lw	r30,-4(r30)
 9568  00008830  4be00000	jr	r31
 9569  00008834  54000000	nop
 9570  00008838          	.endproc _EnableIntrs
 9571  00008838          	.align 2
 9572  00008838          	.proc _RestoreIntrs
 9573  00008838          	.global _RestoreIntrs
 9574  00008838          	_RestoreIntrs:
 9575                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
 9576  00008838  afbefffc	sw	-4(r29),r30; push fp
 9577  0000883c  001df020	add	r30,r0,r29; fp = sp
 9578  00008840  afbffff8	sw	-8(r29),r31; push ret addr
 9579  00008844  2fbd0010	subui	r29,r29,#16; alloc local storage
 9580  00008848  afa20000	sw	0(r29),r2
 9581  0000884c  23bdfff8	addi	r29,r29,#-8
 9582  00008850  8fc20000	lw	r2,(r30)
 9583  00008854  afa20000	sw	(r29),r2
 9584  00008858  0fff8a2c	jal	_SetIntrs
 9585  0000885c  54000000	nop; not filled.
 9586  00008860  23bd0008	addi	r29,r29,#8
 9587  00008864  8fa20000	lw	r2,0(r29)
 9588  00008868  8fdffff8	lw	r31,-8(r30)
 9589  0000886c  001ee820	add	r29,r0,r30
 9590  00008870  8fdefffc	lw	r30,-4(r30)
 9591  00008874  4be00000	jr	r31
 9592  00008878  54000000	nop
 9593  0000887c          	.endproc _RestoreIntrs
 9594  0000887c          	.align 2
 9595  0000887c          	.proc _QueueLinkInit
 9596  0000887c          	.global _QueueLinkInit
 9597  0000887c          	_QueueLinkInit:
 9598                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
 9599  0000887c  afbefffc	sw	-4(r29),r30; push fp
 9600  00008880  001df020	add	r30,r0,r29; fp = sp
 9601  00008884  afbffff8	sw	-8(r29),r31; push ret addr
 9602  00008888  2fbd0010	subui	r29,r29,#16; alloc local storage
 9603  0000888c  afa20000	sw	0(r29),r2
 9604  00008890  8fc10000	lw	r1,(r30)
 9605  00008894  8fc20004	lw	r2,4(r30)
 9606  00008898  201f0000	addi	r31,r0,#0
 9607  0000889c  ac3f0000	sw	(r1),r31
 9608  000088a0  ac22000c	sw	12(r1),r2
 9609  000088a4  8fa20000	lw	r2,0(r29)
 9610  000088a8  8fdffff8	lw	r31,-8(r30)
 9611  000088ac  001ee820	add	r29,r0,r30
 9612  000088b0  8fdefffc	lw	r30,-4(r30)
 9613  000088b4  4be00000	jr	r31
 9614  000088b8  54000000	nop
 9615  000088bc          	.endproc _QueueLinkInit
 9616  000088bc          	.align 2
 9617  000088bc          	.proc _QueueNext
 9618  000088bc          	.global _QueueNext
 9619  000088bc          	_QueueNext:
 9620                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
 9621  000088bc  afbefffc	sw	-4(r29),r30; push fp
 9622  000088c0  001df020	add	r30,r0,r29; fp = sp
 9623  000088c4  afbffff8	sw	-8(r29),r31; push ret addr
 9624  000088c8  2fbd0008	subui	r29,r29,#8; alloc local storage
 9625  000088cc  8fc10000	lw	r1,(r30)
 9626  000088d0  8c210000	lw	r1,(r1)
 9627  000088d4  8fdffff8	lw	r31,-8(r30)
 9628  000088d8  001ee820	add	r29,r0,r30
 9629  000088dc  8fdefffc	lw	r30,-4(r30)
 9630  000088e0  4be00000	jr	r31
 9631  000088e4  54000000	nop
 9632  000088e8          	.endproc _QueueNext
 9633  000088e8          	.align 2
 9634  000088e8          	.proc _QueuePrev
 9635  000088e8          	.global _QueuePrev
 9636  000088e8          	_QueuePrev:
 9637                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
 9638  000088e8  afbefffc	sw	-4(r29),r30; push fp
 9639  000088ec  001df020	add	r30,r0,r29; fp = sp
 9640  000088f0  afbffff8	sw	-8(r29),r31; push ret addr
 9641  000088f4  2fbd0008	subui	r29,r29,#8; alloc local storage
 9642  000088f8  8fc10000	lw	r1,(r30)
 9643  000088fc  8c210004	lw	r1,4(r1)
 9644  00008900  8fdffff8	lw	r31,-8(r30)
 9645  00008904  001ee820	add	r29,r0,r30
 9646  00008908  8fdefffc	lw	r30,-4(r30)
 9647  0000890c  4be00000	jr	r31
 9648  00008910  54000000	nop
 9649  00008914          	.endproc _QueuePrev
 9650  00008914          	.align 2
 9651  00008914          	.proc _QueueFirst
 9652  00008914          	.global _QueueFirst
 9653  00008914          	_QueueFirst:
 9654                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
 9655  00008914  afbefffc	sw	-4(r29),r30; push fp
 9656  00008918  001df020	add	r30,r0,r29; fp = sp
 9657  0000891c  afbffff8	sw	-8(r29),r31; push ret addr
 9658  00008920  2fbd0008	subui	r29,r29,#8; alloc local storage
 9659  00008924  8fc10000	lw	r1,(r30)
 9660  00008928  8c210000	lw	r1,(r1)
 9661  0000892c  8fdffff8	lw	r31,-8(r30)
 9662  00008930  001ee820	add	r29,r0,r30
 9663  00008934  8fdefffc	lw	r30,-4(r30)
 9664  00008938  4be00000	jr	r31
 9665  0000893c  54000000	nop
 9666  00008940          	.endproc _QueueFirst
 9667  00008940          	.align 2
 9668  00008940          	.proc _QueueLast
 9669  00008940          	.global _QueueLast
 9670  00008940          	_QueueLast:
 9671                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
 9672  00008940  afbefffc	sw	-4(r29),r30; push fp
 9673  00008944  001df020	add	r30,r0,r29; fp = sp
 9674  00008948  afbffff8	sw	-8(r29),r31; push ret addr
 9675  0000894c  2fbd0008	subui	r29,r29,#8; alloc local storage
 9676  00008950  8fc10000	lw	r1,(r30)
 9677  00008954  8c210004	lw	r1,4(r1)
 9678  00008958  8fdffff8	lw	r31,-8(r30)
 9679  0000895c  001ee820	add	r29,r0,r30
 9680  00008960  8fdefffc	lw	r30,-4(r30)
 9681  00008964  4be00000	jr	r31
 9682  00008968  54000000	nop
 9683  0000896c          	.endproc _QueueLast
 9684  0000896c          	.align 2
 9685  0000896c          	.proc _QueueInsertAfter
 9686  0000896c          	.global _QueueInsertAfter
 9687  0000896c          	_QueueInsertAfter:
 9688                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
 9689  0000896c  afbefffc	sw	-4(r29),r30; push fp
 9690  00008970  001df020	add	r30,r0,r29; fp = sp
 9691  00008974  afbffff8	sw	-8(r29),r31; push ret addr
 9692  00008978  2fbd0010	subui	r29,r29,#16; alloc local storage
 9693  0000897c  afa20000	sw	0(r29),r2
 9694  00008980  afa30004	sw	4(r29),r3
 9695  00008984  8fc30000	lw	r3,(r30)
 9696  00008988  8fc20004	lw	r2,4(r30)
 9697  0000898c  8fc10008	lw	r1,8(r30)
 9698  00008990  ac230008	sw	8(r1),r3
 9699  00008994  ac220004	sw	4(r1),r2
 9700  00008998  8c5f0000	lw	r31,(r2)
 9701  0000899c  ac3f0000	sw	(r1),r31
 9702  000089a0  ac410000	sw	(r2),r1
 9703  000089a4  8c220000	lw	r2,(r1)
 9704  000089a8  ac410004	sw	4(r2),r1
 9705  000089ac  8c610008	lw	r1,8(r3)
 9706  000089b0  20210001	addi	r1,r1,#1
 9707  000089b4  ac610008	sw	8(r3),r1
 9708  000089b8  8fa20000	lw	r2,0(r29)
 9709  000089bc  8fa30004	lw	r3,4(r29)
 9710  000089c0  8fdffff8	lw	r31,-8(r30)
 9711  000089c4  001ee820	add	r29,r0,r30
 9712  000089c8  8fdefffc	lw	r30,-4(r30)
 9713  000089cc  4be00000	jr	r31
 9714  000089d0  54000000	nop
 9715  000089d4          	.endproc _QueueInsertAfter
 9716  000089d4          	.align 2
 9717  000089d4          	.proc _QueueInsertFirst
 9718  000089d4          	.global _QueueInsertFirst
 9719  000089d4          	_QueueInsertFirst:
 9720                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
 9721  000089d4  afbefffc	sw	-4(r29),r30; push fp
 9722  000089d8  001df020	add	r30,r0,r29; fp = sp
 9723  000089dc  afbffff8	sw	-8(r29),r31; push ret addr
 9724  000089e0  2fbd0010	subui	r29,r29,#16; alloc local storage
 9725  000089e4  afa20000	sw	0(r29),r2
 9726  000089e8  afa30004	sw	4(r29),r3
 9727  000089ec  8fc30000	lw	r3,(r30)
 9728  000089f0  8fc10004	lw	r1,4(r30)
 9729  000089f4  ac230008	sw	8(r1),r3
 9730  000089f8  ac230004	sw	4(r1),r3
 9731  000089fc  8c7f0000	lw	r31,(r3)
 9732  00008a00  ac3f0000	sw	(r1),r31
 9733  00008a04  ac610000	sw	(r3),r1
 9734  00008a08  8c220000	lw	r2,(r1)
 9735  00008a0c  ac410004	sw	4(r2),r1
 9736  00008a10  8c610008	lw	r1,8(r3)
 9737  00008a14  20210001	addi	r1,r1,#1
 9738  00008a18  ac610008	sw	8(r3),r1
 9739  00008a1c  8fa20000	lw	r2,0(r29)
 9740  00008a20  8fa30004	lw	r3,4(r29)
 9741  00008a24  8fdffff8	lw	r31,-8(r30)
 9742  00008a28  001ee820	add	r29,r0,r30
 9743  00008a2c  8fdefffc	lw	r30,-4(r30)
 9744  00008a30  4be00000	jr	r31
 9745  00008a34  54000000	nop
 9746  00008a38          	.endproc _QueueInsertFirst
 9747  00008a38          	.align 2
 9748  00008a38          	.proc _QueueInsertLast
 9749  00008a38          	.global _QueueInsertLast
 9750  00008a38          	_QueueInsertLast:
 9751                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
 9752  00008a38  afbefffc	sw	-4(r29),r30; push fp
 9753  00008a3c  001df020	add	r30,r0,r29; fp = sp
 9754  00008a40  afbffff8	sw	-8(r29),r31; push ret addr
 9755  00008a44  2fbd0010	subui	r29,r29,#16; alloc local storage
 9756  00008a48  afa20000	sw	0(r29),r2
 9757  00008a4c  afa30004	sw	4(r29),r3
 9758  00008a50  8fc30000	lw	r3,(r30)
 9759  00008a54  8fc10004	lw	r1,4(r30)
 9760  00008a58  8c620004	lw	r2,4(r3)
 9761  00008a5c  ac230008	sw	8(r1),r3
 9762  00008a60  ac220004	sw	4(r1),r2
 9763  00008a64  8c5f0000	lw	r31,(r2)
 9764  00008a68  ac3f0000	sw	(r1),r31
 9765  00008a6c  ac410000	sw	(r2),r1
 9766  00008a70  8c220000	lw	r2,(r1)
 9767  00008a74  ac410004	sw	4(r2),r1
 9768  00008a78  8c610008	lw	r1,8(r3)
 9769  00008a7c  20210001	addi	r1,r1,#1
 9770  00008a80  ac610008	sw	8(r3),r1
 9771  00008a84  8fa20000	lw	r2,0(r29)
 9772  00008a88  8fa30004	lw	r3,4(r29)
 9773  00008a8c  8fdffff8	lw	r31,-8(r30)
 9774  00008a90  001ee820	add	r29,r0,r30
 9775  00008a94  8fdefffc	lw	r30,-4(r30)
 9776  00008a98  4be00000	jr	r31
 9777  00008a9c  54000000	nop
 9778  00008aa0          	.endproc _QueueInsertLast
 9779  00008aa0          	.align 2
 9780  00008aa0          	.proc _QueueRemove
 9781  00008aa0          	.global _QueueRemove
 9782  00008aa0          	_QueueRemove:
 9783                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
 9784  00008aa0  afbefffc	sw	-4(r29),r30; push fp
 9785  00008aa4  001df020	add	r30,r0,r29; fp = sp
 9786  00008aa8  afbffff8	sw	-8(r29),r31; push ret addr
 9787  00008aac  2fbd0010	subui	r29,r29,#16; alloc local storage
 9788  00008ab0  afa20000	sw	0(r29),r2
 9789  00008ab4  afa30004	sw	4(r29),r3
 9790  00008ab8  8fdf0000	lw	r31,(r30)
 9791  00008abc  8fe10008	lw	r1,8(r31)
 9792  00008ac0  8c210008	lw	r1,8(r1)
 9793  00008ac4  6c210000	sgti	r1,r1,#0
 9794  00008ac8  1020002c	beqz	r1,L44_LF8
 9795  00008acc  54000000	nop; not filled.
 9796  00008ad0  8fe10004	lw	r1,4(r31)
 9797  00008ad4  8fe30000	lw	r3,(r31)
 9798  00008ad8  ac230000	sw	(r1),r3
 9799  00008adc  8fe10000	lw	r1,(r31)
 9800  00008ae0  8fe30004	lw	r3,4(r31)
 9801  00008ae4  ac230004	sw	4(r1),r3
 9802  00008ae8  8fe20008	lw	r2,8(r31)
 9803  00008aec  8c410008	lw	r1,8(r2)
 9804  00008af0  2021ffff	addi	r1,r1,#-1
 9805  00008af4  ac410008	sw	8(r2),r1
 9806  00008af8          	L44_LF8:
 9807  00008af8  20030000	addi	r3,r0,#0
 9808  00008afc  afe30000	sw	(r31),r3
 9809  00008b00  8fa20000	lw	r2,0(r29)
 9810  00008b04  8fa30004	lw	r3,4(r29)
 9811  00008b08  8fdffff8	lw	r31,-8(r30)
 9812  00008b0c  001ee820	add	r29,r0,r30
 9813  00008b10  8fdefffc	lw	r30,-4(r30)
 9814  00008b14  4be00000	jr	r31
 9815  00008b18  54000000	nop
 9816  00008b1c          	.endproc _QueueRemove
 9817  00008b1c          	.align 2
 9818  00008b1c          	.proc _QueueLength
 9819  00008b1c          	.global _QueueLength
 9820  00008b1c          	_QueueLength:
 9821                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
 9822  00008b1c  afbefffc	sw	-4(r29),r30; push fp
 9823  00008b20  001df020	add	r30,r0,r29; fp = sp
 9824  00008b24  afbffff8	sw	-8(r29),r31; push ret addr
 9825  00008b28  2fbd0008	subui	r29,r29,#8; alloc local storage
 9826  00008b2c  8fc10000	lw	r1,(r30)
 9827  00008b30  8c210008	lw	r1,8(r1)
 9828  00008b34  8fdffff8	lw	r31,-8(r30)
 9829  00008b38  001ee820	add	r29,r0,r30
 9830  00008b3c  8fdefffc	lw	r30,-4(r30)
 9831  00008b40  4be00000	jr	r31
 9832  00008b44  54000000	nop
 9833  00008b48          	.endproc _QueueLength
 9834  00008b48          	.align 2
 9835  00008b48          	.proc _QueueEmpty
 9836  00008b48          	.global _QueueEmpty
 9837  00008b48          	_QueueEmpty:
 9838                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
 9839  00008b48  afbefffc	sw	-4(r29),r30; push fp
 9840  00008b4c  001df020	add	r30,r0,r29; fp = sp
 9841  00008b50  afbffff8	sw	-8(r29),r31; push ret addr
 9842  00008b54  2fbd0008	subui	r29,r29,#8; alloc local storage
 9843  00008b58  8fc10000	lw	r1,(r30)
 9844  00008b5c  8c210008	lw	r1,8(r1)
 9845  00008b60  60210000	seqi	r1,r1,#0
 9846  00008b64  8fdffff8	lw	r31,-8(r30)
 9847  00008b68  001ee820	add	r29,r0,r30
 9848  00008b6c  8fdefffc	lw	r30,-4(r30)
 9849  00008b70  4be00000	jr	r31
 9850  00008b74  54000000	nop
 9851  00008b78          	.endproc _QueueEmpty
 9852  00008b78          	.align 2
 9853  00008b78          	.proc _TimerSet
 9854  00008b78          	.global _TimerSet
 9855  00008b78          	_TimerSet:
 9856                      ;  Function 'TimerSet'; 0 bytes of locals, 0 regs to save.
 9857  00008b78  afbefffc	sw	-4(r29),r30; push fp
 9858  00008b7c  001df020	add	r30,r0,r29; fp = sp
 9859  00008b80  afbffff8	sw	-8(r29),r31; push ret addr
 9860  00008b84  2fbd0008	subui	r29,r29,#8; alloc local storage
 9861  00008b88  3c01fff0	lhi	r1,#-16
 9862  00008b8c  24210010	addui	r1,r1,#16
 9863  00008b90  8fdf0000	lw	r31,(r30)
 9864  00008b94  ac3f0000	sw	(r1),r31
 9865  00008b98  8fdffff8	lw	r31,-8(r30)
 9866  00008b9c  001ee820	add	r29,r0,r30
 9867  00008ba0  8fdefffc	lw	r30,-4(r30)
 9868  00008ba4  4be00000	jr	r31
 9869  00008ba8  54000000	nop
 9870  00008bac          	.endproc _TimerSet
 9871  00008bac          	.align 2
 9872  00008bac          	.proc _KbdModuleInit
 9873  00008bac          	.global _KbdModuleInit
 9874  00008bac          	_KbdModuleInit:
 9875                      ;  Function 'KbdModuleInit'; 0 bytes of locals, 0 regs to save.
 9876  00008bac  afbefffc	sw	-4(r29),r30; push fp
 9877  00008bb0  001df020	add	r30,r0,r29; fp = sp
 9878  00008bb4  afbffff8	sw	-8(r29),r31; push ret addr
 9879  00008bb8  2fbd0008	subui	r29,r29,#8; alloc local storage
 9880  00008bbc  3c01fff0	lhi	r1,#-16
 9881  00008bc0  242101c0	addui	r1,r1,#448
 9882  00008bc4  201f0001	addi	r31,r0,#1
 9883  00008bc8  ac3f0000	sw	(r1),r31
 9884  00008bcc  8fdffff8	lw	r31,-8(r30)
 9885  00008bd0  001ee820	add	r29,r0,r30
 9886  00008bd4  8fdefffc	lw	r30,-4(r30)
 9887  00008bd8  4be00000	jr	r31
 9888  00008bdc  54000000	nop
 9889  00008be0          	.endproc _KbdModuleInit
 9890  00008be0          	.align 2
 9891  00008be0          	.proc _TrapPrintfHandler_LF8
 9892  00008be0          	_TrapPrintfHandler_LF8:
 9893                      ;  Function 'TrapPrintfHandler'; 160 bytes of locals, 10 regs to save.
 9894  00008be0  afbefffc	sw	-4(r29),r30; push fp
 9895  00008be4  001df020	add	r30,r0,r29; fp = sp
 9896  00008be8  afbffff8	sw	-8(r29),r31; push ret addr
 9897  00008bec  2fbd00d0	subui	r29,r29,#208; alloc local storage
 9898  00008bf0  afa20000	sw	0(r29),r2
 9899  00008bf4  afa30004	sw	4(r29),r3
 9900  00008bf8  afa40008	sw	8(r29),r4
 9901  00008bfc  afa5000c	sw	12(r29),r5
 9902  00008c00  afa60010	sw	16(r29),r6
 9903  00008c04  afa70014	sw	20(r29),r7
 9904  00008c08  afa80018	sw	24(r29),r8
 9905  00008c0c  afa9001c	sw	28(r29),r9
 9906  00008c10  afaa0020	sw	32(r29),r10
 9907  00008c14  afab0024	sw	36(r29),r11
 9908  00008c18  8fc40000	lw	r4,(r30)
 9909  00008c1c  8fc10004	lw	r1,4(r30)
 9910  00008c20  20080000	addi	r8,r0,#0
 9911  00008c24  00081820	add	r3,r0,r8
 9912  00008c28  64210000	snei	r1,r1,#0
 9913  00008c2c  142000a0	bnez	r1,L56_LF8
 9914  00008c30  54000000	nop; not filled.
 9915  00008c34  23bdfff0	addi	r29,r29,#-16
 9916  00008c38  3c020000	lhi	r2,((_currentPCB)>>16)&0xffff
 9917  00008c3c  2442fe14	addui	r2,r2,(_currentPCB)&0xffff
 9918  00008c40  8c4b0000	lw	r11,(r2)
 9919  00008c44  afab0000	sw	(r29),r11
 9920  00008c48  afa40004	sw	4(r29),r4
 9921  00008c4c  23c1ff58	addi	r1,r30,#-168
 9922  00008c50  afa10008	sw	8(r29),r1
 9923  00008c54  200b0028	addi	r11,r0,#40
 9924  00008c58  afab000c	sw	12(r29),r11
 9925  00008c5c  0fffa908	jal	_MemoryCopyUserToSystem
 9926  00008c60  54000000	nop; not filled.
 9927  00008c64  23bd0010	addi	r29,r29,#16
 9928  00008c68  23c5ffa7	addi	r5,r30,#-89
 9929  00008c6c  23c4ffa8	addi	r4,r30,#-88
 9930  00008c70          	L57_LF8:
 9931  00008c70  23bdfff0	addi	r29,r29,#-16
 9932  00008c74  8c4b0000	lw	r11,(r2)
 9933  00008c78  afab0000	sw	(r29),r11
 9934  00008c7c  8fc1ff58	lw	r1,-168(r30)
 9935  00008c80  00230820	add	r1,r1,r3
 9936  00008c84  afa10004	sw	4(r29),r1
 9937  00008c88  afa40008	sw	8(r29),r4
 9938  00008c8c  200b0001	addi	r11,r0,#1
 9939  00008c90  afab000c	sw	12(r29),r11
 9940  00008c94  0fffa8d0	jal	_MemoryCopyUserToSystem
 9941  00008c98  54000000	nop; not filled.
 9942  00008c9c  20a50001	addi	r5,r5,#1
 9943  00008ca0  20840001	addi	r4,r4,#1
 9944  00008ca4  20630001	addi	r3,r3,#1
 9945  00008ca8  23bd0010	addi	r29,r29,#16
 9946  00008cac  7061004f	sleui	r1,r3,#79
 9947  00008cb0  10200060	beqz	r1,L62_LF8
 9948  00008cb4  54000000	nop; not filled.
 9949  00008cb8  90a10000	lbu	r1,(r5)
 9950  00008cbc  64210000	snei	r1,r1,#0
 9951  00008cc0  10200050	beqz	r1,L62_LF8
 9952  00008cc4  54000000	nop; not filled.
 9953  00008cc8  0bffffa4	j	L57_LF8
 9954  00008ccc  54000000	nop; not filled.
 9955  00008cd0          	L56_LF8:
 9956  00008cd0  23bdfff0	addi	r29,r29,#-16
 9957  00008cd4  afa40000	sw	(r29),r4
 9958  00008cd8  23c1ff58	addi	r1,r30,#-168
 9959  00008cdc  afa10004	sw	4(r29),r1
 9960  00008ce0  200b0028	addi	r11,r0,#40
 9961  00008ce4  afab0008	sw	8(r29),r11
 9962  00008ce8  0fffb4bc	jal	_bcopy
 9963  00008cec  54000000	nop; not filled.
 9964  00008cf0  8fcbff58	lw	r11,-168(r30)
 9965  00008cf4  afab0000	sw	(r29),r11
 9966  00008cf8  23c1ffa8	addi	r1,r30,#-88
 9967  00008cfc  afa10004	sw	4(r29),r1
 9968  00008d00  200b0050	addi	r11,r0,#80
 9969  00008d04  afab0008	sw	8(r29),r11
 9970  00008d08  0fffacb0	jal	_dstrncpy
 9971  00008d0c  54000000	nop; not filled.
 9972  00008d10  23bd0010	addi	r29,r29,#16
 9973  00008d14          	L62_LF8:
 9974  00008d14  200b0000	addi	r11,r0,(#0x0)&0xff
 9975  00008d18  a3cbfff7	sb	-9(r30),r11
 9976  00008d1c  23c3ffa8	addi	r3,r30,#-88
 9977  00008d20  80620000	lb	r2,(r3)
 9978  00008d24  304100ff	andi	r1,r2,#0x00ff
 9979  00008d28  64210000	snei	r1,r1,#0
 9980  00008d2c  102000f0	beqz	r1,L64_LF8
 9981  00008d30  54000000	nop; not filled.
 9982  00008d34  23cafff8	addi	r10,r30,#-8
 9983  00008d38  23c9ff5c	addi	r9,r30,#-164
 9984  00008d3c  51010002	slli	r1,r8,#0x2
 9985  00008d40  00293820	add	r7,r1,r9
 9986  00008d44  002a3020	add	r6,r1,r10
 9987  00008d48          	L66_LF8:
 9988  00008d48  304100ff	andi	r1,r2,#0x00ff
 9989  00008d4c  60210025	seqi	r1,r1,#37
 9990  00008d50  102000b4	beqz	r1,L65_LF8
 9991  00008d54  54000000	nop; not filled.
 9992  00008d58  90610001	lbu	r1,1(r3)
 9993  00008d5c  60210025	seqi	r1,r1,#37
 9994  00008d60  10200010	beqz	r1,L68_LF8
 9995  00008d64  54000000	nop; not filled.
 9996  00008d68  20630001	addi	r3,r3,#1
 9997  00008d6c  08000098	j	L65_LF8
 9998  00008d70  54000000	nop; not filled.
 9999  00008d74          	L68_LF8:
10000  00008d74  8ceb0000	lw	r11,(r7)
10001  00008d78  accbff88	sw	-120(r6),r11
10002  00008d7c  51010002	slli	r1,r8,#0x2
10003  00008d80  00292820	add	r5,r1,r9
10004  00008d84  002a2020	add	r4,r1,r10
10005  00008d88          	L71_LF8:
10006  00008d88  20630001	addi	r3,r3,#1
10007  00008d8c  807f0000	lb	r31,(r3)
10008  00008d90  33e200ff	andi	r2,r31,#0x00ff
10009  00008d94  60410073	seqi	r1,r2,#115
10010  00008d98  14200060	bnez	r1,L70_LF8
10011  00008d9c  54000000	nop; not filled.
10012  00008da0  6041006c	seqi	r1,r2,#108
10013  00008da4  1420ffe0	bnez	r1,L71_LF8
10014  00008da8  54000000	nop; not filled.
10015  00008dac  23e1ff9a	addi	r1,r31,#-102
10016  00008db0  302100ff	andi	r1,r1,#0x00ff
10017  00008db4  70210001	sleui	r1,r1,#1
10018  00008db8  14200010	bnez	r1,L77_LF8
10019  00008dbc  54000000	nop; not filled.
10020  00008dc0  60410065	seqi	r1,r2,#101
10021  00008dc4  10200020	beqz	r1,L76_LF8
10022  00008dc8  54000000	nop; not filled.
10023  00008dcc          	L77_LF8:
10024  00008dcc  20e70004	addi	r7,r7,#4
10025  00008dd0  20c60004	addi	r6,r6,#4
10026  00008dd4  21080001	addi	r8,r8,#1
10027  00008dd8  8ca50004	lw	r5,4(r5)
10028  00008ddc  ac85ff8c	sw	-116(r4),r5
10029  00008de0  08000018	j	L70_LF8
10030  00008de4  54000000	nop; not filled.
10031  00008de8          	L76_LF8:
10032  00008de8  23e1ff9f	addi	r1,r31,#-97
10033  00008dec  302100ff	andi	r1,r1,#0x00ff
10034  00008df0  70210019	sleui	r1,r1,#25
10035  00008df4  1020ff90	beqz	r1,L71_LF8
10036  00008df8  54000000	nop; not filled.
10037  00008dfc          	L70_LF8:
10038  00008dfc  20e70004	addi	r7,r7,#4
10039  00008e00  20c60004	addi	r6,r6,#4
10040  00008e04  21080001	addi	r8,r8,#1
10041  00008e08          	L65_LF8:
10042  00008e08  20630001	addi	r3,r3,#1
10043  00008e0c  80620000	lb	r2,(r3)
10044  00008e10  304100ff	andi	r1,r2,#0x00ff
10045  00008e14  64210000	snei	r1,r1,#0
10046  00008e18  1420ff2c	bnez	r1,L66_LF8
10047  00008e1c  54000000	nop; not filled.
10048  00008e20          	L64_LF8:
10049  00008e20  23bdffd8	addi	r29,r29,#-40
10050  00008e24  23c1ffa8	addi	r1,r30,#-88
10051  00008e28  afa10000	sw	(r29),r1
10052  00008e2c  8fc1ff80	lw	r1,-128(r30)
10053  00008e30  afa10004	sw	4(r29),r1
10054  00008e34  8fcbff84	lw	r11,-124(r30)
10055  00008e38  afab0008	sw	8(r29),r11
10056  00008e3c  8fcbff88	lw	r11,-120(r30)
10057  00008e40  afab000c	sw	12(r29),r11
10058  00008e44  8fcbff8c	lw	r11,-116(r30)
10059  00008e48  afab0010	sw	16(r29),r11
10060  00008e4c  8fcbff90	lw	r11,-112(r30)
10061  00008e50  afab0014	sw	20(r29),r11
10062  00008e54  8fcbff94	lw	r11,-108(r30)
10063  00008e58  afab0018	sw	24(r29),r11
10064  00008e5c  8fcbff98	lw	r11,-104(r30)
10065  00008e60  afab001c	sw	28(r29),r11
10066  00008e64  8fcbff9c	lw	r11,-100(r30)
10067  00008e68  afab0020	sw	32(r29),r11
10068  00008e6c  0c0014d8	jal	_printf
10069  00008e70  54000000	nop; not filled.
10070  00008e74  23bd0028	addi	r29,r29,#40
10071  00008e78  8fa20000	lw	r2,0(r29)
10072  00008e7c  8fa30004	lw	r3,4(r29)
10073  00008e80  8fa40008	lw	r4,8(r29)
10074  00008e84  8fa5000c	lw	r5,12(r29)
10075  00008e88  8fa60010	lw	r6,16(r29)
10076  00008e8c  8fa70014	lw	r7,20(r29)
10077  00008e90  8fa80018	lw	r8,24(r29)
10078  00008e94  8fa9001c	lw	r9,28(r29)
10079  00008e98  8faa0020	lw	r10,32(r29)
10080  00008e9c  8fab0024	lw	r11,36(r29)
10081  00008ea0  8fdffff8	lw	r31,-8(r30)
10082  00008ea4  001ee820	add	r29,r0,r30
10083  00008ea8  8fdefffc	lw	r30,-4(r30)
10084  00008eac  4be00000	jr	r31
10085  00008eb0  54000000	nop
10086  00008eb4          	.endproc _TrapPrintfHandler_LF8
10087  00008eb4          	.data
10088  00012f1f          	.align 2
10089  00012f20          	LC0_LF8:
10090  00012f20  496e7465	.ascii "Interrupt cause=0x%x iar=0x%x isr=0x%x args=0x%08x.\n\000"
10090  00012f24  72727570	
10090  00012f28  74206361	
10090  00012f2c  7573653d	
10090  00012f30  30782578	
10090  00012f34  20696172	
10090  00012f38  3d307825	
10090  00012f3c  78206973	
10090  00012f40  723d3078	
10090  00012f44  25782061	
10090  00012f48  7267733d	
10090  00012f4c  30782530	
10090  00012f50  38782e0a	
10090  00012f54  00      	
10091  00012f55          	.align 2
10092  00012f58          	LC1_LF8:
10093  00012f58  476f7420	.ascii "Got a context switch trap!\n\000"
10093  00012f5c  6120636f	
10093  00012f60  6e746578	
10093  00012f64  74207377	
10093  00012f68  69746368	
10093  00012f6c  20747261	
10093  00012f70  70210a00	
10094  00012f74          	.align 2
10095  00012f74          	LC2_LF8:
10096  00012f74  476f7420	.ascii "Got an exit trap!\n\000"
10096  00012f78  616e2065	
10096  00012f7c  78697420	
10096  00012f80  74726170	
10096  00012f84  210a00  	
10097  00012f87          	.align 2
10098  00012f88          	LC3_LF8:
10099  00012f88  476f7420	.ascii "Got a fork trap!\n\000"
10099  00012f8c  6120666f	
10099  00012f90  726b2074	
10099  00012f94  72617021	
10099  00012f98  0a00    	
10100  00012f9a          	.align 2
10101  00012f9c          	LC4_LF8:
10102  00012f9c  476f7420	.ascii "Got a process sleep trap!\n\000"
10102  00012fa0  61207072	
10102  00012fa4  6f636573	
10102  00012fa8  7320736c	
10102  00012fac  65657020	
10102  00012fb0  74726170	
10102  00012fb4  210a00  	
10103  00012fb7          	.align 2
10104  00012fb8          	LC5_LF8:
10105  00012fb8  476f7420	.ascii "Got a printf trap!\n\000"
10105  00012fbc  61207072	
10105  00012fc0  696e7466	
10105  00012fc4  20747261	
10105  00012fc8  70210a00	
10106  00012fcc          	.align 2
10107  00012fcc          	LC6_LF8:
10108  00012fcc  476f7420	.ascii "Got an open with parameters (\'%s\',0x%x)\n\000"
10108  00012fd0  616e206f	
10108  00012fd4  70656e20	
10108  00012fd8  77697468	
10108  00012fdc  20706172	
10108  00012fe0  616d6574	
10108  00012fe4  65727320	
10108  00012fe8  28272573	
10108  00012fec  272c3078	
10108  00012ff0  2578290a	
10108  00012ff4  00      	
10109  00012ff5          	.align 2
10110  00012ff8          	LC7_LF8:
10111  00012ff8  2e3a4765	.ascii ".:GetPID() trap!:.\n\000"
10111  00012ffc  74504944	
10111  00013000  28292074	
10111  00013004  72617021	
10111  00013008  3a2e0a00	
10112  0001300c          	.align 2
10113  0001300c          	LC8_LF8:
10114  0001300c  2e3a4765	.ascii ".:GetSystemTime() trap!:.\n\000"
10114  00013010  74537973	
10114  00013014  74656d54	
10114  00013018  696d6528	
10114  0001301c  29207472	
10114  00013020  6170213a	
10114  00013024  2e0a00  	
10115  00013027          	.align 2
10116  00013028          	LC9_LF8:
10117  00013028  476f7420	.ascii "Got an unrecognized trap (0x%x) - exiting!\n\000"
10117  0001302c  616e2075	
10117  00013030  6e726563	
10117  00013034  6f676e69	
10117  00013038  7a656420	
10117  0001303c  74726170	
10117  00013040  20283078	
10117  00013044  25782920	
10117  00013048  2d206578	
10117  0001304c  6974696e	
10117  00013050  67210a00	
10118  00013054          	.align 2
10119  00013054          	LC10_LF8:
10120  00013054  476f7420	.ascii "Got a timer interrupt!\n\000"
10120  00013058  61207469	
10120  0001305c  6d657220	
10120  00013060  696e7465	
10120  00013064  72727570	
10120  00013068  74210a00	
10121  0001306c          	.align 2
10122  0001306c          	LC11_LF8:
10123  0001306c  476f7420	.ascii "Got a keyboard interrupt (char=0x%x(%c), nleft=%d)!\n\000"
10123  00013070  61206b65	
10123  00013074  79626f61	
10123  00013078  72642069	
10123  0001307c  6e746572	
10123  00013080  72757074	
10123  00013084  20286368	
10123  00013088  61723d30	
10123  0001308c  78257828	
10123  00013090  2563292c	
10123  00013094  206e6c65	
10123  00013098  66743d25	
10123  0001309c  6429210a	
10123  000130a0  00      	
10124  000130a1          	.align 2
10125  000130a4          	LC12_LF8:
10126  000130a4  45786974	.ascii "Exiting after illegal access at iar=0x%x, isr=0x%x\n\000"
10126  000130a8  696e6720	
10126  000130ac  61667465	
10126  000130b0  7220696c	
10126  000130b4  6c656761	
10126  000130b8  6c206163	
10126  000130bc  63657373	
10126  000130c0  20617420	
10126  000130c4  6961723d	
10126  000130c8  30782578	
10126  000130cc  2c206973	
10126  000130d0  723d3078	
10126  000130d4  25780a00	
10127  000130d8          	.align 2
10128  000130d8          	LC13_LF8:
10129  000130d8  45786974	.ascii "Exiting after illegal address at iar=0x%x, isr=0x%x\n\000"
10129  000130dc  696e6720	
10129  000130e0  61667465	
10129  000130e4  7220696c	
10129  000130e8  6c656761	
10129  000130ec  6c206164	
10129  000130f0  64726573	
10129  000130f4  73206174	
10129  000130f8  20696172	
10129  000130fc  3d307825	
10129  00013100  782c2069	
10129  00013104  73723d30	
10129  00013108  7825780a	
10129  0001310c  00      	
10130  0001310d          	.align 2
10131  00013110          	LC14_LF8:
10132  00013110  45786974	.ascii "Exiting after illegal instruction at iar=0x%x, isr=0x%x\n\000"
10132  00013114  696e6720	
10132  00013118  61667465	
10132  0001311c  7220696c	
10132  00013120  6c656761	
10132  00013124  6c20696e	
10132  00013128  73747275	
10132  0001312c  6374696f	
10132  00013130  6e206174	
10132  00013134  20696172	
10132  00013138  3d307825	
10132  0001313c  782c2069	
10132  00013140  73723d30	
10132  00013144  7825780a	
10132  00013148  00      	
10133  00013149          	.align 2
10134  0001314c          	LC15_LF8:
10135  0001314c  45786974	.ascii "Exiting after page fault at iar=0x%x, isr=0x%x\n\000"
10135  00013150  696e6720	
10135  00013154  61667465	
10135  00013158  72207061	
10135  0001315c  67652066	
10135  00013160  61756c74	
10135  00013164  20617420	
10135  00013168  6961723d	
10135  0001316c  30782578	
10135  00013170  2c206973	
10135  00013174  723d3078	
10135  00013178  25780a00	
10136  0001317c          	.align 2
10137  0001317c          	LC16_LF8:
10138  0001317c  476f7420	.ascii "Got an unrecognized system interrupt (0x%x) - exiting!\n\000"
10138  00013180  616e2075	
10138  00013184  6e726563	
10138  00013188  6f676e69	
10138  0001318c  7a656420	
10138  00013190  73797374	
10138  00013194  656d2069	
10138  00013198  6e746572	
10138  0001319c  72757074	
10138  000131a0  20283078	
10138  000131a4  25782920	
10138  000131a8  2d206578	
10138  000131ac  6974696e	
10138  000131b0  67210a00	
10139  000131b4          	.align 2
10140  000131b4          	LC17_LF8:
10141  000131b4  41626f75	.ascii "About to return from dointerrupt.\n\000"
10141  000131b8  7420746f	
10141  000131bc  20726574	
10141  000131c0  75726e20	
10141  000131c4  66726f6d	
10141  000131c8  20646f69	
10141  000131cc  6e746572	
10141  000131d0  72757074	
10141  000131d4  2e0a00  	
10142  000131d7          	.text
10143  00008eb4          	.align 2
10144  00008eb4          	.proc _dointerrupt
10145  00008eb4          	.global _dointerrupt
10146  00008eb4          	_dointerrupt:
10147                      ;  Function 'dointerrupt'; 48 bytes of locals, 6 regs to save.
10148  00008eb4  afbefffc	sw	-4(r29),r30; push fp
10149  00008eb8  001df020	add	r30,r0,r29; fp = sp
10150  00008ebc  afbffff8	sw	-8(r29),r31; push ret addr
10151  00008ec0  2fbd0050	subui	r29,r29,#80; alloc local storage
10152  00008ec4  afa20000	sw	0(r29),r2
10153  00008ec8  afa30004	sw	4(r29),r3
10154  00008ecc  afa40008	sw	8(r29),r4
10155  00008ed0  afa5000c	sw	12(r29),r5
10156  00008ed4  afa60010	sw	16(r29),r6
10157  00008ed8  afa70014	sw	20(r29),r7
10158  00008edc  8fc20000	lw	r2,(r30)
10159  00008ee0  8fc50004	lw	r5,4(r30)
10160  00008ee4  8fc40008	lw	r4,8(r30)
10161  00008ee8  8fc6000c	lw	r6,12(r30)
10162  00008eec  23bdfff8	addi	r29,r29,#-8
10163  00008ef0  3c030000	lhi	r3,((_debugstr)>>16)&0xffff
10164  00008ef4  2463fd4a	addui	r3,r3,(_debugstr)&0xffff
10165  00008ef8  afa30000	sw	(r29),r3
10166  00008efc  20070074	addi	r7,r0,#116
10167  00008f00  afa70004	sw	4(r29),r7
10168  00008f04  0fffaf10	jal	_dindex
10169  00008f08  54000000	nop; not filled.
10170  00008f0c  23bd0008	addi	r29,r29,#8
10171  00008f10  64210000	snei	r1,r1,#0
10172  00008f14  1420002c	bnez	r1,L84_LF8
10173  00008f18  54000000	nop; not filled.
10174  00008f1c  23bdfff8	addi	r29,r29,#-8
10175  00008f20  afa30000	sw	(r29),r3
10176  00008f24  2007002b	addi	r7,r0,#43
10177  00008f28  afa70004	sw	4(r29),r7
10178  00008f2c  0fffaee8	jal	_dindex
10179  00008f30  54000000	nop; not filled.
10180  00008f34  23bd0008	addi	r29,r29,#8
10181  00008f38  64210000	snei	r1,r1,#0
10182  00008f3c  10200030	beqz	r1,L83_LF8
10183  00008f40  54000000	nop; not filled.
10184  00008f44          	L84_LF8:
10185  00008f44  23bdffe8	addi	r29,r29,#-24
10186  00008f48  3c070001	lhi	r7,((LC0_LF8)>>16)&0xffff
10187  00008f4c  24e72f20	addui	r7,r7,(LC0_LF8)&0xffff
10188  00008f50  afa70000	sw	(r29),r7
10189  00008f54  afa20004	sw	4(r29),r2
10190  00008f58  afa50008	sw	8(r29),r5
10191  00008f5c  afa4000c	sw	12(r29),r4
10192  00008f60  afa60010	sw	16(r29),r6
10193  00008f64  0c0013e0	jal	_printf
10194  00008f68  54000000	nop; not filled.
10195  00008f6c  23bd0018	addi	r29,r29,#24
10196  00008f70          	L83_LF8:
10197  00008f70  3c070800	lhi	r7,#2048
10198  00008f74  24e70000	addui	r7,r7,#0
10199  00008f78  00470824	and	r1,r2,r7
10200  00008f7c  64210000	snei	r1,r1,#0
10201  00008f80  1020086c	beqz	r1,L85_LF8
10202  00008f84  54000000	nop; not filled.
10203  00008f88  3c07f7ff	lhi	r7,#-2049
10204  00008f8c  24e7ffff	addui	r7,r7,#65535
10205  00008f90  00471024	and	r2,r2,r7
10206  00008f94  60410300	seqi	r1,r2,#768
10207  00008f98  14200158	bnez	r1,L90_LF8
10208  00008f9c  54000000	nop; not filled.
10209  00008fa0  6c410300	sgtui	r1,r2,#768
10210  00008fa4  14200068	bnez	r1,L134_LF8
10211  00008fa8  54000000	nop; not filled.
10212  00008fac  60410211	seqi	r1,r2,#529
10213  00008fb0  14200564	bnez	r1,L113_LF8
10214  00008fb4  54000000	nop; not filled.
10215  00008fb8  6c410211	sgtui	r1,r2,#529
10216  00008fbc  14200024	bnez	r1,L135_LF8
10217  00008fc0  54000000	nop; not filled.
10218  00008fc4  60410201	seqi	r1,r2,#513
10219  00008fc8  142002e0	bnez	r1,L99_LF8
10220  00008fcc  54000000	nop; not filled.
10221  00008fd0  60410210	seqi	r1,r2,#528
10222  00008fd4  10200804	beqz	r1,L132_LF8
10223  00008fd8  54000000	nop; not filled.
10224  00008fdc  080004dc	j	L110_LF8
10225  00008fe0  54000000	nop; not filled.
10226  00008fe4          	L135_LF8:
10227  00008fe4  60410213	seqi	r1,r2,#531
10228  00008fe8  14200354	bnez	r1,L102_LF8
10229  00008fec  54000000	nop; not filled.
10230  00008ff0  68410213	sltui	r1,r2,#531
10231  00008ff4  142005d8	bnez	r1,L119_LF8
10232  00008ff8  54000000	nop; not filled.
10233  00008ffc  60410214	seqi	r1,r2,#532
10234  00009000  102007d8	beqz	r1,L132_LF8
10235  00009004  54000000	nop; not filled.
10236  00009008  08000454	j	L107_LF8
10237  0000900c  54000000	nop; not filled.
10238  00009010          	L134_LF8:
10239  00009010  60410430	seqi	r1,r2,#1072
10240  00009014  1420017c	bnez	r1,L93_LF8
10241  00009018  54000000	nop; not filled.
10242  0000901c  6c410430	sgtui	r1,r2,#1072
10243  00009020  14200024	bnez	r1,L136_LF8
10244  00009024  54000000	nop; not filled.
10245  00009028  60410400	seqi	r1,r2,#1024
10246  0000902c  14200058	bnez	r1,L87_LF8
10247  00009030  54000000	nop; not filled.
10248  00009034  60410410	seqi	r1,r2,#1040
10249  00009038  102007a0	beqz	r1,L132_LF8
10250  0000903c  54000000	nop; not filled.
10251  00009040  080001c8	j	L96_LF8
10252  00009044  54000000	nop; not filled.
10253  00009048          	L136_LF8:
10254  00009048  60410440	seqi	r1,r2,#1088
10255  0000904c  142006b4	bnez	r1,L127_LF8
10256  00009050  54000000	nop; not filled.
10257  00009054  6c410440	sgtui	r1,r2,#1088
10258  00009058  14200018	bnez	r1,L137_LF8
10259  0000905c  54000000	nop; not filled.
10260  00009060  60410431	seqi	r1,r2,#1073
10261  00009064  10200774	beqz	r1,L132_LF8
10262  00009068  54000000	nop; not filled.
10263  0000906c  080005bc	j	L122_LF8
10264  00009070  54000000	nop; not filled.
10265  00009074          	L137_LF8:
10266  00009074  60410580	seqi	r1,r2,#1408
10267  00009078  10200760	beqz	r1,L132_LF8
10268  0000907c  54000000	nop; not filled.
10269  00009080  080004f0	j	L116_LF8
10270  00009084  54000000	nop; not filled.
10271  00009088          	L87_LF8:
10272  00009088  23bdfff8	addi	r29,r29,#-8
10273  0000908c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10274  00009090  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
10275  00009094  afa20000	sw	(r29),r2
10276  00009098  20070074	addi	r7,r0,#116
10277  0000909c  afa70004	sw	4(r29),r7
10278  000090a0  0fffad74	jal	_dindex
10279  000090a4  54000000	nop; not filled.
10280  000090a8  23bd0008	addi	r29,r29,#8
10281  000090ac  64210000	snei	r1,r1,#0
10282  000090b0  1420002c	bnez	r1,L89_LF8
10283  000090b4  54000000	nop; not filled.
10284  000090b8  23bdfff8	addi	r29,r29,#-8
10285  000090bc  afa20000	sw	(r29),r2
10286  000090c0  2007002b	addi	r7,r0,#43
10287  000090c4  afa70004	sw	4(r29),r7
10288  000090c8  0fffad4c	jal	_dindex
10289  000090cc  54000000	nop; not filled.
10290  000090d0  23bd0008	addi	r29,r29,#8
10291  000090d4  64210000	snei	r1,r1,#0
10292  000090d8  10200800	beqz	r1,L141_LF8
10293  000090dc  54000000	nop; not filled.
10294  000090e0          	L89_LF8:
10295  000090e0  23bdfff8	addi	r29,r29,#-8
10296  000090e4  3c070001	lhi	r7,((LC1_LF8)>>16)&0xffff
10297  000090e8  24e72f58	addui	r7,r7,(LC1_LF8)&0xffff
10298  000090ec  080007dc	j	L161_LF8
10299  000090f0  54000000	nop; not filled.
10300  000090f4          	L90_LF8:
10301  000090f4  23bdfff8	addi	r29,r29,#-8
10302  000090f8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10303  000090fc  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
10304  00009100  afa20000	sw	(r29),r2
10305  00009104  20070074	addi	r7,r0,#116
10306  00009108  afa70004	sw	4(r29),r7
10307  0000910c  0fffad08	jal	_dindex
10308  00009110  54000000	nop; not filled.
10309  00009114  23bd0008	addi	r29,r29,#8
10310  00009118  64210000	snei	r1,r1,#0
10311  0000911c  1420002c	bnez	r1,L92_LF8
10312  00009120  54000000	nop; not filled.
10313  00009124  23bdfff8	addi	r29,r29,#-8
10314  00009128  afa20000	sw	(r29),r2
10315  0000912c  2007002b	addi	r7,r0,#43
10316  00009130  afa70004	sw	4(r29),r7
10317  00009134  0ffface0	jal	_dindex
10318  00009138  54000000	nop; not filled.
10319  0000913c  23bd0008	addi	r29,r29,#8
10320  00009140  64210000	snei	r1,r1,#0
10321  00009144  10200020	beqz	r1,L91_LF8
10322  00009148  54000000	nop; not filled.
10323  0000914c          	L92_LF8:
10324  0000914c  23bdfff8	addi	r29,r29,#-8
10325  00009150  3c070001	lhi	r7,((LC2_LF8)>>16)&0xffff
10326  00009154  24e72f74	addui	r7,r7,(LC2_LF8)&0xffff
10327  00009158  afa70000	sw	(r29),r7
10328  0000915c  0c0011e8	jal	_printf
10329  00009160  54000000	nop; not filled.
10330  00009164  23bd0008	addi	r29,r29,#8
10331  00009168          	L91_LF8:
10332  00009168  23bdfff8	addi	r29,r29,#-8
10333  0000916c  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10334  00009170  2421fe14	addui	r1,r1,(_currentPCB)&0xffff
10335  00009174  8c210000	lw	r1,(r1)
10336  00009178  afa10000	sw	(r29),r1
10337  0000917c  0fffc178	jal	_ProcessDestroy
10338  00009180  54000000	nop; not filled.
10339  00009184  0fffb9a8	jal	_ProcessSchedule
10340  00009188  54000000	nop; not filled.
10341  0000918c  08000844	j	L158_LF8
10342  00009190  54000000	nop; not filled.
10343  00009194          	L93_LF8:
10344  00009194  23bdfff8	addi	r29,r29,#-8
10345  00009198  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10346  0000919c  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
10347  000091a0  afa20000	sw	(r29),r2
10348  000091a4  20070074	addi	r7,r0,#116
10349  000091a8  afa70004	sw	4(r29),r7
10350  000091ac  0fffac68	jal	_dindex
10351  000091b0  54000000	nop; not filled.
10352  000091b4  23bd0008	addi	r29,r29,#8
10353  000091b8  64210000	snei	r1,r1,#0
10354  000091bc  1420002c	bnez	r1,L95_LF8
10355  000091c0  54000000	nop; not filled.
10356  000091c4  23bdfff8	addi	r29,r29,#-8
10357  000091c8  afa20000	sw	(r29),r2
10358  000091cc  2007002b	addi	r7,r0,#43
10359  000091d0  afa70004	sw	4(r29),r7
10360  000091d4  0fffac40	jal	_dindex
10361  000091d8  54000000	nop; not filled.
10362  000091dc  23bd0008	addi	r29,r29,#8
10363  000091e0  64210000	snei	r1,r1,#0
10364  000091e4  102007f0	beqz	r1,L138_LF8
10365  000091e8  54000000	nop; not filled.
10366  000091ec          	L95_LF8:
10367  000091ec  23bdfff8	addi	r29,r29,#-8
10368  000091f0  3c070001	lhi	r7,((LC3_LF8)>>16)&0xffff
10369  000091f4  24e72f88	addui	r7,r7,(LC3_LF8)&0xffff
10370  000091f8  afa70000	sw	(r29),r7
10371  000091fc  0c001148	jal	_printf
10372  00009200  54000000	nop; not filled.
10373  00009204  080007cc	j	L158_LF8
10374  00009208  54000000	nop; not filled.
10375  0000920c          	L96_LF8:
10376  0000920c  23bdfff8	addi	r29,r29,#-8
10377  00009210  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10378  00009214  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
10379  00009218  afa20000	sw	(r29),r2
10380  0000921c  20070074	addi	r7,r0,#116
10381  00009220  afa70004	sw	4(r29),r7
10382  00009224  0fffabf0	jal	_dindex
10383  00009228  54000000	nop; not filled.
10384  0000922c  23bd0008	addi	r29,r29,#8
10385  00009230  64210000	snei	r1,r1,#0
10386  00009234  1420002c	bnez	r1,L98_LF8
10387  00009238  54000000	nop; not filled.
10388  0000923c  23bdfff8	addi	r29,r29,#-8
10389  00009240  afa20000	sw	(r29),r2
10390  00009244  2007002b	addi	r7,r0,#43
10391  00009248  afa70004	sw	4(r29),r7
10392  0000924c  0fffabc8	jal	_dindex
10393  00009250  54000000	nop; not filled.
10394  00009254  23bd0008	addi	r29,r29,#8
10395  00009258  64210000	snei	r1,r1,#0
10396  0000925c  10200020	beqz	r1,L97_LF8
10397  00009260  54000000	nop; not filled.
10398  00009264          	L98_LF8:
10399  00009264  23bdfff8	addi	r29,r29,#-8
10400  00009268  3c070001	lhi	r7,((LC4_LF8)>>16)&0xffff
10401  0000926c  24e72f9c	addui	r7,r7,(LC4_LF8)&0xffff
10402  00009270  afa70000	sw	(r29),r7
10403  00009274  0c0010d0	jal	_printf
10404  00009278  54000000	nop; not filled.
10405  0000927c  23bd0008	addi	r29,r29,#8
10406  00009280          	L97_LF8:
10407  00009280  23bdfff8	addi	r29,r29,#-8
10408  00009284  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10409  00009288  2421fe14	addui	r1,r1,(_currentPCB)&0xffff
10410  0000928c  8c210000	lw	r1,(r1)
10411  00009290  afa10000	sw	(r29),r1
10412  00009294  0fffbd38	jal	_ProcessSuspend
10413  00009298  54000000	nop; not filled.
10414  0000929c  0fffb890	jal	_ProcessSchedule
10415  000092a0  54000000	nop; not filled.
10416  000092a4  0800072c	j	L158_LF8
10417  000092a8  54000000	nop; not filled.
10418  000092ac          	L99_LF8:
10419  000092ac  23bdfff8	addi	r29,r29,#-8
10420  000092b0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10421  000092b4  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
10422  000092b8  afa20000	sw	(r29),r2
10423  000092bc  20070074	addi	r7,r0,#116
10424  000092c0  afa70004	sw	4(r29),r7
10425  000092c4  0fffab50	jal	_dindex
10426  000092c8  54000000	nop; not filled.
10427  000092cc  23bd0008	addi	r29,r29,#8
10428  000092d0  64210000	snei	r1,r1,#0
10429  000092d4  1420002c	bnez	r1,L101_LF8
10430  000092d8  54000000	nop; not filled.
10431  000092dc  23bdfff8	addi	r29,r29,#-8
10432  000092e0  afa20000	sw	(r29),r2
10433  000092e4  2007002b	addi	r7,r0,#43
10434  000092e8  afa70004	sw	4(r29),r7
10435  000092ec  0fffab28	jal	_dindex
10436  000092f0  54000000	nop; not filled.
10437  000092f4  23bd0008	addi	r29,r29,#8
10438  000092f8  64210000	snei	r1,r1,#0
10439  000092fc  10200020	beqz	r1,L100_LF8
10440  00009300  54000000	nop; not filled.
10441  00009304          	L101_LF8:
10442  00009304  23bdfff8	addi	r29,r29,#-8
10443  00009308  3c070001	lhi	r7,((LC5_LF8)>>16)&0xffff
10444  0000930c  24e72fb8	addui	r7,r7,(LC5_LF8)&0xffff
10445  00009310  afa70000	sw	(r29),r7
10446  00009314  0c001030	jal	_printf
10447  00009318  54000000	nop; not filled.
10448  0000931c  23bd0008	addi	r29,r29,#8
10449  00009320          	L100_LF8:
10450  00009320  23bdfff8	addi	r29,r29,#-8
10451  00009324  afa60000	sw	(r29),r6
10452  00009328  30810040	andi	r1,r4,#64
10453  0000932c  afa10004	sw	4(r29),r1
10454  00009330  0ffff8ac	jal	_TrapPrintfHandler_LF8
10455  00009334  54000000	nop; not filled.
10456  00009338  08000698	j	L158_LF8
10457  0000933c  54000000	nop; not filled.
10458  00009340          	L102_LF8:
10459  00009340  30810040	andi	r1,r4,#64
10460  00009344  64210000	snei	r1,r1,#0
10461  00009348  1020001c	beqz	r1,L103_LF8
10462  0000934c  54000000	nop; not filled.
10463  00009350  8cc70000	lw	r7,(r6)
10464  00009354  afc7ffe8	sw	-24(r30),r7
10465  00009358  8cc60004	lw	r6,4(r6)
10466  0000935c  afc6ffec	sw	-20(r30),r6
10467  00009360  0800006c	j	L104_LF8
10468  00009364  54000000	nop; not filled.
10469  00009368          	L103_LF8:
10470  00009368  23bdfff0	addi	r29,r29,#-16
10471  0000936c  3c020000	lhi	r2,((_currentPCB)>>16)&0xffff
10472  00009370  2442fe14	addui	r2,r2,(_currentPCB)&0xffff
10473  00009374  8c470000	lw	r7,(r2)
10474  00009378  afa70000	sw	(r29),r7
10475  0000937c  afa60004	sw	4(r29),r6
10476  00009380  23c1ffe8	addi	r1,r30,#-24
10477  00009384  afa10008	sw	8(r29),r1
10478  00009388  20070008	addi	r7,r0,#8
10479  0000938c  afa7000c	sw	12(r29),r7
10480  00009390  0fffa1d4	jal	_MemoryCopyUserToSystem
10481  00009394  54000000	nop; not filled.
10482  00009398  8c420000	lw	r2,(r2)
10483  0000939c  afa20000	sw	(r29),r2
10484  000093a0  8fc1ffe8	lw	r1,-24(r30)
10485  000093a4  afa10004	sw	4(r29),r1
10486  000093a8  23c2ffc8	addi	r2,r30,#-56
10487  000093ac  afa20008	sw	8(r29),r2
10488  000093b0  2007001f	addi	r7,r0,#31
10489  000093b4  afa7000c	sw	12(r29),r7
10490  000093b8  0fffa1ac	jal	_MemoryCopyUserToSystem
10491  000093bc  54000000	nop; not filled.
10492  000093c0  20070000	addi	r7,r0,(#0x0)&0xff
10493  000093c4  a3c7ffe7	sb	-25(r30),r7
10494  000093c8  afc2ffe8	sw	-24(r30),r2
10495  000093cc  23bd0010	addi	r29,r29,#16
10496  000093d0          	L104_LF8:
10497  000093d0  23bdfff8	addi	r29,r29,#-8
10498  000093d4  20070000	addi	r7,r0,#0
10499  000093d8  afa70000	sw	(r29),r7
10500  000093dc  0fff7ea8	jal	_SetIntrs
10501  000093e0  54000000	nop; not filled.
10502  000093e4  00011820	add	r3,r0,r1
10503  000093e8  23bd0008	addi	r29,r29,#8
10504  000093ec  23bdfff8	addi	r29,r29,#-8
10505  000093f0  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10506  000093f4  2421fe14	addui	r1,r1,(_currentPCB)&0xffff
10507  000093f8  8c210000	lw	r1,(r1)
10508  000093fc  afa10000	sw	(r29),r1
10509  00009400  8fc1ffec	lw	r1,-20(r30)
10510  00009404  3c070001	lhi	r7,#1
10511  00009408  24e70000	addui	r7,r7,#0
10512  0000940c  00270820	add	r1,r1,r7
10513  00009410  afa10004	sw	4(r29),r1
10514  00009414  0fffb6e4	jal	_ProcessSetResult
10515  00009418  54000000	nop; not filled.
10516  0000941c  23bdfff8	addi	r29,r29,#-8
10517  00009420  3c070001	lhi	r7,((LC6_LF8)>>16)&0xffff
10518  00009424  24e72fcc	addui	r7,r7,(LC6_LF8)&0xffff
10519  00009428  afa70000	sw	(r29),r7
10520  0000942c  8fc1ffe8	lw	r1,-24(r30)
10521  00009430  afa10004	sw	4(r29),r1
10522  00009434  8fc7ffec	lw	r7,-20(r30)
10523  00009438  afa70008	sw	8(r29),r7
10524  0000943c  0c000f08	jal	_printf
10525  00009440  54000000	nop; not filled.
10526  00009444  23bd0010	addi	r29,r29,#16
10527  00009448  23bdfff8	addi	r29,r29,#-8
10528  0000944c  afa30000	sw	(r29),r3
10529  00009450  0fff7e34	jal	_SetIntrs
10530  00009454  54000000	nop; not filled.
10531  00009458  08000578	j	L158_LF8
10532  0000945c  54000000	nop; not filled.
10533  00009460          	L107_LF8:
10534  00009460  23bdfff8	addi	r29,r29,#-8
10535  00009464  20070000	addi	r7,r0,#0
10536  00009468  afa70000	sw	(r29),r7
10537  0000946c  0fff7e18	jal	_SetIntrs
10538  00009470  54000000	nop; not filled.
10539  00009474  00011820	add	r3,r0,r1
10540  00009478  23bd0008	addi	r29,r29,#8
10541  0000947c  23bdfff8	addi	r29,r29,#-8
10542  00009480  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10543  00009484  2421fe14	addui	r1,r1,(_currentPCB)&0xffff
10544  00009488  8c210000	lw	r1,(r1)
10545  0000948c  afa10000	sw	(r29),r1
10546  00009490  2007ffff	addi	r7,r0,#-1
10547  00009494  afa70004	sw	4(r29),r7
10548  00009498  0fffb660	jal	_ProcessSetResult
10549  0000949c  54000000	nop; not filled.
10550  000094a0  23bd0008	addi	r29,r29,#8
10551  000094a4  23bdfff8	addi	r29,r29,#-8
10552  000094a8  afa30000	sw	(r29),r3
10553  000094ac  0fff7dd8	jal	_SetIntrs
10554  000094b0  54000000	nop; not filled.
10555  000094b4  0800051c	j	L158_LF8
10556  000094b8  54000000	nop; not filled.
10557  000094bc          	L110_LF8:
10558  000094bc  23bdfff8	addi	r29,r29,#-8
10559  000094c0  20070000	addi	r7,r0,#0
10560  000094c4  afa70000	sw	(r29),r7
10561  000094c8  0fff7dbc	jal	_SetIntrs
10562  000094cc  54000000	nop; not filled.
10563  000094d0  00011820	add	r3,r0,r1
10564  000094d4  23bd0008	addi	r29,r29,#8
10565  000094d8  23bdfff8	addi	r29,r29,#-8
10566  000094dc  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10567  000094e0  2421fe14	addui	r1,r1,(_currentPCB)&0xffff
10568  000094e4  8c210000	lw	r1,(r1)
10569  000094e8  afa10000	sw	(r29),r1
10570  000094ec  2007ffff	addi	r7,r0,#-1
10571  000094f0  afa70004	sw	4(r29),r7
10572  000094f4  0fffb604	jal	_ProcessSetResult
10573  000094f8  54000000	nop; not filled.
10574  000094fc  23bd0008	addi	r29,r29,#8
10575  00009500  23bdfff8	addi	r29,r29,#-8
10576  00009504  afa30000	sw	(r29),r3
10577  00009508  0fff7d7c	jal	_SetIntrs
10578  0000950c  54000000	nop; not filled.
10579  00009510  080004c0	j	L158_LF8
10580  00009514  54000000	nop; not filled.
10581  00009518          	L113_LF8:
10582  00009518  23bdfff8	addi	r29,r29,#-8
10583  0000951c  20070000	addi	r7,r0,#0
10584  00009520  afa70000	sw	(r29),r7
10585  00009524  0fff7d60	jal	_SetIntrs
10586  00009528  54000000	nop; not filled.
10587  0000952c  00011820	add	r3,r0,r1
10588  00009530  23bd0008	addi	r29,r29,#8
10589  00009534  23bdfff8	addi	r29,r29,#-8
10590  00009538  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10591  0000953c  2421fe14	addui	r1,r1,(_currentPCB)&0xffff
10592  00009540  8c210000	lw	r1,(r1)
10593  00009544  afa10000	sw	(r29),r1
10594  00009548  2007ffff	addi	r7,r0,#-1
10595  0000954c  afa70004	sw	4(r29),r7
10596  00009550  0fffb5a8	jal	_ProcessSetResult
10597  00009554  54000000	nop; not filled.
10598  00009558  23bd0008	addi	r29,r29,#8
10599  0000955c  23bdfff8	addi	r29,r29,#-8
10600  00009560  afa30000	sw	(r29),r3
10601  00009564  0fff7d20	jal	_SetIntrs
10602  00009568  54000000	nop; not filled.
10603  0000956c  08000464	j	L158_LF8
10604  00009570  54000000	nop; not filled.
10605  00009574          	L116_LF8:
10606  00009574  23bdfff8	addi	r29,r29,#-8
10607  00009578  20070000	addi	r7,r0,#0
10608  0000957c  afa70000	sw	(r29),r7
10609  00009580  0fff7d04	jal	_SetIntrs
10610  00009584  54000000	nop; not filled.
10611  00009588  00011820	add	r3,r0,r1
10612  0000958c  23bd0008	addi	r29,r29,#8
10613  00009590  23bdfff8	addi	r29,r29,#-8
10614  00009594  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10615  00009598  2421fe14	addui	r1,r1,(_currentPCB)&0xffff
10616  0000959c  8c210000	lw	r1,(r1)
10617  000095a0  afa10000	sw	(r29),r1
10618  000095a4  2007ffff	addi	r7,r0,#-1
10619  000095a8  afa70004	sw	4(r29),r7
10620  000095ac  0fffb54c	jal	_ProcessSetResult
10621  000095b0  54000000	nop; not filled.
10622  000095b4  23bd0008	addi	r29,r29,#8
10623  000095b8  23bdfff8	addi	r29,r29,#-8
10624  000095bc  afa30000	sw	(r29),r3
10625  000095c0  0fff7cc4	jal	_SetIntrs
10626  000095c4  54000000	nop; not filled.
10627  000095c8  08000408	j	L158_LF8
10628  000095cc  54000000	nop; not filled.
10629  000095d0          	L119_LF8:
10630  000095d0  23bdfff8	addi	r29,r29,#-8
10631  000095d4  20070000	addi	r7,r0,#0
10632  000095d8  afa70000	sw	(r29),r7
10633  000095dc  0fff7ca8	jal	_SetIntrs
10634  000095e0  54000000	nop; not filled.
10635  000095e4  00011820	add	r3,r0,r1
10636  000095e8  23bd0008	addi	r29,r29,#8
10637  000095ec  23bdfff8	addi	r29,r29,#-8
10638  000095f0  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10639  000095f4  2421fe14	addui	r1,r1,(_currentPCB)&0xffff
10640  000095f8  8c210000	lw	r1,(r1)
10641  000095fc  afa10000	sw	(r29),r1
10642  00009600  2007ffff	addi	r7,r0,#-1
10643  00009604  afa70004	sw	4(r29),r7
10644  00009608  0fffb4f0	jal	_ProcessSetResult
10645  0000960c  54000000	nop; not filled.
10646  00009610  23bd0008	addi	r29,r29,#8
10647  00009614  23bdfff8	addi	r29,r29,#-8
10648  00009618  afa30000	sw	(r29),r3
10649  0000961c  0fff7c68	jal	_SetIntrs
10650  00009620  54000000	nop; not filled.
10651  00009624  080003ac	j	L158_LF8
10652  00009628  54000000	nop; not filled.
10653  0000962c          	L122_LF8:
10654  0000962c  23bdfff8	addi	r29,r29,#-8
10655  00009630  20070000	addi	r7,r0,#0
10656  00009634  afa70000	sw	(r29),r7
10657  00009638  0fff7c4c	jal	_SetIntrs
10658  0000963c  54000000	nop; not filled.
10659  00009640  00011820	add	r3,r0,r1
10660  00009644  23bd0008	addi	r29,r29,#8
10661  00009648  23bdfff8	addi	r29,r29,#-8
10662  0000964c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10663  00009650  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
10664  00009654  afa20000	sw	(r29),r2
10665  00009658  2007007a	addi	r7,r0,#122
10666  0000965c  afa70004	sw	4(r29),r7
10667  00009660  0fffa7b4	jal	_dindex
10668  00009664  54000000	nop; not filled.
10669  00009668  23bd0008	addi	r29,r29,#8
10670  0000966c  64210000	snei	r1,r1,#0
10671  00009670  1420002c	bnez	r1,L125_LF8
10672  00009674  54000000	nop; not filled.
10673  00009678  23bdfff8	addi	r29,r29,#-8
10674  0000967c  afa20000	sw	(r29),r2
10675  00009680  2007002b	addi	r7,r0,#43
10676  00009684  afa70004	sw	4(r29),r7
10677  00009688  0fffa78c	jal	_dindex
10678  0000968c  54000000	nop; not filled.
10679  00009690  23bd0008	addi	r29,r29,#8
10680  00009694  64210000	snei	r1,r1,#0
10681  00009698  10200020	beqz	r1,L124_LF8
10682  0000969c  54000000	nop; not filled.
10683  000096a0          	L125_LF8:
10684  000096a0  23bdfff8	addi	r29,r29,#-8
10685  000096a4  3c070001	lhi	r7,((LC7_LF8)>>16)&0xffff
10686  000096a8  24e72ff8	addui	r7,r7,(LC7_LF8)&0xffff
10687  000096ac  afa70000	sw	(r29),r7
10688  000096b0  0c000c94	jal	_printf
10689  000096b4  54000000	nop; not filled.
10690  000096b8  23bd0008	addi	r29,r29,#8
10691  000096bc          	L124_LF8:
10692  000096bc  0fffd484	jal	_GetPID
10693  000096c0  54000000	nop; not filled.
10694  000096c4  00011020	add	r2,r0,r1
10695  000096c8  23bdfff8	addi	r29,r29,#-8
10696  000096cc  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10697  000096d0  2421fe14	addui	r1,r1,(_currentPCB)&0xffff
10698  000096d4  8c210000	lw	r1,(r1)
10699  000096d8  afa10000	sw	(r29),r1
10700  000096dc  afa20004	sw	4(r29),r2
10701  000096e0  0fffb418	jal	_ProcessSetResult
10702  000096e4  54000000	nop; not filled.
10703  000096e8  23bd0008	addi	r29,r29,#8
10704  000096ec  23bdfff8	addi	r29,r29,#-8
10705  000096f0  afa30000	sw	(r29),r3
10706  000096f4  0fff7b90	jal	_SetIntrs
10707  000096f8  54000000	nop; not filled.
10708  000096fc  080002d4	j	L158_LF8
10709  00009700  54000000	nop; not filled.
10710  00009704          	L127_LF8:
10711  00009704  23bdfff8	addi	r29,r29,#-8
10712  00009708  20070000	addi	r7,r0,#0
10713  0000970c  afa70000	sw	(r29),r7
10714  00009710  0fff7b74	jal	_SetIntrs
10715  00009714  54000000	nop; not filled.
10716  00009718  00011820	add	r3,r0,r1
10717  0000971c  23bd0008	addi	r29,r29,#8
10718  00009720  23bdfff8	addi	r29,r29,#-8
10719  00009724  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10720  00009728  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
10721  0000972c  afa20000	sw	(r29),r2
10722  00009730  2007007a	addi	r7,r0,#122
10723  00009734  afa70004	sw	4(r29),r7
10724  00009738  0fffa6dc	jal	_dindex
10725  0000973c  54000000	nop; not filled.
10726  00009740  23bd0008	addi	r29,r29,#8
10727  00009744  64210000	snei	r1,r1,#0
10728  00009748  1420002c	bnez	r1,L130_LF8
10729  0000974c  54000000	nop; not filled.
10730  00009750  23bdfff8	addi	r29,r29,#-8
10731  00009754  afa20000	sw	(r29),r2
10732  00009758  2007002b	addi	r7,r0,#43
10733  0000975c  afa70004	sw	4(r29),r7
10734  00009760  0fffa6b4	jal	_dindex
10735  00009764  54000000	nop; not filled.
10736  00009768  23bd0008	addi	r29,r29,#8
10737  0000976c  64210000	snei	r1,r1,#0
10738  00009770  10200020	beqz	r1,L129_LF8
10739  00009774  54000000	nop; not filled.
10740  00009778          	L130_LF8:
10741  00009778  23bdfff8	addi	r29,r29,#-8
10742  0000977c  3c070001	lhi	r7,((LC8_LF8)>>16)&0xffff
10743  00009780  24e7300c	addui	r7,r7,(LC8_LF8)&0xffff
10744  00009784  afa70000	sw	(r29),r7
10745  00009788  0c000bbc	jal	_printf
10746  0000978c  54000000	nop; not filled.
10747  00009790  23bd0008	addi	r29,r29,#8
10748  00009794          	L129_LF8:
10749  00009794  0fffd40c	jal	_GetSystemTime
10750  00009798  54000000	nop; not filled.
10751  0000979c  00011020	add	r2,r0,r1
10752  000097a0  23bdfff8	addi	r29,r29,#-8
10753  000097a4  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10754  000097a8  2421fe14	addui	r1,r1,(_currentPCB)&0xffff
10755  000097ac  8c210000	lw	r1,(r1)
10756  000097b0  afa10000	sw	(r29),r1
10757  000097b4  afa20004	sw	4(r29),r2
10758  000097b8  0fffb340	jal	_ProcessSetResult
10759  000097bc  54000000	nop; not filled.
10760  000097c0  23bd0008	addi	r29,r29,#8
10761  000097c4  23bdfff8	addi	r29,r29,#-8
10762  000097c8  afa30000	sw	(r29),r3
10763  000097cc  0fff7ab8	jal	_SetIntrs
10764  000097d0  54000000	nop; not filled.
10765  000097d4  080001fc	j	L158_LF8
10766  000097d8  54000000	nop; not filled.
10767  000097dc          	L132_LF8:
10768  000097dc  23bdfff8	addi	r29,r29,#-8
10769  000097e0  3c070001	lhi	r7,((LC9_LF8)>>16)&0xffff
10770  000097e4  24e73028	addui	r7,r7,(LC9_LF8)&0xffff
10771  000097e8  080001d0	j	L159_LF8
10772  000097ec  54000000	nop; not filled.
10773  000097f0          	L85_LF8:
10774  000097f0  60410003	seqi	r1,r2,#3
10775  000097f4  14200148	bnez	r1,L148_LF8
10776  000097f8  54000000	nop; not filled.
10777  000097fc  6c410003	sgtui	r1,r2,#3
10778  00009800  14200024	bnez	r1,L154_LF8
10779  00009804  54000000	nop; not filled.
10780  00009808  60410001	seqi	r1,r2,#1
10781  0000980c  14200158	bnez	r1,L150_LF8
10782  00009810  54000000	nop; not filled.
10783  00009814  60410002	seqi	r1,r2,#2
10784  00009818  10200194	beqz	r1,L152_LF8
10785  0000981c  54000000	nop; not filled.
10786  00009820  08000130	j	L149_LF8
10787  00009824  54000000	nop; not filled.
10788  00009828          	L154_LF8:
10789  00009828  60410040	seqi	r1,r2,#64
10790  0000982c  14200038	bnez	r1,L140_LF8
10791  00009830  54000000	nop; not filled.
10792  00009834  6c410040	sgtui	r1,r2,#64
10793  00009838  14200018	bnez	r1,L155_LF8
10794  0000983c  54000000	nop; not filled.
10795  00009840  60410020	seqi	r1,r2,#32
10796  00009844  10200168	beqz	r1,L152_LF8
10797  00009848  54000000	nop; not filled.
10798  0000984c  0800012c	j	L151_LF8
10799  00009850  54000000	nop; not filled.
10800  00009854          	L155_LF8:
10801  00009854  60410048	seqi	r1,r2,#72
10802  00009858  10200154	beqz	r1,L152_LF8
10803  0000985c  54000000	nop; not filled.
10804  00009860  08000088	j	L143_LF8
10805  00009864  54000000	nop; not filled.
10806  00009868          	L140_LF8:
10807  00009868  23bdfff8	addi	r29,r29,#-8
10808  0000986c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10809  00009870  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
10810  00009874  afa20000	sw	(r29),r2
10811  00009878  20070074	addi	r7,r0,#116
10812  0000987c  afa70004	sw	4(r29),r7
10813  00009880  0fffa594	jal	_dindex
10814  00009884  54000000	nop; not filled.
10815  00009888  23bd0008	addi	r29,r29,#8
10816  0000988c  64210000	snei	r1,r1,#0
10817  00009890  1420002c	bnez	r1,L142_LF8
10818  00009894  54000000	nop; not filled.
10819  00009898  23bdfff8	addi	r29,r29,#-8
10820  0000989c  afa20000	sw	(r29),r2
10821  000098a0  2007002b	addi	r7,r0,#43
10822  000098a4  afa70004	sw	4(r29),r7
10823  000098a8  0fffa56c	jal	_dindex
10824  000098ac  54000000	nop; not filled.
10825  000098b0  23bd0008	addi	r29,r29,#8
10826  000098b4  64210000	snei	r1,r1,#0
10827  000098b8  10200020	beqz	r1,L141_LF8
10828  000098bc  54000000	nop; not filled.
10829  000098c0          	L142_LF8:
10830  000098c0  23bdfff8	addi	r29,r29,#-8
10831  000098c4  3c070001	lhi	r7,((LC10_LF8)>>16)&0xffff
10832  000098c8  24e73054	addui	r7,r7,(LC10_LF8)&0xffff
10833  000098cc          	L161_LF8:
10834  000098cc  afa70000	sw	(r29),r7
10835  000098d0  0c000a74	jal	_printf
10836  000098d4  54000000	nop; not filled.
10837  000098d8  23bd0008	addi	r29,r29,#8
10838  000098dc          	L141_LF8:
10839  000098dc  0fffb250	jal	_ProcessSchedule
10840  000098e0  54000000	nop; not filled.
10841  000098e4  080000f0	j	L138_LF8
10842  000098e8  54000000	nop; not filled.
10843  000098ec          	L143_LF8:
10844  000098ec  3c04fff0	lhi	r4,#-16
10845  000098f0  248401a0	addui	r4,r4,#416
10846  000098f4  3c03fff0	lhi	r3,#-16
10847  000098f8  24630180	addui	r3,r3,#384
10848  000098fc          	L144_LF8:
10849  000098fc  8c820000	lw	r2,(r4)
10850  00009900  8c610000	lw	r1,(r3)
10851  00009904  23bdfff0	addi	r29,r29,#-16
10852  00009908  3c070001	lhi	r7,((LC11_LF8)>>16)&0xffff
10853  0000990c  24e7306c	addui	r7,r7,(LC11_LF8)&0xffff
10854  00009910  afa70000	sw	(r29),r7
10855  00009914  afa10004	sw	4(r29),r1
10856  00009918  afa10008	sw	8(r29),r1
10857  0000991c  afa2000c	sw	12(r29),r2
10858  00009920  0c000a24	jal	_printf
10859  00009924  54000000	nop; not filled.
10860  00009928  23bd0010	addi	r29,r29,#16
10861  0000992c  6c410001	sgti	r1,r2,#1
10862  00009930  102000a4	beqz	r1,L138_LF8
10863  00009934  54000000	nop; not filled.
10864  00009938  0bffffc0	j	L144_LF8
10865  0000993c  54000000	nop; not filled.
10866  00009940          	L148_LF8:
10867  00009940  23bdfff0	addi	r29,r29,#-16
10868  00009944  3c070001	lhi	r7,((LC12_LF8)>>16)&0xffff
10869  00009948  24e730a4	addui	r7,r7,(LC12_LF8)&0xffff
10870  0000994c  08000038	j	L160_LF8
10871  00009950  54000000	nop; not filled.
10872  00009954          	L149_LF8:
10873  00009954  23bdfff0	addi	r29,r29,#-16
10874  00009958  3c070001	lhi	r7,((LC13_LF8)>>16)&0xffff
10875  0000995c  24e730d8	addui	r7,r7,(LC13_LF8)&0xffff
10876  00009960  08000024	j	L160_LF8
10877  00009964  54000000	nop; not filled.
10878  00009968          	L150_LF8:
10879  00009968  23bdfff0	addi	r29,r29,#-16
10880  0000996c  3c070001	lhi	r7,((LC14_LF8)>>16)&0xffff
10881  00009970  24e73110	addui	r7,r7,(LC14_LF8)&0xffff
10882  00009974  08000010	j	L160_LF8
10883  00009978  54000000	nop; not filled.
10884  0000997c          	L151_LF8:
10885  0000997c  23bdfff0	addi	r29,r29,#-16
10886  00009980  3c070001	lhi	r7,((LC15_LF8)>>16)&0xffff
10887  00009984  24e7314c	addui	r7,r7,(LC15_LF8)&0xffff
10888  00009988          	L160_LF8:
10889  00009988  afa70000	sw	(r29),r7
10890  0000998c  afa50004	sw	4(r29),r5
10891  00009990  afa40008	sw	8(r29),r4
10892  00009994  0c0009b0	jal	_printf
10893  00009998  54000000	nop; not filled.
10894  0000999c  0c000990	jal	_exitsim
10895  000099a0  54000000	nop; not filled.
10896  000099a4  23bd0010	addi	r29,r29,#16
10897  000099a8  0800002c	j	L138_LF8
10898  000099ac  54000000	nop; not filled.
10899  000099b0          	L152_LF8:
10900  000099b0  23bdfff8	addi	r29,r29,#-8
10901  000099b4  3c070001	lhi	r7,((LC16_LF8)>>16)&0xffff
10902  000099b8  24e7317c	addui	r7,r7,(LC16_LF8)&0xffff
10903  000099bc          	L159_LF8:
10904  000099bc  afa70000	sw	(r29),r7
10905  000099c0  afa20004	sw	4(r29),r2
10906  000099c4  0c000980	jal	_printf
10907  000099c8  54000000	nop; not filled.
10908  000099cc  0c000960	jal	_exitsim
10909  000099d0  54000000	nop; not filled.
10910  000099d4          	L158_LF8:
10911  000099d4  23bd0008	addi	r29,r29,#8
10912  000099d8          	L138_LF8:
10913  000099d8  23bdfff8	addi	r29,r29,#-8
10914  000099dc  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10915  000099e0  2442fd4a	addui	r2,r2,(_debugstr)&0xffff
10916  000099e4  afa20000	sw	(r29),r2
10917  000099e8  20070074	addi	r7,r0,#116
10918  000099ec  afa70004	sw	4(r29),r7
10919  000099f0  0fffa424	jal	_dindex
10920  000099f4  54000000	nop; not filled.
10921  000099f8  23bd0008	addi	r29,r29,#8
10922  000099fc  64210000	snei	r1,r1,#0
10923  00009a00  1420002c	bnez	r1,L157_LF8
10924  00009a04  54000000	nop; not filled.
10925  00009a08  23bdfff8	addi	r29,r29,#-8
10926  00009a0c  afa20000	sw	(r29),r2
10927  00009a10  2007002b	addi	r7,r0,#43
10928  00009a14  afa70004	sw	4(r29),r7
10929  00009a18  0fffa3fc	jal	_dindex
10930  00009a1c  54000000	nop; not filled.
10931  00009a20  23bd0008	addi	r29,r29,#8
10932  00009a24  64210000	snei	r1,r1,#0
10933  00009a28  10200020	beqz	r1,L156_LF8
10934  00009a2c  54000000	nop; not filled.
10935  00009a30          	L157_LF8:
10936  00009a30  23bdfff8	addi	r29,r29,#-8
10937  00009a34  3c070001	lhi	r7,((LC17_LF8)>>16)&0xffff
10938  00009a38  24e731b4	addui	r7,r7,(LC17_LF8)&0xffff
10939  00009a3c  afa70000	sw	(r29),r7
10940  00009a40  0c000904	jal	_printf
10941  00009a44  54000000	nop; not filled.
10942  00009a48  23bd0008	addi	r29,r29,#8
10943  00009a4c          	L156_LF8:
10944  00009a4c  0fff7718	jal	_intrreturn
10945  00009a50  54000000	nop; not filled.
10946  00009a54  8fa20000	lw	r2,0(r29)
10947  00009a58  8fa30004	lw	r3,4(r29)
10948  00009a5c  8fa40008	lw	r4,8(r29)
10949  00009a60  8fa5000c	lw	r5,12(r29)
10950  00009a64  8fa60010	lw	r6,16(r29)
10951  00009a68  8fa70014	lw	r7,20(r29)
10952  00009a6c  8fdffff8	lw	r31,-8(r30)
10953  00009a70  001ee820	add	r29,r0,r30
10954  00009a74  8fdefffc	lw	r30,-4(r30)
10955  00009a78  4be00000	jr	r31
10956  00009a7c  54000000	nop
10957  00009a80          	.endproc _dointerrupt
10958                      ; Compiled by GCC
10960  00009a80          	.align 2
10961  00009a80          	.proc _isspace
10962  00009a80          	.global _isspace
10963  00009a80          	_isspace:
10964                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
10965  00009a80  afbefffc	sw	-4(r29),r30; push fp
10966  00009a84  001df020	add	r30,r0,r29; fp = sp
10967  00009a88  afbffff8	sw	-8(r29),r31; push ret addr
10968  00009a8c  2fbd0010	subui	r29,r29,#16; alloc local storage
10969  00009a90  afa20000	sw	0(r29),r2
10970  00009a94  83c20003	lb	r2,3(r30)
10971  00009a98  201f0000	addi	r31,r0,#0
10972  00009a9c  304100ff	andi	r1,r2,#0x00ff
10973  00009aa0  60210020	seqi	r1,r1,#32
10974  00009aa4  14200018	bnez	r1,L6_LF9
10975  00009aa8  54000000	nop; not filled.
10976  00009aac  2041fff7	addi	r1,r2,#-9
10977  00009ab0  302100ff	andi	r1,r1,#0x00ff
10978  00009ab4  70210001	sleui	r1,r1,#1
10979  00009ab8  10200008	beqz	r1,L5_LF9
10980  00009abc  54000000	nop; not filled.
10981  00009ac0          	L6_LF9:
10982  00009ac0  201f0001	addi	r31,r0,#1
10983  00009ac4          	L5_LF9:
10984  00009ac4  001f0820	add	r1,r0,r31
10985  00009ac8  8fa20000	lw	r2,0(r29)
10986  00009acc  8fdffff8	lw	r31,-8(r30)
10987  00009ad0  001ee820	add	r29,r0,r30
10988  00009ad4  8fdefffc	lw	r30,-4(r30)
10989  00009ad8  4be00000	jr	r31
10990  00009adc  54000000	nop
10991  00009ae0          	.endproc _isspace
10992  00009ae0          	.align 2
10993  00009ae0          	.proc _isxdigit
10994  00009ae0          	.global _isxdigit
10995  00009ae0          	_isxdigit:
10996                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
10997  00009ae0  afbefffc	sw	-4(r29),r30; push fp
10998  00009ae4  001df020	add	r30,r0,r29; fp = sp
10999  00009ae8  afbffff8	sw	-8(r29),r31; push ret addr
11000  00009aec  2fbd0010	subui	r29,r29,#16; alloc local storage
11001  00009af0  afa20000	sw	0(r29),r2
11002  00009af4  83df0003	lb	r31,3(r30)
11003  00009af8  20020000	addi	r2,r0,#0
11004  00009afc  23e1ffd0	addi	r1,r31,#-48
11005  00009b00  302100ff	andi	r1,r1,#0x00ff
11006  00009b04  70210009	sleui	r1,r1,#9
11007  00009b08  14200028	bnez	r1,L12_LF9
11008  00009b0c  54000000	nop; not filled.
11009  00009b10  23e1ff9f	addi	r1,r31,#-97
11010  00009b14  302100ff	andi	r1,r1,#0x00ff
11011  00009b18  70210005	sleui	r1,r1,#5
11012  00009b1c  14200014	bnez	r1,L12_LF9
11013  00009b20  54000000	nop; not filled.
11014  00009b24  33e100ff	andi	r1,r31,#0x00ff
11015  00009b28  64210041	snei	r1,r1,#65
11016  00009b2c  14200008	bnez	r1,L11_LF9
11017  00009b30  54000000	nop; not filled.
11018  00009b34          	L12_LF9:
11019  00009b34  20020001	addi	r2,r0,#1
11020  00009b38          	L11_LF9:
11021  00009b38  00020820	add	r1,r0,r2
11022  00009b3c  8fa20000	lw	r2,0(r29)
11023  00009b40  8fdffff8	lw	r31,-8(r30)
11024  00009b44  001ee820	add	r29,r0,r30
11025  00009b48  8fdefffc	lw	r30,-4(r30)
11026  00009b4c  4be00000	jr	r31
11027  00009b50  54000000	nop
11028  00009b54          	.endproc _isxdigit
11029  00009b54          	.align 2
11030  00009b54          	.proc _DisableIntrs
11031  00009b54          	.global _DisableIntrs
11032  00009b54          	_DisableIntrs:
11033                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
11034  00009b54  afbefffc	sw	-4(r29),r30; push fp
11035  00009b58  001df020	add	r30,r0,r29; fp = sp
11036  00009b5c  afbffff8	sw	-8(r29),r31; push ret addr
11037  00009b60  2fbd0010	subui	r29,r29,#16; alloc local storage
11038  00009b64  afa20000	sw	0(r29),r2
11039  00009b68  23bdfff8	addi	r29,r29,#-8
11040  00009b6c  2002000f	addi	r2,r0,#15
11041  00009b70  afa20000	sw	(r29),r2
11042  00009b74  0fff7710	jal	_SetIntrs
11043  00009b78  54000000	nop; not filled.
11044  00009b7c  23bd0008	addi	r29,r29,#8
11045  00009b80  8fa20000	lw	r2,0(r29)
11046  00009b84  8fdffff8	lw	r31,-8(r30)
11047  00009b88  001ee820	add	r29,r0,r30
11048  00009b8c  8fdefffc	lw	r30,-4(r30)
11049  00009b90  4be00000	jr	r31
11050  00009b94  54000000	nop
11051  00009b98          	.endproc _DisableIntrs
11052  00009b98          	.align 2
11053  00009b98          	.proc _EnableIntrs
11054  00009b98          	.global _EnableIntrs
11055  00009b98          	_EnableIntrs:
11056                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
11057  00009b98  afbefffc	sw	-4(r29),r30; push fp
11058  00009b9c  001df020	add	r30,r0,r29; fp = sp
11059  00009ba0  afbffff8	sw	-8(r29),r31; push ret addr
11060  00009ba4  2fbd0010	subui	r29,r29,#16; alloc local storage
11061  00009ba8  afa20000	sw	0(r29),r2
11062  00009bac  23bdfff8	addi	r29,r29,#-8
11063  00009bb0  20020000	addi	r2,r0,#0
11064  00009bb4  afa20000	sw	(r29),r2
11065  00009bb8  0fff76cc	jal	_SetIntrs
11066  00009bbc  54000000	nop; not filled.
11067  00009bc0  23bd0008	addi	r29,r29,#8
11068  00009bc4  8fa20000	lw	r2,0(r29)
11069  00009bc8  8fdffff8	lw	r31,-8(r30)
11070  00009bcc  001ee820	add	r29,r0,r30
11071  00009bd0  8fdefffc	lw	r30,-4(r30)
11072  00009bd4  4be00000	jr	r31
11073  00009bd8  54000000	nop
11074  00009bdc          	.endproc _EnableIntrs
11075  00009bdc          	.align 2
11076  00009bdc          	.proc _RestoreIntrs
11077  00009bdc          	.global _RestoreIntrs
11078  00009bdc          	_RestoreIntrs:
11079                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
11080  00009bdc  afbefffc	sw	-4(r29),r30; push fp
11081  00009be0  001df020	add	r30,r0,r29; fp = sp
11082  00009be4  afbffff8	sw	-8(r29),r31; push ret addr
11083  00009be8  2fbd0010	subui	r29,r29,#16; alloc local storage
11084  00009bec  afa20000	sw	0(r29),r2
11085  00009bf0  23bdfff8	addi	r29,r29,#-8
11086  00009bf4  8fc20000	lw	r2,(r30)
11087  00009bf8  afa20000	sw	(r29),r2
11088  00009bfc  0fff7688	jal	_SetIntrs
11089  00009c00  54000000	nop; not filled.
11090  00009c04  23bd0008	addi	r29,r29,#8
11091  00009c08  8fa20000	lw	r2,0(r29)
11092  00009c0c  8fdffff8	lw	r31,-8(r30)
11093  00009c10  001ee820	add	r29,r0,r30
11094  00009c14  8fdefffc	lw	r30,-4(r30)
11095  00009c18  4be00000	jr	r31
11096  00009c1c  54000000	nop
11097  00009c20          	.endproc _RestoreIntrs
11098  00009c20          	.align 2
11099  00009c20          	.proc _QueueLinkInit
11100  00009c20          	.global _QueueLinkInit
11101  00009c20          	_QueueLinkInit:
11102                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
11103  00009c20  afbefffc	sw	-4(r29),r30; push fp
11104  00009c24  001df020	add	r30,r0,r29; fp = sp
11105  00009c28  afbffff8	sw	-8(r29),r31; push ret addr
11106  00009c2c  2fbd0010	subui	r29,r29,#16; alloc local storage
11107  00009c30  afa20000	sw	0(r29),r2
11108  00009c34  8fc10000	lw	r1,(r30)
11109  00009c38  8fc20004	lw	r2,4(r30)
11110  00009c3c  201f0000	addi	r31,r0,#0
11111  00009c40  ac3f0000	sw	(r1),r31
11112  00009c44  ac22000c	sw	12(r1),r2
11113  00009c48  8fa20000	lw	r2,0(r29)
11114  00009c4c  8fdffff8	lw	r31,-8(r30)
11115  00009c50  001ee820	add	r29,r0,r30
11116  00009c54  8fdefffc	lw	r30,-4(r30)
11117  00009c58  4be00000	jr	r31
11118  00009c5c  54000000	nop
11119  00009c60          	.endproc _QueueLinkInit
11120  00009c60          	.align 2
11121  00009c60          	.proc _QueueNext
11122  00009c60          	.global _QueueNext
11123  00009c60          	_QueueNext:
11124                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
11125  00009c60  afbefffc	sw	-4(r29),r30; push fp
11126  00009c64  001df020	add	r30,r0,r29; fp = sp
11127  00009c68  afbffff8	sw	-8(r29),r31; push ret addr
11128  00009c6c  2fbd0008	subui	r29,r29,#8; alloc local storage
11129  00009c70  8fc10000	lw	r1,(r30)
11130  00009c74  8c210000	lw	r1,(r1)
11131  00009c78  8fdffff8	lw	r31,-8(r30)
11132  00009c7c  001ee820	add	r29,r0,r30
11133  00009c80  8fdefffc	lw	r30,-4(r30)
11134  00009c84  4be00000	jr	r31
11135  00009c88  54000000	nop
11136  00009c8c          	.endproc _QueueNext
11137  00009c8c          	.align 2
11138  00009c8c          	.proc _QueuePrev
11139  00009c8c          	.global _QueuePrev
11140  00009c8c          	_QueuePrev:
11141                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
11142  00009c8c  afbefffc	sw	-4(r29),r30; push fp
11143  00009c90  001df020	add	r30,r0,r29; fp = sp
11144  00009c94  afbffff8	sw	-8(r29),r31; push ret addr
11145  00009c98  2fbd0008	subui	r29,r29,#8; alloc local storage
11146  00009c9c  8fc10000	lw	r1,(r30)
11147  00009ca0  8c210004	lw	r1,4(r1)
11148  00009ca4  8fdffff8	lw	r31,-8(r30)
11149  00009ca8  001ee820	add	r29,r0,r30
11150  00009cac  8fdefffc	lw	r30,-4(r30)
11151  00009cb0  4be00000	jr	r31
11152  00009cb4  54000000	nop
11153  00009cb8          	.endproc _QueuePrev
11154  00009cb8          	.align 2
11155  00009cb8          	.proc _QueueFirst
11156  00009cb8          	.global _QueueFirst
11157  00009cb8          	_QueueFirst:
11158                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
11159  00009cb8  afbefffc	sw	-4(r29),r30; push fp
11160  00009cbc  001df020	add	r30,r0,r29; fp = sp
11161  00009cc0  afbffff8	sw	-8(r29),r31; push ret addr
11162  00009cc4  2fbd0008	subui	r29,r29,#8; alloc local storage
11163  00009cc8  8fc10000	lw	r1,(r30)
11164  00009ccc  8c210000	lw	r1,(r1)
11165  00009cd0  8fdffff8	lw	r31,-8(r30)
11166  00009cd4  001ee820	add	r29,r0,r30
11167  00009cd8  8fdefffc	lw	r30,-4(r30)
11168  00009cdc  4be00000	jr	r31
11169  00009ce0  54000000	nop
11170  00009ce4          	.endproc _QueueFirst
11171  00009ce4          	.align 2
11172  00009ce4          	.proc _QueueLast
11173  00009ce4          	.global _QueueLast
11174  00009ce4          	_QueueLast:
11175                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
11176  00009ce4  afbefffc	sw	-4(r29),r30; push fp
11177  00009ce8  001df020	add	r30,r0,r29; fp = sp
11178  00009cec  afbffff8	sw	-8(r29),r31; push ret addr
11179  00009cf0  2fbd0008	subui	r29,r29,#8; alloc local storage
11180  00009cf4  8fc10000	lw	r1,(r30)
11181  00009cf8  8c210004	lw	r1,4(r1)
11182  00009cfc  8fdffff8	lw	r31,-8(r30)
11183  00009d00  001ee820	add	r29,r0,r30
11184  00009d04  8fdefffc	lw	r30,-4(r30)
11185  00009d08  4be00000	jr	r31
11186  00009d0c  54000000	nop
11187  00009d10          	.endproc _QueueLast
11188  00009d10          	.align 2
11189  00009d10          	.proc _QueueInsertAfter
11190  00009d10          	.global _QueueInsertAfter
11191  00009d10          	_QueueInsertAfter:
11192                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
11193  00009d10  afbefffc	sw	-4(r29),r30; push fp
11194  00009d14  001df020	add	r30,r0,r29; fp = sp
11195  00009d18  afbffff8	sw	-8(r29),r31; push ret addr
11196  00009d1c  2fbd0010	subui	r29,r29,#16; alloc local storage
11197  00009d20  afa20000	sw	0(r29),r2
11198  00009d24  afa30004	sw	4(r29),r3
11199  00009d28  8fc30000	lw	r3,(r30)
11200  00009d2c  8fc20004	lw	r2,4(r30)
11201  00009d30  8fc10008	lw	r1,8(r30)
11202  00009d34  ac230008	sw	8(r1),r3
11203  00009d38  ac220004	sw	4(r1),r2
11204  00009d3c  8c5f0000	lw	r31,(r2)
11205  00009d40  ac3f0000	sw	(r1),r31
11206  00009d44  ac410000	sw	(r2),r1
11207  00009d48  8c220000	lw	r2,(r1)
11208  00009d4c  ac410004	sw	4(r2),r1
11209  00009d50  8c610008	lw	r1,8(r3)
11210  00009d54  20210001	addi	r1,r1,#1
11211  00009d58  ac610008	sw	8(r3),r1
11212  00009d5c  8fa20000	lw	r2,0(r29)
11213  00009d60  8fa30004	lw	r3,4(r29)
11214  00009d64  8fdffff8	lw	r31,-8(r30)
11215  00009d68  001ee820	add	r29,r0,r30
11216  00009d6c  8fdefffc	lw	r30,-4(r30)
11217  00009d70  4be00000	jr	r31
11218  00009d74  54000000	nop
11219  00009d78          	.endproc _QueueInsertAfter
11220  00009d78          	.align 2
11221  00009d78          	.proc _QueueInsertFirst
11222  00009d78          	.global _QueueInsertFirst
11223  00009d78          	_QueueInsertFirst:
11224                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
11225  00009d78  afbefffc	sw	-4(r29),r30; push fp
11226  00009d7c  001df020	add	r30,r0,r29; fp = sp
11227  00009d80  afbffff8	sw	-8(r29),r31; push ret addr
11228  00009d84  2fbd0010	subui	r29,r29,#16; alloc local storage
11229  00009d88  afa20000	sw	0(r29),r2
11230  00009d8c  afa30004	sw	4(r29),r3
11231  00009d90  8fc30000	lw	r3,(r30)
11232  00009d94  8fc10004	lw	r1,4(r30)
11233  00009d98  ac230008	sw	8(r1),r3
11234  00009d9c  ac230004	sw	4(r1),r3
11235  00009da0  8c7f0000	lw	r31,(r3)
11236  00009da4  ac3f0000	sw	(r1),r31
11237  00009da8  ac610000	sw	(r3),r1
11238  00009dac  8c220000	lw	r2,(r1)
11239  00009db0  ac410004	sw	4(r2),r1
11240  00009db4  8c610008	lw	r1,8(r3)
11241  00009db8  20210001	addi	r1,r1,#1
11242  00009dbc  ac610008	sw	8(r3),r1
11243  00009dc0  8fa20000	lw	r2,0(r29)
11244  00009dc4  8fa30004	lw	r3,4(r29)
11245  00009dc8  8fdffff8	lw	r31,-8(r30)
11246  00009dcc  001ee820	add	r29,r0,r30
11247  00009dd0  8fdefffc	lw	r30,-4(r30)
11248  00009dd4  4be00000	jr	r31
11249  00009dd8  54000000	nop
11250  00009ddc          	.endproc _QueueInsertFirst
11251  00009ddc          	.align 2
11252  00009ddc          	.proc _QueueInsertLast
11253  00009ddc          	.global _QueueInsertLast
11254  00009ddc          	_QueueInsertLast:
11255                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
11256  00009ddc  afbefffc	sw	-4(r29),r30; push fp
11257  00009de0  001df020	add	r30,r0,r29; fp = sp
11258  00009de4  afbffff8	sw	-8(r29),r31; push ret addr
11259  00009de8  2fbd0010	subui	r29,r29,#16; alloc local storage
11260  00009dec  afa20000	sw	0(r29),r2
11261  00009df0  afa30004	sw	4(r29),r3
11262  00009df4  8fc30000	lw	r3,(r30)
11263  00009df8  8fc10004	lw	r1,4(r30)
11264  00009dfc  8c620004	lw	r2,4(r3)
11265  00009e00  ac230008	sw	8(r1),r3
11266  00009e04  ac220004	sw	4(r1),r2
11267  00009e08  8c5f0000	lw	r31,(r2)
11268  00009e0c  ac3f0000	sw	(r1),r31
11269  00009e10  ac410000	sw	(r2),r1
11270  00009e14  8c220000	lw	r2,(r1)
11271  00009e18  ac410004	sw	4(r2),r1
11272  00009e1c  8c610008	lw	r1,8(r3)
11273  00009e20  20210001	addi	r1,r1,#1
11274  00009e24  ac610008	sw	8(r3),r1
11275  00009e28  8fa20000	lw	r2,0(r29)
11276  00009e2c  8fa30004	lw	r3,4(r29)
11277  00009e30  8fdffff8	lw	r31,-8(r30)
11278  00009e34  001ee820	add	r29,r0,r30
11279  00009e38  8fdefffc	lw	r30,-4(r30)
11280  00009e3c  4be00000	jr	r31
11281  00009e40  54000000	nop
11282  00009e44          	.endproc _QueueInsertLast
11283  00009e44          	.align 2
11284  00009e44          	.proc _QueueRemove
11285  00009e44          	.global _QueueRemove
11286  00009e44          	_QueueRemove:
11287                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
11288  00009e44  afbefffc	sw	-4(r29),r30; push fp
11289  00009e48  001df020	add	r30,r0,r29; fp = sp
11290  00009e4c  afbffff8	sw	-8(r29),r31; push ret addr
11291  00009e50  2fbd0010	subui	r29,r29,#16; alloc local storage
11292  00009e54  afa20000	sw	0(r29),r2
11293  00009e58  afa30004	sw	4(r29),r3
11294  00009e5c  8fdf0000	lw	r31,(r30)
11295  00009e60  8fe10008	lw	r1,8(r31)
11296  00009e64  8c210008	lw	r1,8(r1)
11297  00009e68  6c210000	sgti	r1,r1,#0
11298  00009e6c  1020002c	beqz	r1,L44_LF9
11299  00009e70  54000000	nop; not filled.
11300  00009e74  8fe10004	lw	r1,4(r31)
11301  00009e78  8fe30000	lw	r3,(r31)
11302  00009e7c  ac230000	sw	(r1),r3
11303  00009e80  8fe10000	lw	r1,(r31)
11304  00009e84  8fe30004	lw	r3,4(r31)
11305  00009e88  ac230004	sw	4(r1),r3
11306  00009e8c  8fe20008	lw	r2,8(r31)
11307  00009e90  8c410008	lw	r1,8(r2)
11308  00009e94  2021ffff	addi	r1,r1,#-1
11309  00009e98  ac410008	sw	8(r2),r1
11310  00009e9c          	L44_LF9:
11311  00009e9c  20030000	addi	r3,r0,#0
11312  00009ea0  afe30000	sw	(r31),r3
11313  00009ea4  8fa20000	lw	r2,0(r29)
11314  00009ea8  8fa30004	lw	r3,4(r29)
11315  00009eac  8fdffff8	lw	r31,-8(r30)
11316  00009eb0  001ee820	add	r29,r0,r30
11317  00009eb4  8fdefffc	lw	r30,-4(r30)
11318  00009eb8  4be00000	jr	r31
11319  00009ebc  54000000	nop
11320  00009ec0          	.endproc _QueueRemove
11321  00009ec0          	.align 2
11322  00009ec0          	.proc _QueueLength
11323  00009ec0          	.global _QueueLength
11324  00009ec0          	_QueueLength:
11325                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
11326  00009ec0  afbefffc	sw	-4(r29),r30; push fp
11327  00009ec4  001df020	add	r30,r0,r29; fp = sp
11328  00009ec8  afbffff8	sw	-8(r29),r31; push ret addr
11329  00009ecc  2fbd0008	subui	r29,r29,#8; alloc local storage
11330  00009ed0  8fc10000	lw	r1,(r30)
11331  00009ed4  8c210008	lw	r1,8(r1)
11332  00009ed8  8fdffff8	lw	r31,-8(r30)
11333  00009edc  001ee820	add	r29,r0,r30
11334  00009ee0  8fdefffc	lw	r30,-4(r30)
11335  00009ee4  4be00000	jr	r31
11336  00009ee8  54000000	nop
11337  00009eec          	.endproc _QueueLength
11338  00009eec          	.align 2
11339  00009eec          	.proc _QueueEmpty
11340  00009eec          	.global _QueueEmpty
11341  00009eec          	_QueueEmpty:
11342                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
11343  00009eec  afbefffc	sw	-4(r29),r30; push fp
11344  00009ef0  001df020	add	r30,r0,r29; fp = sp
11345  00009ef4  afbffff8	sw	-8(r29),r31; push ret addr
11346  00009ef8  2fbd0008	subui	r29,r29,#8; alloc local storage
11347  00009efc  8fc10000	lw	r1,(r30)
11348  00009f00  8c210008	lw	r1,8(r1)
11349  00009f04  60210000	seqi	r1,r1,#0
11350  00009f08  8fdffff8	lw	r31,-8(r30)
11351  00009f0c  001ee820	add	r29,r0,r30
11352  00009f10  8fdefffc	lw	r30,-4(r30)
11353  00009f14  4be00000	jr	r31
11354  00009f18  54000000	nop
11355  00009f1c          	.endproc _QueueEmpty
11356  00009f1c          	.data
11357  000131d7          	.align 2
11358  000131d8          	LC0_LF9:
11359  000131d8  50726f63	.ascii "Process #\000"
11359  000131dc  65737320	
11359  000131e0  2300    	
11360  000131e2          	.align 2
11361  000131e4          	LC1_LF9:
11362  000131e4  52756e6e	.ascii "Running process %d (iteration %d)!\n\000"
11362  000131e8  696e6720	
11362  000131ec  70726f63	
11362  000131f0  65737320	
11362  000131f4  25642028	
11362  000131f8  69746572	
11362  000131fc  6174696f	
11362  00013200  6e202564	
11362  00013204  29210a00	
11363  00013208          	.text
11364  00009f1c          	.align 2
11365  00009f1c          	.proc _doSomething_LF9
11366  00009f1c          	_doSomething_LF9:
11367                      ;  Function 'doSomething'; 80 bytes of locals, 7 regs to save.
11368  00009f1c  afbefffc	sw	-4(r29),r30; push fp
11369  00009f20  001df020	add	r30,r0,r29; fp = sp
11370  00009f24  afbffff8	sw	-8(r29),r31; push ret addr
11371  00009f28  2fbd0078	subui	r29,r29,#120; alloc local storage
11372  00009f2c  afa20000	sw	0(r29),r2
11373  00009f30  afa30004	sw	4(r29),r3
11374  00009f34  afa40008	sw	8(r29),r4
11375  00009f38  afa5000c	sw	12(r29),r5
11376  00009f3c  afa60010	sw	16(r29),r6
11377  00009f40  afa70014	sw	20(r29),r7
11378  00009f44  afa80018	sw	24(r29),r8
11379  00009f48  8fc60000	lw	r6,(r30)
11380  00009f4c  2001000a	addi	r1,r0,#10
11381  00009f50  00c00035	movi2fp	f0,r6
11382  00009f54  00200835	movi2fp	f1,r1
11383  00009f58  0401000f	div	f0,f0,f1
11384  00009f5c  00001034	movfp2i	r2,f0
11385  00009f60  50410002	slli	r1,r2,#0x2
11386  00009f64  00220820	add	r1,r1,r2
11387  00009f68  50210001	slli	r1,r1,#0x1
11388  00009f6c  00c13822	sub	r7,r6,r1
11389  00009f70  70c10063	slei	r1,r6,#99
11390  00009f74  102000d4	beqz	r1,L52_LF9
11391  00009f78  54000000	nop; not filled.
11392  00009f7c  23bdfff8	addi	r29,r29,#-8
11393  00009f80  50e10004	slli	r1,r7,#0x4
11394  00009f84  3c080001	lhi	r8,((_mysems_LF9)>>16)&0xffff
11395  00009f88  2508327c	addui	r8,r8,(_mysems_LF9)&0xffff
11396  00009f8c  00280820	add	r1,r1,r8
11397  00009f90  afa10000	sw	(r29),r1
11398  00009f94  20080001	addi	r8,r0,#1
11399  00009f98  afa80004	sw	4(r29),r8
11400  00009f9c  0fffe178	jal	_SemInit
11401  00009fa0  54000000	nop; not filled.
11402  00009fa4  20030001	addi	r3,r0,#1
11403  00009fa8  23bd0008	addi	r29,r29,#8
11404  00009fac  23c4ffd0	addi	r4,r30,#-48
11405  00009fb0  23c5ffa8	addi	r5,r30,#-88
11406  00009fb4  00061020	add	r2,r0,r6
11407  00009fb8          	L56_LF9:
11408  00009fb8  23bdfff8	addi	r29,r29,#-8
11409  00009fbc  afa40000	sw	(r29),r4
11410  00009fc0  3c080001	lhi	r8,((LC0_LF9)>>16)&0xffff
11411  00009fc4  250831d8	addui	r8,r8,(LC0_LF9)&0xffff
11412  00009fc8  afa80004	sw	4(r29),r8
11413  00009fcc  0fff9988	jal	_dstrcpy
11414  00009fd0  54000000	nop; not filled.
11415  00009fd4  afa30000	sw	(r29),r3
11416  00009fd8  afa50004	sw	4(r29),r5
11417  00009fdc  0fff9eb4	jal	_ditoa
11418  00009fe0  54000000	nop; not filled.
11419  00009fe4  afa40000	sw	(r29),r4
11420  00009fe8  afa50004	sw	4(r29),r5
11421  00009fec  0fff9a58	jal	_dstrcat
11422  00009ff0  54000000	nop; not filled.
11423  00009ff4  23bdfff8	addi	r29,r29,#-8
11424  00009ff8  3c080000	lhi	r8,((_doSomething_LF9)>>16)&0xffff
11425  00009ffc  25089f1c	addui	r8,r8,(_doSomething_LF9)&0xffff
11426  0000a000  afa80000	sw	(r29),r8
11427  0000a004  50410005	slli	r1,r2,#0x5
11428  0000a008  00220822	sub	r1,r1,r2
11429  0000a00c  50210002	slli	r1,r1,#0x2
11430  0000a010  00220820	add	r1,r1,r2
11431  0000a014  50210003	slli	r1,r1,#0x3
11432  0000a018  00260820	add	r1,r1,r6
11433  0000a01c  afa10004	sw	4(r29),r1
11434  0000a020  afa40008	sw	8(r29),r4
11435  0000a024  20080000	addi	r8,r0,#0
11436  0000a028  afa8000c	sw	12(r29),r8
11437  0000a02c  0fffb484	jal	_ProcessFork
11438  0000a030  54000000	nop; not filled.
11439  0000a034  23bd0010	addi	r29,r29,#16
11440  0000a038  00461020	add	r2,r2,r6
11441  0000a03c  20630001	addi	r3,r3,#1
11442  0000a040  70610006	slei	r1,r3,#6
11443  0000a044  1420ff70	bnez	r1,L56_LF9
11444  0000a048  54000000	nop; not filled.
11445  0000a04c          	L52_LF9:
11446  0000a04c  23bdfff8	addi	r29,r29,#-8
11447  0000a050  50e10004	slli	r1,r7,#0x4
11448  0000a054  3c080001	lhi	r8,((_mysems_LF9)>>16)&0xffff
11449  0000a058  2508327c	addui	r8,r8,(_mysems_LF9)&0xffff
11450  0000a05c  00280820	add	r1,r1,r8
11451  0000a060  afa10000	sw	(r29),r1
11452  0000a064  0fffe104	jal	_SemWait
11453  0000a068  54000000	nop; not filled.
11454  0000a06c  20030000	addi	r3,r0,#0
11455  0000a070  23bd0008	addi	r29,r29,#8
11456  0000a074  50c20001	slli	r2,r6,#0x1
11457  0000a078  0062082a	slt	r1,r3,r2
11458  0000a07c  10200070	beqz	r1,L59_LF9
11459  0000a080  54000000	nop; not filled.
11460  0000a084  200503e8	addi	r5,r0,#1000
11461  0000a088  00022020	add	r4,r0,r2
11462  0000a08c          	L61_LF9:
11463  0000a08c  00600035	movi2fp	f0,r3
11464  0000a090  00a00835	movi2fp	f1,r5
11465  0000a094  0401000f	div	f0,f0,f1
11466  0000a098  00001034	movfp2i	r2,f0
11467  0000a09c  50410005	slli	r1,r2,#0x5
11468  0000a0a0  00220822	sub	r1,r1,r2
11469  0000a0a4  50210002	slli	r1,r1,#0x2
11470  0000a0a8  00220820	add	r1,r1,r2
11471  0000a0ac  50210003	slli	r1,r1,#0x3
11472  0000a0b0  00610829	sne	r1,r3,r1
11473  0000a0b4  14200028	bnez	r1,L62_LF9
11474  0000a0b8  54000000	nop; not filled.
11475  0000a0bc  23bdfff0	addi	r29,r29,#-16
11476  0000a0c0  3c080001	lhi	r8,((LC1_LF9)>>16)&0xffff
11477  0000a0c4  250831e4	addui	r8,r8,(LC1_LF9)&0xffff
11478  0000a0c8  afa80000	sw	(r29),r8
11479  0000a0cc  afa60004	sw	4(r29),r6
11480  0000a0d0  afa30008	sw	8(r29),r3
11481  0000a0d4  0c000270	jal	_printf
11482  0000a0d8  54000000	nop; not filled.
11483  0000a0dc  23bd0010	addi	r29,r29,#16
11484  0000a0e0          	L62_LF9:
11485  0000a0e0  20630001	addi	r3,r3,#1
11486  0000a0e4  0064082a	slt	r1,r3,r4
11487  0000a0e8  1420ffa0	bnez	r1,L61_LF9
11488  0000a0ec  54000000	nop; not filled.
11489  0000a0f0          	L59_LF9:
11490  0000a0f0  23bdfff8	addi	r29,r29,#-8
11491  0000a0f4  50e10004	slli	r1,r7,#0x4
11492  0000a0f8  3c080001	lhi	r8,((_mysems_LF9)>>16)&0xffff
11493  0000a0fc  2508327c	addui	r8,r8,(_mysems_LF9)&0xffff
11494  0000a100  00280820	add	r1,r1,r8
11495  0000a104  afa10000	sw	(r29),r1
11496  0000a108  0fffe2dc	jal	_SemSignal
11497  0000a10c  54000000	nop; not filled.
11498  0000a110  23bd0008	addi	r29,r29,#8
11499  0000a114  8fa20000	lw	r2,0(r29)
11500  0000a118  8fa30004	lw	r3,4(r29)
11501  0000a11c  8fa40008	lw	r4,8(r29)
11502  0000a120  8fa5000c	lw	r5,12(r29)
11503  0000a124  8fa60010	lw	r6,16(r29)
11504  0000a128  8fa70014	lw	r7,20(r29)
11505  0000a12c  8fa80018	lw	r8,24(r29)
11506  0000a130  8fdffff8	lw	r31,-8(r30)
11507  0000a134  001ee820	add	r29,r0,r30
11508  0000a138  8fdefffc	lw	r30,-4(r30)
11509  0000a13c  4be00000	jr	r31
11510  0000a140  54000000	nop
11511  0000a144          	.endproc _doSomething_LF9
11512  0000a144          	.data
11513  00013208          	.align 2
11514  00013208          	LC2_LF9:
11515  00013208  63686173	.ascii "chasetail\000"
11515  0001320c  65746169	
11515  00013210  6c00    	
11516  00013212          	.align 2
11517  00013214          	LC3_LF9:
11518  00013214  43686173	.ascii "Chasing tail %d.\n\000"
11518  00013218  696e6720	
11518  0001321c  7461696c	
11518  00013220  2025642e	
11518  00013224  0a00    	
11519  00013226          	.align 2
11520  00013228          	LC4_LF9:
11521  00013228  4f70656e	.ascii "Open of (%s,0x%x) returns 0x%x.\n\000"
11521  0001322c  206f6620	
11521  00013230  2825732c	
11521  00013234  30782578	
11521  00013238  29207265	
11521  0001323c  7475726e	
11521  00013240  73203078	
11521  00013244  25782e0a	
11521  00013248  00      	
11522  00013249          	.align 2
11523  0001324c          	LC5_LF9:
11524  0001324c  43686173	.ascii "ChaseTail\000"
11524  00013250  65546169	
11524  00013254  6c00    	
11525  00013256          	.text
11526  0000a144          	.align 2
11527  0000a144          	.proc _chaseTail_LF9
11528  0000a144          	_chaseTail_LF9:
11529                      ;  Function 'chaseTail'; 0 bytes of locals, 4 regs to save.
11530  0000a144  afbefffc	sw	-4(r29),r30; push fp
11531  0000a148  001df020	add	r30,r0,r29; fp = sp
11532  0000a14c  afbffff8	sw	-8(r29),r31; push ret addr
11533  0000a150  2fbd0018	subui	r29,r29,#24; alloc local storage
11534  0000a154  afa20000	sw	0(r29),r2
11535  0000a158  afa30004	sw	4(r29),r3
11536  0000a15c  afa40008	sw	8(r29),r4
11537  0000a160  afa5000c	sw	12(r29),r5
11538  0000a164  8fc40000	lw	r4,(r30)
11539  0000a168  3c030001	lhi	r3,((LC2_LF9)>>16)&0xffff
11540  0000a16c  24633208	addui	r3,r3,(LC2_LF9)&0xffff
11541  0000a170  23bdfff8	addi	r29,r29,#-8
11542  0000a174  3c050001	lhi	r5,((LC3_LF9)>>16)&0xffff
11543  0000a178  24a53214	addui	r5,r5,(LC3_LF9)&0xffff
11544  0000a17c  afa50000	sw	(r29),r5
11545  0000a180  afa40004	sw	4(r29),r4
11546  0000a184  0c0001c0	jal	_printf
11547  0000a188  54000000	nop; not filled.
11548  0000a18c  afa30000	sw	(r29),r3
11549  0000a190  20822000	addi	r2,r4,#8192
11550  0000a194  afa20004	sw	4(r29),r2
11551  0000a198  0c000158	jal	_Open
11552  0000a19c  54000000	nop; not filled.
11553  0000a1a0  23bdfff8	addi	r29,r29,#-8
11554  0000a1a4  3c050001	lhi	r5,((LC4_LF9)>>16)&0xffff
11555  0000a1a8  24a53228	addui	r5,r5,(LC4_LF9)&0xffff
11556  0000a1ac  afa50000	sw	(r29),r5
11557  0000a1b0  afa30004	sw	4(r29),r3
11558  0000a1b4  afa20008	sw	8(r29),r2
11559  0000a1b8  afa1000c	sw	12(r29),r1
11560  0000a1bc  0c000188	jal	_printf
11561  0000a1c0  54000000	nop; not filled.
11562  0000a1c4  23bd0010	addi	r29,r29,#16
11563  0000a1c8  70810027	slei	r1,r4,#39
11564  0000a1cc  1020003c	beqz	r1,L67_LF9
11565  0000a1d0  54000000	nop; not filled.
11566  0000a1d4  23bdfff0	addi	r29,r29,#-16
11567  0000a1d8  3c050000	lhi	r5,((_chaseTail_LF9)>>16)&0xffff
11568  0000a1dc  24a5a144	addui	r5,r5,(_chaseTail_LF9)&0xffff
11569  0000a1e0  afa50000	sw	(r29),r5
11570  0000a1e4  20810001	addi	r1,r4,#1
11571  0000a1e8  afa10004	sw	4(r29),r1
11572  0000a1ec  3c050001	lhi	r5,((LC5_LF9)>>16)&0xffff
11573  0000a1f0  24a5324c	addui	r5,r5,(LC5_LF9)&0xffff
11574  0000a1f4  afa50008	sw	8(r29),r5
11575  0000a1f8  20050000	addi	r5,r0,#0
11576  0000a1fc  afa5000c	sw	12(r29),r5
11577  0000a200  0fffb2b0	jal	_ProcessFork
11578  0000a204  54000000	nop; not filled.
11579  0000a208  23bd0010	addi	r29,r29,#16
11580  0000a20c          	L67_LF9:
11581  0000a20c  8fa20000	lw	r2,0(r29)
11582  0000a210  8fa30004	lw	r3,4(r29)
11583  0000a214  8fa40008	lw	r4,8(r29)
11584  0000a218  8fa5000c	lw	r5,12(r29)
11585  0000a21c  8fdffff8	lw	r31,-8(r30)
11586  0000a220  001ee820	add	r29,r0,r30
11587  0000a224  8fdefffc	lw	r30,-4(r30)
11588  0000a228  4be00000	jr	r31
11589  0000a22c  54000000	nop
11590  0000a230          	.endproc _chaseTail_LF9
11591  0000a230          	.data
11592  00013256          	.align 2
11593  00013258          	LC6_LF9:
11594  00013258  25642000	.ascii "%d \000"
11595  0001325c          	.align 2
11596  0001325c          	LC7_LF9:
11597  0001325c  52616e64	.ascii "Random number %02i is 0x%08x.\n\000"
11597  00013260  6f6d206e	
11597  00013264  756d6265	
11597  00013268  72202530	
11597  0001326c  32692069	
11597  00013270  73203078	
11597  00013274  25303878	
11597  00013278  2e0a00  	
11598  0001327b          	.text
11599  0000a230          	.align 2
11600  0000a230          	.proc _SysprocCreateProcesses
11601  0000a230          	.global _SysprocCreateProcesses
11602  0000a230          	_SysprocCreateProcesses:
11603                      ;  Function 'SysprocCreateProcesses'; 0 bytes of locals, 3 regs to save.
11604  0000a230  afbefffc	sw	-4(r29),r30; push fp
11605  0000a234  001df020	add	r30,r0,r29; fp = sp
11606  0000a238  afbffff8	sw	-8(r29),r31; push ret addr
11607  0000a23c  2fbd0018	subui	r29,r29,#24; alloc local storage
11608  0000a240  afa20000	sw	0(r29),r2
11609  0000a244  afa30004	sw	4(r29),r3
11610  0000a248  afa40008	sw	8(r29),r4
11611  0000a24c  3c020001	lhi	r2,((_mysems_LF9)>>16)&0xffff
11612  0000a250  2442327c	addui	r2,r2,(_mysems_LF9)&0xffff
11613  0000a254  20430090	addi	r3,r2,#144
11614  0000a258          	L90_LF9:
11615  0000a258  23bdfff8	addi	r29,r29,#-8
11616  0000a25c  afa20000	sw	(r29),r2
11617  0000a260  20040001	addi	r4,r0,#1
11618  0000a264  afa40004	sw	4(r29),r4
11619  0000a268  0fffdeac	jal	_SemInit
11620  0000a26c  54000000	nop; not filled.
11621  0000a270  23bd0008	addi	r29,r29,#8
11622  0000a274  20420010	addi	r2,r2,#16
11623  0000a278  0043082c	sle	r1,r2,r3
11624  0000a27c  1420ffd8	bnez	r1,L90_LF9
11625  0000a280  54000000	nop; not filled.
11626  0000a284  8fa20000	lw	r2,0(r29)
11627  0000a288  8fa30004	lw	r3,4(r29)
11628  0000a28c  8fa40008	lw	r4,8(r29)
11629  0000a290  8fdffff8	lw	r31,-8(r30)
11630  0000a294  001ee820	add	r29,r0,r30
11631  0000a298  8fdefffc	lw	r30,-4(r30)
11632  0000a29c  4be00000	jr	r31
11633  0000a2a0  54000000	nop
11634  0000a2a4          	.endproc _SysprocCreateProcesses
11635  0000a2a4          	.data
11636  0001327b          	.align 2
11637  0001327c          	_mysems_LF9:
11638  0001327c          	.space 160
11639                      ;;; This file just includes a single variable that contains the last address
11640                      ;;; in the operating system.  The rest of memory is available for use by
11641                      ;;; processes.
11643  0001331c          	.align 2
11644  0001331c          	.global _lastosaddress
11645  0001331c          	_lastosaddress:
11646  0001331c  00013324	.word _lastosaddress+8
11647                      ;;; Ethan L. Miller, 1999.  Released to the public domain
11648                      ;;;
11649                      ;;; Most of the traps are called in files from libtraps.
11651  00013320          	.text
11652  0000a2a4          	.align 2
11653  0000a2a4          	.proc _exit
11654  0000a2a4          	.global _exit
11655  0000a2a4          	_exit:
11656  0000a2a4  44000300	trap	#0x300
11657  0000a2a8  4be00000	jr	r31
11658  0000a2ac  54000000	nop
11659  0000a2b0          	.endproc _exit
11661                      ; for the benefit of gcc.
11662  0000a2b0          	.proc ___main
11663  0000a2b0          	.global ___main
11664  0000a2b0          	___main:
11665  0000a2b0  4be00000	jr	r31
11666  0000a2b4  54000000	nop
11667  0000a2b8          	.endproc ___main
11668                      ;;;
11669                      ;;; Stub functions for DLX traps.
11670                      ;;;
11671                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
11672                      ;;;
11673                      ;;; There are two sets of traps here.  The traps such as Open and Close
11674                      ;;; (note the capital letters) are for use by user programs.  The traps
11675                      ;;; with names such as open and close (lower case) are for use by the OS.
11676                      ;;;
11679  0000a2b8          	.align 2
11680  0000a2b8          	.proc _open
11681  0000a2b8          	.global _open
11682  0000a2b8          	_open:
11683  0000a2b8  44002013	trap	#0x2013
11684  0000a2bc  4be00000	jr	r31
11685  0000a2c0  54000000	nop
11686  0000a2c4          	.endproc _open
11688  0000a2c4          	.proc _close
11689  0000a2c4          	.global _close
11690  0000a2c4          	_close:
11691  0000a2c4  44002014	trap	#0x2014
11692  0000a2c8  4be00000	jr	r31
11693  0000a2cc  54000000	nop
11694  0000a2d0          	.endproc _close
11696  0000a2d0          	.proc _read
11697  0000a2d0          	.global _read
11698  0000a2d0          	_read:
11699  0000a2d0  44002010	trap	#0x2010
11700  0000a2d4  4be00000	jr	r31
11701  0000a2d8  54000000	nop
11702  0000a2dc          	.endproc _read
11704  0000a2dc          	.proc _write
11705  0000a2dc          	.global _write
11706  0000a2dc          	_write:
11707  0000a2dc  44002011	trap	#0x2011
11708  0000a2e0  4be00000	jr	r31
11709  0000a2e4  54000000	nop
11710  0000a2e8          	.endproc _write
11712  0000a2e8          	.proc _lseek
11713  0000a2e8          	.global _lseek
11714  0000a2e8          	_lseek:
11715  0000a2e8  44002012	trap	#0x2012
11716  0000a2ec  4be00000	jr	r31
11717  0000a2f0  54000000	nop
11718  0000a2f4          	.endproc _lseek
11720                      ;;; The following are the traps to be used by user-level programs
11721                      ;;;
11723  0000a2f4          	.align 2
11724  0000a2f4          	.proc _Open
11725  0000a2f4          	.global _Open
11726  0000a2f4          	_Open:
11727  0000a2f4  44000213	trap	#0x213
11728  0000a2f8  4be00000	jr	r31
11729  0000a2fc  54000000	nop
11730  0000a300          	.endproc _Open
11732  0000a300          	.proc _Close
11733  0000a300          	.global _Close
11734  0000a300          	_Close:
11735  0000a300  44000214	trap	#0x214
11736  0000a304  4be00000	jr	r31
11737  0000a308  54000000	nop
11738  0000a30c          	.endproc _Close
11740  0000a30c          	.proc _Read
11741  0000a30c          	.global _Read
11742  0000a30c          	_Read:
11743  0000a30c  44000210	trap	#0x210
11744  0000a310  4be00000	jr	r31
11745  0000a314  54000000	nop
11746  0000a318          	.endproc _Read
11748  0000a318          	.proc _Write
11749  0000a318          	.global _Write
11750  0000a318          	_Write:
11751  0000a318  44000211	trap	#0x211
11752  0000a31c  4be00000	jr	r31
11753  0000a320  54000000	nop
11754  0000a324          	.endproc _Write
11756  0000a324          	.proc _Lseek
11757  0000a324          	.global _Lseek
11758  0000a324          	_Lseek:
11759  0000a324  44000212	trap	#0x212
11760  0000a328  4be00000	jr	r31
11761  0000a32c  54000000	nop
11762  0000a330          	.endproc _Lseek
11764                      ;;;
11765                      ;;; Stub functions for DLX traps.
11766                      ;;;
11767                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
11768                      ;;;
11769                      ;;; There are two exit traps.  The first, _exitsim, actually exits the
11770                      ;;; simulator.  The second, _exit, simply calls a regular trap in the
11771                      ;;; DLX simulator, and would be suitable for a user program that wants
11772                      ;;; to signal the OS that it's exiting.
11773                      ;;;
11774                      ;;; IMPORTANT: all code that's run "native" on the simulator - OS code and
11775                      ;;; programs run without an OS - should call exitsim() rather than just
11776                      ;;; falling through to exit.
11777                      ;;;
11780  0000a330          	.align 2
11781  0000a330          	.proc _exitsim
11782  0000a330          	.global _exitsim
11783  0000a330          	_exitsim:
11784  0000a330  44002f00	trap	#0x2f00
11785  0000a334  4be00000	jr	r31
11786  0000a338  54000000	nop
11787  0000a33c          	.endproc _exitsim
11789  0000a33c          	.proc _exit
11790  0000a33c          	.global _exit
11791  0000a33c          	_exit:
11792  0000a33c  44000300	trap	#0x300
11793  0000a340  4be00000	jr	r31
11794  0000a344  54000000	nop
11795  0000a348          	.endproc _exit
11797                      ;
11798                      ; Stub functions for DLX traps.
11799                      ;
11800                      ; Aaron Sawdey 1996; released to the Public Domain.
11801                      ;
11803  0000a348          	.proc _printf
11804  0000a348          	.global _printf
11805  0000a348          	_printf:
11806  0000a348  44002001	trap	#0x2001
11807  0000a34c  4be00000	jr	r31
11808  0000a350  54000000	nop
11809  0000a354          	.endproc _printf
11811  0000a354          	.text
11812  0000a354          	.global _etext
11813  0000a354          	_etext:
11814  0000a354          	.align 3
11815  0000a358          	.data
11816  00013320          	.global _edata
11817  00013320          	_edata:
