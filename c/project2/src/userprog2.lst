 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 20480
    3                      ; Data size: 238
    4                      ; Text size: 3280
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x2000
    8                      ; Compiled by GCC
   10  00002000          	.align 2
   11  00002000          	LC0_LF0:
   12  00002000  55736167	.ascii "Usage: \000"
   12  00002004  653a2000	
   13  00002008          	.align 2
   14  00002008          	LC1_LF0:
   15  00002008  2068616e	.ascii " handle_str spage_str semaphore_str\n\000"
   15  0000200c  646c655f	
   15  00002010  73747220	
   15  00002014  73706167	
   15  00002018  655f7374	
   15  0000201c  72207365	
   15  00002020  6d617068	
   15  00002024  6f72655f	
   15  00002028  7374720a	
   15  0000202c  00      	
   16  0000202d          	.align 2
   17  00002030          	LC2_LF0:
   18  00002030  436f756c	.ascii "Could not map the virtual address to the memory, exiting...\n\000"
   18  00002034  64206e6f	
   18  00002038  74206d61	
   18  0000203c  70207468	
   18  00002040  65207669	
   18  00002044  72747561	
   18  00002048  6c206164	
   18  0000204c  64726573	
   18  00002050  7320746f	
   18  00002054  20746865	
   18  00002058  206d656d	
   18  0000205c  6f72792c	
   18  00002060  20657869	
   18  00002064  74696e67	
   18  00002068  2e2e2e0a	
   18  0000206c  00      	
   19  0000206d          	.align 2
   20  00002070          	LC3_LF0:
   21  00002070  42616420	.ascii "Bad semaphore spage.... Exiting!\n\000"
   21  00002074  73656d61	
   21  00002078  70686f72	
   21  0000207c  65207370	
   21  00002080  6167652e	
   21  00002084  2e2e2e20	
   21  00002088  45786974	
   21  0000208c  696e6721	
   21  00002090  0a00    	
   22  00002092          	.align 2
   23  00002094          	LC4_LF0:
   24  00002094  54686973	.ascii "This is one of the %d instances you created\n\000"
   24  00002098  20697320	
   24  0000209c  6f6e6520	
   24  000020a0  6f662074	
   24  000020a4  68652025	
   24  000020a8  6420696e	
   24  000020ac  7374616e	
   24  000020b0  63657320	
   24  000020b4  796f7520	
   24  000020b8  63726561	
   24  000020bc  7465640a	
   24  000020c0  00      	
   25  000020c1          	.align 2
   26  000020c4          	LC5_LF0:
   27  000020c4  54686520	.ascii "The shared character is %c\n\000"
   27  000020c8  73686172	
   27  000020cc  65642063	
   27  000020d0  68617261	
   27  000020d4  63746572	
   27  000020d8  20697320	
   27  000020dc  25630a00	
   28  000020e0          	.align 2
   29  000020e0          	LC6_LF0:
   30  000020e0  4d792050	.ascii "My PID is %d\n\000"
   30  000020e4  49442069	
   30  000020e8  73202564	
   30  000020ec  0a00    	
   31  000020ee          	.text
   32  00001000          	.align 2
   33  00001000          	.proc _main
   34  00001000          	.global _main
   35  00001000          	_main:
   36                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   37  00001000  afbefffc	sw	-4(r29),r30; push fp
   38  00001004  001df020	add	r30,r0,r29; fp = sp
   39  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   40  0000100c  2fbd0008	subui	r29,r29,#8; alloc local storage
   41  00001010  8fc20000	lw	r2,(r30)
   42  00001014  8fc30004	lw	r3,4(r30)
   43  00001018  0c000cac	jal	___main
   44  0000101c  54000000	nop; not filled.
   45  00001020  64410004	snei	r1,r2,#4
   46  00001024  10200048	beqz	r1,L2_LF0
   47  00001028  54000000	nop; not filled.
   48  0000102c  23bdfff8	addi	r29,r29,#-8
   49  00001030  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
   50  00001034  24a52000	addui	r5,r5,(LC0_LF0)&0xffff
   51  00001038  afa50000	sw	(r29),r5
   52  0000103c  0c0001cc	jal	_Printf
   53  00001040  54000000	nop; not filled.
   54  00001044  8c630000	lw	r3,(r3)
   55  00001048  afa30000	sw	(r29),r3
   56  0000104c  0c0001bc	jal	_Printf
   57  00001050  54000000	nop; not filled.
   58  00001054  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
   59  00001058  24a52008	addui	r5,r5,(LC1_LF0)&0xffff
   60  0000105c  afa50000	sw	(r29),r5
   61  00001060  0c0001a8	jal	_Printf
   62  00001064  54000000	nop; not filled.
   63  00001068  0c000c50	jal	_exit
   64  0000106c  54000000	nop; not filled.
   65  00001070          	L2_LF0:
   66  00001070  23bdfff0	addi	r29,r29,#-16
   67  00001074  8c650004	lw	r5,4(r3)
   68  00001078  afa50000	sw	(r29),r5
   69  0000107c  20050000	addi	r5,r0,#0
   70  00001080  afa50004	sw	4(r29),r5
   71  00001084  2005000a	addi	r5,r0,#10
   72  00001088  afa50008	sw	8(r29),r5
   73  0000108c  0c00094c	jal	_dstrtol
   74  00001090  54000000	nop; not filled.
   75  00001094  00011020	add	r2,r0,r1
   76  00001098  8c650008	lw	r5,8(r3)
   77  0000109c  afa50000	sw	(r29),r5
   78  000010a0  20050000	addi	r5,r0,#0
   79  000010a4  afa50004	sw	4(r29),r5
   80  000010a8  2005000a	addi	r5,r0,#10
   81  000010ac  afa50008	sw	8(r29),r5
   82  000010b0  0c000928	jal	_dstrtol
   83  000010b4  54000000	nop; not filled.
   84  000010b8  00012020	add	r4,r0,r1
   85  000010bc  8c630008	lw	r3,8(r3)
   86  000010c0  afa30000	sw	(r29),r3
   87  000010c4  20050000	addi	r5,r0,#0
   88  000010c8  afa50004	sw	4(r29),r5
   89  000010cc  2005000a	addi	r5,r0,#10
   90  000010d0  afa50008	sw	8(r29),r5
   91  000010d4  0c000904	jal	_dstrtol
   92  000010d8  54000000	nop; not filled.
   93  000010dc  afa20000	sw	(r29),r2
   94  000010e0  0c000158	jal	_shmat
   95  000010e4  54000000	nop; not filled.
   96  000010e8  00011020	add	r2,r0,r1
   97  000010ec  23bd0010	addi	r29,r29,#16
   98  000010f0  64410000	snei	r1,r2,#0
   99  000010f4  14200024	bnez	r1,L3_LF0
  100  000010f8  54000000	nop; not filled.
  101  000010fc  23bdfff8	addi	r29,r29,#-8
  102  00001100  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  103  00001104  24a52030	addui	r5,r5,(LC2_LF0)&0xffff
  104  00001108  afa50000	sw	(r29),r5
  105  0000110c  0c0000fc	jal	_Printf
  106  00001110  54000000	nop; not filled.
  107  00001114  0c000ba4	jal	_exit
  108  00001118  54000000	nop; not filled.
  109  0000111c          	L3_LF0:
  110  0000111c  23bdfff8	addi	r29,r29,#-8
  111  00001120  afa40000	sw	(r29),r4
  112  00001124  0c000138	jal	_sem_signal
  113  00001128  54000000	nop; not filled.
  114  0000112c  23bd0008	addi	r29,r29,#8
  115  00001130  64210000	snei	r1,r1,#0
  116  00001134  10200024	beqz	r1,L4_LF0
  117  00001138  54000000	nop; not filled.
  118  0000113c  23bdfff8	addi	r29,r29,#-8
  119  00001140  3c050000	lhi	r5,((LC3_LF0)>>16)&0xffff
  120  00001144  24a52070	addui	r5,r5,(LC3_LF0)&0xffff
  121  00001148  afa50000	sw	(r29),r5
  122  0000114c  0c0000bc	jal	_Printf
  123  00001150  54000000	nop; not filled.
  124  00001154  0c000b64	jal	_exit
  125  00001158  54000000	nop; not filled.
  126  0000115c          	L4_LF0:
  127  0000115c  23bdfff8	addi	r29,r29,#-8
  128  00001160  3c050000	lhi	r5,((LC4_LF0)>>16)&0xffff
  129  00001164  24a52094	addui	r5,r5,(LC4_LF0)&0xffff
  130  00001168  afa50000	sw	(r29),r5
  131  0000116c  8c410000	lw	r1,(r2)
  132  00001170  afa10004	sw	4(r29),r1
  133  00001174  0c000094	jal	_Printf
  134  00001178  54000000	nop; not filled.
  135  0000117c  3c050000	lhi	r5,((LC5_LF0)>>16)&0xffff
  136  00001180  24a520c4	addui	r5,r5,(LC5_LF0)&0xffff
  137  00001184  afa50000	sw	(r29),r5
  138  00001188  90410004	lbu	r1,4(r2)
  139  0000118c  afa10004	sw	4(r29),r1
  140  00001190  0c000078	jal	_Printf
  141  00001194  54000000	nop; not filled.
  142  00001198  0c00007c	jal	_getpid
  143  0000119c  54000000	nop; not filled.
  144  000011a0  3c050000	lhi	r5,((LC6_LF0)>>16)&0xffff
  145  000011a4  24a520e0	addui	r5,r5,(LC6_LF0)&0xffff
  146  000011a8  afa50000	sw	(r29),r5
  147  000011ac  afa10004	sw	4(r29),r1
  148  000011b0  0c000058	jal	_Printf
  149  000011b4  54000000	nop; not filled.
  150  000011b8  23bd0008	addi	r29,r29,#8
  151  000011bc  0c000afc	jal	_exit
  152  000011c0  54000000	nop
  153  000011c4          	.endproc _main
  154                      ;;;
  155                      ;;; Stub functions for DLX traps.
  156                      ;;;
  157                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  158                      ;;;
  159                      ;;; The traps such as Open and Close
  160                      ;;; (note the capital letters) are for use by user programs.  The traps
  161                      ;;; with names such as open and close (lower case) are for use by the OS.
  162                      ;;;
  165  000011c4          	.align 2
  167                      ;;; The following are the traps to be used by user-level programs
  168                      ;;;
  170  000011c4          	.align 2
  171  000011c4          	.proc _Open
  172  000011c4          	.global _Open
  173  000011c4          	_Open:
  174                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  175                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  176                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  177  000011c4  44000213	trap	#0x213
  178  000011c8  4be00000	jr	r31
  179  000011cc  54000000	nop
  180  000011d0          	.endproc _Open
  182  000011d0          	.proc _Close
  183  000011d0          	.global _Close
  184  000011d0          	_Close:
  185  000011d0  44000214	trap	#0x214
  186  000011d4  4be00000	jr	r31
  187  000011d8  54000000	nop
  188  000011dc          	.endproc _Close
  190  000011dc          	.proc _Read
  191  000011dc          	.global _Read
  192  000011dc          	_Read:
  193  000011dc  44000210	trap	#0x210
  194  000011e0  4be00000	jr	r31
  195  000011e4  54000000	nop
  196  000011e8          	.endproc _Read
  198  000011e8          	.proc _Write
  199  000011e8          	.global _Write
  200  000011e8          	_Write:
  201  000011e8  44000211	trap	#0x211
  202  000011ec  4be00000	jr	r31
  203  000011f0  54000000	nop
  204  000011f4          	.endproc _Write
  206  000011f4          	.proc _Lseek
  207  000011f4          	.global _Lseek
  208  000011f4          	_Lseek:
  209  000011f4  44000212	trap	#0x212
  210  000011f8  4be00000	jr	r31
  211  000011fc  54000000	nop
  212  00001200          	.endproc _Lseek
  214  00001200          	.proc _Putchar
  215  00001200          	.global _Putchar
  216  00001200          	_Putchar:
  217  00001200  44000280	trap	#0x280
  218  00001204  4be00000	jr	r31
  219  00001208  54000000	nop
  220  0000120c          	.endproc _Putchar
  222  0000120c          	.proc _Printf
  223  0000120c          	.global _Printf
  224  0000120c          	_Printf:
  225  0000120c  44000201	trap	#0x201
  226  00001210  4be00000	jr	r31
  227  00001214  54000000	nop
  228  00001218          	.endproc _Printf
  230  00001218          	.proc _getpid
  231  00001218          	.global _getpid
  232  00001218          	_getpid:
  233  00001218  44000431	trap	#0x431
  234  0000121c  4be00000	jr	r31
  235  00001220  54000000	nop
  236  00001224          	.endproc _getpid
  238  00001224          	.proc _process_create
  239  00001224          	.global _process_create
  240  00001224          	_process_create:
  241  00001224  44000432	trap	#0x432
  242  00001228  4be00000	jr	r31
  243  0000122c  54000000	nop
  244  00001230          	.endproc _process_create
  246  00001230          	.proc _shmget
  247  00001230          	.global _shmget
  248  00001230          	_shmget:
  249  00001230  44000440	trap	#0x440
  250  00001234  4be00000	jr	r31
  251  00001238  54000000	nop
  252  0000123c          	.endproc _shmget
  254  0000123c          	.proc _shmat
  255  0000123c          	.global _shmat
  256  0000123c          	_shmat:
  257  0000123c  44000441	trap	#0x441
  258  00001240  4be00000	jr	r31
  259  00001244  54000000	nop
  260  00001248          	.endproc _shmat
  262  00001248          	.proc _sem_create
  263  00001248          	.global _sem_create
  264  00001248          	_sem_create:
  265  00001248  44000450	trap	#0x450
  266  0000124c  4be00000	jr	r31
  267  00001250  54000000	nop
  268  00001254          	.endproc _sem_create
  270  00001254          	.proc _sem_wait
  271  00001254          	.global _sem_wait
  272  00001254          	_sem_wait:
  273  00001254  44000451	trap	#0x451
  274  00001258  4be00000	jr	r31
  275  0000125c  54000000	nop
  276  00001260          	.endproc _sem_wait
  278  00001260          	.proc _sem_signal
  279  00001260          	.global _sem_signal
  280  00001260          	_sem_signal:
  281  00001260  44000452	trap	#0x452
  282  00001264  4be00000	jr	r31
  283  00001268  54000000	nop
  284  0000126c          	.endproc _sem_signal
  286  0000126c          	.proc _lock_create
  287  0000126c          	.global _lock_create
  288  0000126c          	_lock_create:
  289  0000126c  44000453	trap	#0x453
  290  00001270  4be00000	jr	r31
  291  00001274  54000000	nop
  292  00001278          	.endproc _lock_create
  294  00001278          	.proc _lock_acquire
  295  00001278          	.global _lock_acquire
  296  00001278          	_lock_acquire:
  297  00001278  44000454	trap	#0x454
  298  0000127c  4be00000	jr	r31
  299  00001280  54000000	nop
  300  00001284          	.endproc _lock_acquire
  302  00001284          	.proc _lock_release
  303  00001284          	.global _lock_release
  304  00001284          	_lock_release:
  305  00001284  44000455	trap	#0x455
  306  00001288  4be00000	jr	r31
  307  0000128c  54000000	nop
  308  00001290          	.endproc _lock_release
  310  00001290          	.proc _cond_create
  311  00001290          	.global _cond_create
  312  00001290          	_cond_create:
  313  00001290  44000456	trap	#0x456
  314  00001294  4be00000	jr	r31
  315  00001298  54000000	nop
  316  0000129c          	.endproc _cond_create
  318  0000129c          	.proc _cond_wait
  319  0000129c          	.global _cond_wait
  320  0000129c          	_cond_wait:
  321  0000129c  44000457	trap	#0x457
  322  000012a0  4be00000	jr	r31
  323  000012a4  54000000	nop
  324  000012a8          	.endproc _cond_wait
  326  000012a8          	.proc _cond_signal
  327  000012a8          	.global _cond_signal
  328  000012a8          	_cond_signal:
  329  000012a8  44000458	trap	#0x458
  330  000012ac  4be00000	jr	r31
  331  000012b0  54000000	nop
  332  000012b4          	.endproc _cond_signal
  334  000012b4          	.proc _cond_broadcast
  335  000012b4          	.global _cond_broadcast
  336  000012b4          	_cond_broadcast:
  337  000012b4  44000459	trap	#0x459
  338  000012b8  4be00000	jr	r31
  339  000012bc  54000000	nop
  340  000012c0          	.endproc _cond_broadcast
  342                      ; Compiled by GCC
  344  000012c0          	.align 2
  345  000012c0          	.proc _isspace
  346  000012c0          	.global _isspace
  347  000012c0          	_isspace:
  348                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
  349  000012c0  afbefffc	sw	-4(r29),r30; push fp
  350  000012c4  001df020	add	r30,r0,r29; fp = sp
  351  000012c8  afbffff8	sw	-8(r29),r31; push ret addr
  352  000012cc  2fbd0010	subui	r29,r29,#16; alloc local storage
  353  000012d0  afa20000	sw	0(r29),r2
  354  000012d4  83c20003	lb	r2,3(r30)
  355  000012d8  201f0000	addi	r31,r0,#0
  356  000012dc  304100ff	andi	r1,r2,#0x00ff
  357  000012e0  60210020	seqi	r1,r1,#32
  358  000012e4  14200018	bnez	r1,L6_LF2
  359  000012e8  54000000	nop; not filled.
  360  000012ec  2041fff7	addi	r1,r2,#-9
  361  000012f0  302100ff	andi	r1,r1,#0x00ff
  362  000012f4  70210001	sleui	r1,r1,#1
  363  000012f8  10200008	beqz	r1,L5_LF2
  364  000012fc  54000000	nop; not filled.
  365  00001300          	L6_LF2:
  366  00001300  201f0001	addi	r31,r0,#1
  367  00001304          	L5_LF2:
  368  00001304  001f0820	add	r1,r0,r31
  369  00001308  8fa20000	lw	r2,0(r29)
  370  0000130c  8fdffff8	lw	r31,-8(r30)
  371  00001310  001ee820	add	r29,r0,r30
  372  00001314  8fdefffc	lw	r30,-4(r30)
  373  00001318  4be00000	jr	r31
  374  0000131c  54000000	nop
  375  00001320          	.endproc _isspace
  376  00001320          	.align 2
  377  00001320          	.proc _isxdigit
  378  00001320          	.global _isxdigit
  379  00001320          	_isxdigit:
  380                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
  381  00001320  afbefffc	sw	-4(r29),r30; push fp
  382  00001324  001df020	add	r30,r0,r29; fp = sp
  383  00001328  afbffff8	sw	-8(r29),r31; push ret addr
  384  0000132c  2fbd0010	subui	r29,r29,#16; alloc local storage
  385  00001330  afa20000	sw	0(r29),r2
  386  00001334  83df0003	lb	r31,3(r30)
  387  00001338  20020000	addi	r2,r0,#0
  388  0000133c  23e1ffd0	addi	r1,r31,#-48
  389  00001340  302100ff	andi	r1,r1,#0x00ff
  390  00001344  70210009	sleui	r1,r1,#9
  391  00001348  14200028	bnez	r1,L12_LF2
  392  0000134c  54000000	nop; not filled.
  393  00001350  23e1ff9f	addi	r1,r31,#-97
  394  00001354  302100ff	andi	r1,r1,#0x00ff
  395  00001358  70210005	sleui	r1,r1,#5
  396  0000135c  14200014	bnez	r1,L12_LF2
  397  00001360  54000000	nop; not filled.
  398  00001364  33e100ff	andi	r1,r31,#0x00ff
  399  00001368  64210041	snei	r1,r1,#65
  400  0000136c  14200008	bnez	r1,L11_LF2
  401  00001370  54000000	nop; not filled.
  402  00001374          	L12_LF2:
  403  00001374  20020001	addi	r2,r0,#1
  404  00001378          	L11_LF2:
  405  00001378  00020820	add	r1,r0,r2
  406  0000137c  8fa20000	lw	r2,0(r29)
  407  00001380  8fdffff8	lw	r31,-8(r30)
  408  00001384  001ee820	add	r29,r0,r30
  409  00001388  8fdefffc	lw	r30,-4(r30)
  410  0000138c  4be00000	jr	r31
  411  00001390  54000000	nop
  412  00001394          	.endproc _isxdigit
  413  00001394          	.align 2
  414  00001394          	.proc _dstrcpy
  415  00001394          	.global _dstrcpy
  416  00001394          	_dstrcpy:
  417                      ;  Function 'dstrcpy'; 0 bytes of locals, 2 regs to save.
  418  00001394  afbefffc	sw	-4(r29),r30; push fp
  419  00001398  001df020	add	r30,r0,r29; fp = sp
  420  0000139c  afbffff8	sw	-8(r29),r31; push ret addr
  421  000013a0  2fbd0010	subui	r29,r29,#16; alloc local storage
  422  000013a4  afa20000	sw	0(r29),r2
  423  000013a8  afa30004	sw	4(r29),r3
  424  000013ac  8fdf0000	lw	r31,(r30)
  425  000013b0  8fc20004	lw	r2,4(r30)
  426  000013b4  001f1820	add	r3,r0,r31
  427  000013b8          	L19_LF2:
  428  000013b8  80410000	lb	r1,(r2)
  429  000013bc  a3e10000	sb	(r31),r1
  430  000013c0  20420001	addi	r2,r2,#1
  431  000013c4  23ff0001	addi	r31,r31,#1
  432  000013c8  302100ff	andi	r1,r1,#0x00ff
  433  000013cc  64210000	snei	r1,r1,#0
  434  000013d0  1420ffe4	bnez	r1,L19_LF2
  435  000013d4  54000000	nop; not filled.
  436  000013d8  00030820	add	r1,r0,r3
  437  000013dc  8fa20000	lw	r2,0(r29)
  438  000013e0  8fa30004	lw	r3,4(r29)
  439  000013e4  8fdffff8	lw	r31,-8(r30)
  440  000013e8  001ee820	add	r29,r0,r30
  441  000013ec  8fdefffc	lw	r30,-4(r30)
  442  000013f0  4be00000	jr	r31
  443  000013f4  54000000	nop
  444  000013f8          	.endproc _dstrcpy
  445  000013f8          	.align 2
  446  000013f8          	.proc _dstrncpy
  447  000013f8          	.global _dstrncpy
  448  000013f8          	_dstrncpy:
  449                      ;  Function 'dstrncpy'; 0 bytes of locals, 3 regs to save.
  450  000013f8  afbefffc	sw	-4(r29),r30; push fp
  451  000013fc  001df020	add	r30,r0,r29; fp = sp
  452  00001400  afbffff8	sw	-8(r29),r31; push ret addr
  453  00001404  2fbd0018	subui	r29,r29,#24; alloc local storage
  454  00001408  afa20000	sw	0(r29),r2
  455  0000140c  afa30004	sw	4(r29),r3
  456  00001410  afa40008	sw	8(r29),r4
  457  00001414  8fc20000	lw	r2,(r30)
  458  00001418  8fc30004	lw	r3,4(r30)
  459  0000141c  8fdf0008	lw	r31,8(r30)
  460  00001420  00022020	add	r4,r0,r2
  461  00001424  08000024	j	L37_LF2
  462  00001428  54000000	nop; not filled.
  463  0000142c          	L34_LF2:
  464  0000142c  80610000	lb	r1,(r3)
  465  00001430  a0410000	sb	(r2),r1
  466  00001434  20630001	addi	r3,r3,#1
  467  00001438  20420001	addi	r2,r2,#1
  468  0000143c  302100ff	andi	r1,r1,#0x00ff
  469  00001440  64210000	snei	r1,r1,#0
  470  00001444  10200018	beqz	r1,L32_LF2
  471  00001448  54000000	nop; not filled.
  472  0000144c          	L37_LF2:
  473  0000144c  001f0820	add	r1,r0,r31
  474  00001450  23ffffff	addi	r31,r31,#-1
  475  00001454  70210000	slei	r1,r1,#0
  476  00001458  1020ffd0	beqz	r1,L34_LF2
  477  0000145c  54000000	nop; not filled.
  478  00001460          	L32_LF2:
  479  00001460  00040820	add	r1,r0,r4
  480  00001464  8fa20000	lw	r2,0(r29)
  481  00001468  8fa30004	lw	r3,4(r29)
  482  0000146c  8fa40008	lw	r4,8(r29)
  483  00001470  8fdffff8	lw	r31,-8(r30)
  484  00001474  001ee820	add	r29,r0,r30
  485  00001478  8fdefffc	lw	r30,-4(r30)
  486  0000147c  4be00000	jr	r31
  487  00001480  54000000	nop
  488  00001484          	.endproc _dstrncpy
  489  00001484          	.align 2
  490  00001484          	.proc _dstrcat
  491  00001484          	.global _dstrcat
  492  00001484          	_dstrcat:
  493                      ;  Function 'dstrcat'; 0 bytes of locals, 2 regs to save.
  494  00001484  afbefffc	sw	-4(r29),r30; push fp
  495  00001488  001df020	add	r30,r0,r29; fp = sp
  496  0000148c  afbffff8	sw	-8(r29),r31; push ret addr
  497  00001490  2fbd0010	subui	r29,r29,#16; alloc local storage
  498  00001494  afa20000	sw	0(r29),r2
  499  00001498  afa30004	sw	4(r29),r3
  500  0000149c  8fdf0000	lw	r31,(r30)
  501  000014a0  001f1820	add	r3,r0,r31
  502  000014a4  90610000	lbu	r1,(r3)
  503  000014a8  64210000	snei	r1,r1,#0
  504  000014ac  10200018	beqz	r1,L50_LF2
  505  000014b0  54000000	nop; not filled.
  506  000014b4          	L51_LF2:
  507  000014b4  23ff0001	addi	r31,r31,#1
  508  000014b8  93e10000	lbu	r1,(r31)
  509  000014bc  64210000	snei	r1,r1,#0
  510  000014c0  1420fff0	bnez	r1,L51_LF2
  511  000014c4  54000000	nop; not filled.
  512  000014c8          	L50_LF2:
  513  000014c8  001f1020	add	r2,r0,r31
  514  000014cc  8fdf0004	lw	r31,4(r30)
  515  000014d0          	L54_LF2:
  516  000014d0  83e10000	lb	r1,(r31)
  517  000014d4  a0410000	sb	(r2),r1
  518  000014d8  23ff0001	addi	r31,r31,#1
  519  000014dc  20420001	addi	r2,r2,#1
  520  000014e0  302100ff	andi	r1,r1,#0x00ff
  521  000014e4  64210000	snei	r1,r1,#0
  522  000014e8  1420ffe4	bnez	r1,L54_LF2
  523  000014ec  54000000	nop; not filled.
  524  000014f0  00030820	add	r1,r0,r3
  525  000014f4  8fa20000	lw	r2,0(r29)
  526  000014f8  8fa30004	lw	r3,4(r29)
  527  000014fc  8fdffff8	lw	r31,-8(r30)
  528  00001500  001ee820	add	r29,r0,r30
  529  00001504  8fdefffc	lw	r30,-4(r30)
  530  00001508  4be00000	jr	r31
  531  0000150c  54000000	nop
  532  00001510          	.endproc _dstrcat
  533  00001510          	.align 2
  534  00001510          	.proc _dstrncmp
  535  00001510          	.global _dstrncmp
  536  00001510          	_dstrncmp:
  537                      ;  Function 'dstrncmp'; 0 bytes of locals, 4 regs to save.
  538  00001510  afbefffc	sw	-4(r29),r30; push fp
  539  00001514  001df020	add	r30,r0,r29; fp = sp
  540  00001518  afbffff8	sw	-8(r29),r31; push ret addr
  541  0000151c  2fbd0018	subui	r29,r29,#24; alloc local storage
  542  00001520  afa20000	sw	0(r29),r2
  543  00001524  afa30004	sw	4(r29),r3
  544  00001528  afa40008	sw	8(r29),r4
  545  0000152c  afa5000c	sw	12(r29),r5
  546  00001530  8fc30000	lw	r3,(r30)
  547  00001534  8fc40004	lw	r4,4(r30)
  548  00001538  8fc50008	lw	r5,8(r30)
  549  0000153c  20020000	addi	r2,r0,#0
  550  00001540  0045082a	slt	r1,r2,r5
  551  00001544  1020003c	beqz	r1,L73_LF2
  552  00001548  54000000	nop; not filled.
  553  0000154c          	L75_LF2:
  554  0000154c  909f0000	lbu	r31,(r4)
  555  00001550  67e10000	snei	r1,r31,#0
  556  00001554  10200038	beqz	r1,L86_LF2
  557  00001558  54000000	nop; not filled.
  558  0000155c  90610000	lbu	r1,(r3)
  559  00001560  003f0829	sne	r1,r1,r31
  560  00001564  1420001c	bnez	r1,L73_LF2
  561  00001568  54000000	nop; not filled.
  562  0000156c  20630001	addi	r3,r3,#1
  563  00001570  20840001	addi	r4,r4,#1
  564  00001574  20420001	addi	r2,r2,#1
  565  00001578  0045082a	slt	r1,r2,r5
  566  0000157c  1420ffcc	bnez	r1,L75_LF2
  567  00001580  54000000	nop; not filled.
  568  00001584          	L73_LF2:
  569  00001584  00450828	seq	r1,r2,r5
  570  00001588  10200010	beqz	r1,L80_LF2
  571  0000158c  54000000	nop; not filled.
  572  00001590          	L86_LF2:
  573  00001590  20010000	addi	r1,r0,#0
  574  00001594  08000028	j	L84_LF2
  575  00001598  54000000	nop; not filled.
  576  0000159c          	L80_LF2:
  577  0000159c  907f0000	lbu	r31,(r3)
  578  000015a0  90830000	lbu	r3,(r4)
  579  000015a4  03e30822	sub	r1,r31,r3
  580  000015a8  74210000	sgei	r1,r1,#0
  581  000015ac  2002ffff	addi	r2,r0,#-1
  582  000015b0  10200008	beqz	r1,L82_LF2
  583  000015b4  54000000	nop; not filled.
  584  000015b8  03e31029	sne	r2,r31,r3
  585  000015bc          	L82_LF2:
  586  000015bc  00020820	add	r1,r0,r2
  587  000015c0          	L84_LF2:
  588  000015c0  8fa20000	lw	r2,0(r29)
  589  000015c4  8fa30004	lw	r3,4(r29)
  590  000015c8  8fa40008	lw	r4,8(r29)
  591  000015cc  8fa5000c	lw	r5,12(r29)
  592  000015d0  8fdffff8	lw	r31,-8(r30)
  593  000015d4  001ee820	add	r29,r0,r30
  594  000015d8  8fdefffc	lw	r30,-4(r30)
  595  000015dc  4be00000	jr	r31
  596  000015e0  54000000	nop
  597  000015e4          	.endproc _dstrncmp
  598  000015e4          	.align 2
  599  000015e4          	.proc _dstrlen
  600  000015e4          	.global _dstrlen
  601  000015e4          	_dstrlen:
  602                      ;  Function 'dstrlen'; 0 bytes of locals, 1 regs to save.
  603  000015e4  afbefffc	sw	-4(r29),r30; push fp
  604  000015e8  001df020	add	r30,r0,r29; fp = sp
  605  000015ec  afbffff8	sw	-8(r29),r31; push ret addr
  606  000015f0  2fbd0010	subui	r29,r29,#16; alloc local storage
  607  000015f4  afa20000	sw	0(r29),r2
  608  000015f8  8fdf0000	lw	r31,(r30)
  609  000015fc  20020000	addi	r2,r0,#0
  610  00001600  08000008	j	L97_LF2
  611  00001604  54000000	nop; not filled.
  612  00001608          	L95_LF2:
  613  00001608  20420001	addi	r2,r2,#1
  614  0000160c          	L97_LF2:
  615  0000160c  93e10000	lbu	r1,(r31)
  616  00001610  23ff0001	addi	r31,r31,#1
  617  00001614  64210000	snei	r1,r1,#0
  618  00001618  1420ffec	bnez	r1,L95_LF2
  619  0000161c  54000000	nop; not filled.
  620  00001620  00020820	add	r1,r0,r2
  621  00001624  8fa20000	lw	r2,0(r29)
  622  00001628  8fdffff8	lw	r31,-8(r30)
  623  0000162c  001ee820	add	r29,r0,r30
  624  00001630  8fdefffc	lw	r30,-4(r30)
  625  00001634  4be00000	jr	r31
  626  00001638  54000000	nop
  627  0000163c          	.endproc _dstrlen
  628  0000163c          	.align 2
  629  0000163c          	.proc _dstrstr
  630  0000163c          	.global _dstrstr
  631  0000163c          	_dstrstr:
  632                      ;  Function 'dstrstr'; 0 bytes of locals, 6 regs to save.
  633  0000163c  afbefffc	sw	-4(r29),r30; push fp
  634  00001640  001df020	add	r30,r0,r29; fp = sp
  635  00001644  afbffff8	sw	-8(r29),r31; push ret addr
  636  00001648  2fbd0020	subui	r29,r29,#32; alloc local storage
  637  0000164c  afa20000	sw	0(r29),r2
  638  00001650  afa30004	sw	4(r29),r3
  639  00001654  afa40008	sw	8(r29),r4
  640  00001658  afa5000c	sw	12(r29),r5
  641  0000165c  afa60010	sw	16(r29),r6
  642  00001660  afa70014	sw	20(r29),r7
  643  00001664  8fc50000	lw	r5,(r30)
  644  00001668  8fc70004	lw	r7,4(r30)
  645  0000166c  20030000	addi	r3,r0,#0
  646  00001670  90e10000	lbu	r1,(r7)
  647  00001674  20e20001	addi	r2,r7,#1
  648  00001678  64210000	snei	r1,r1,#0
  649  0000167c  1020001c	beqz	r1,L125_LF2
  650  00001680  54000000	nop; not filled.
  651  00001684          	L126_LF2:
  652  00001684  20630001	addi	r3,r3,#1
  653  00001688  90410000	lbu	r1,(r2)
  654  0000168c  20420001	addi	r2,r2,#1
  655  00001690  64210000	snei	r1,r1,#0
  656  00001694  1420ffec	bnez	r1,L126_LF2
  657  00001698  54000000	nop; not filled.
  658  0000169c          	L125_LF2:
  659  0000169c  00033020	add	r6,r0,r3
  660  000016a0  080000ac	j	L149_LF2
  661  000016a4  54000000	nop; not filled.
  662  000016a8          	L130_LF2:
  663  000016a8  00051820	add	r3,r0,r5
  664  000016ac  00072020	add	r4,r0,r7
  665  000016b0  20020000	addi	r2,r0,#0
  666  000016b4  0046082a	slt	r1,r2,r6
  667  000016b8  1020003c	beqz	r1,L134_LF2
  668  000016bc  54000000	nop; not filled.
  669  000016c0          	L136_LF2:
  670  000016c0  909f0000	lbu	r31,(r4)
  671  000016c4  67e10000	snei	r1,r31,#0
  672  000016c8  10200038	beqz	r1,L150_LF2
  673  000016cc  54000000	nop; not filled.
  674  000016d0  90610000	lbu	r1,(r3)
  675  000016d4  003f0829	sne	r1,r1,r31
  676  000016d8  1420001c	bnez	r1,L134_LF2
  677  000016dc  54000000	nop; not filled.
  678  000016e0  20630001	addi	r3,r3,#1
  679  000016e4  20840001	addi	r4,r4,#1
  680  000016e8  20420001	addi	r2,r2,#1
  681  000016ec  0046082a	slt	r1,r2,r6
  682  000016f0  1420ffcc	bnez	r1,L136_LF2
  683  000016f4  54000000	nop; not filled.
  684  000016f8          	L134_LF2:
  685  000016f8  00460828	seq	r1,r2,r6
  686  000016fc  10200010	beqz	r1,L141_LF2
  687  00001700  54000000	nop; not filled.
  688  00001704          	L150_LF2:
  689  00001704  20010000	addi	r1,r0,#0
  690  00001708  08000028	j	L132_LF2
  691  0000170c  54000000	nop; not filled.
  692  00001710          	L141_LF2:
  693  00001710  90630000	lbu	r3,(r3)
  694  00001714  90820000	lbu	r2,(r4)
  695  00001718  00620822	sub	r1,r3,r2
  696  0000171c  74210000	sgei	r1,r1,#0
  697  00001720  201fffff	addi	r31,r0,#-1
  698  00001724  10200008	beqz	r1,L143_LF2
  699  00001728  54000000	nop; not filled.
  700  0000172c  0062f829	sne	r31,r3,r2
  701  00001730          	L143_LF2:
  702  00001730  001f0820	add	r1,r0,r31
  703  00001734          	L132_LF2:
  704  00001734  64210000	snei	r1,r1,#0
  705  00001738  14200010	bnez	r1,L131_LF2
  706  0000173c  54000000	nop; not filled.
  707  00001740  00050820	add	r1,r0,r5
  708  00001744  0800001c	j	L146_LF2
  709  00001748  54000000	nop; not filled.
  710  0000174c          	L131_LF2:
  711  0000174c  20a50001	addi	r5,r5,#1
  712  00001750          	L149_LF2:
  713  00001750  90a10000	lbu	r1,(r5)
  714  00001754  64210000	snei	r1,r1,#0
  715  00001758  1420ff4c	bnez	r1,L130_LF2
  716  0000175c  54000000	nop; not filled.
  717  00001760  20010000	addi	r1,r0,#0
  718  00001764          	L146_LF2:
  719  00001764  8fa20000	lw	r2,0(r29)
  720  00001768  8fa30004	lw	r3,4(r29)
  721  0000176c  8fa40008	lw	r4,8(r29)
  722  00001770  8fa5000c	lw	r5,12(r29)
  723  00001774  8fa60010	lw	r6,16(r29)
  724  00001778  8fa70014	lw	r7,20(r29)
  725  0000177c  8fdffff8	lw	r31,-8(r30)
  726  00001780  001ee820	add	r29,r0,r30
  727  00001784  8fdefffc	lw	r30,-4(r30)
  728  00001788  4be00000	jr	r31
  729  0000178c  54000000	nop
  730  00001790          	.endproc _dstrstr
  731  00001790          	.align 2
  732  00001790          	.proc _dmindex
  733  00001790          	.global _dmindex
  734  00001790          	_dmindex:
  735                      ;  Function 'dmindex'; 0 bytes of locals, 5 regs to save.
  736  00001790  afbefffc	sw	-4(r29),r30; push fp
  737  00001794  001df020	add	r30,r0,r29; fp = sp
  738  00001798  afbffff8	sw	-8(r29),r31; push ret addr
  739  0000179c  2fbd0020	subui	r29,r29,#32; alloc local storage
  740  000017a0  afa20000	sw	0(r29),r2
  741  000017a4  afa30004	sw	4(r29),r3
  742  000017a8  afa40008	sw	8(r29),r4
  743  000017ac  afa5000c	sw	12(r29),r5
  744  000017b0  afa60010	sw	16(r29),r6
  745  000017b4  8fc40000	lw	r4,(r30)
  746  000017b8  8fc60004	lw	r6,4(r30)
  747  000017bc  90810000	lbu	r1,(r4)
  748  000017c0  64210000	snei	r1,r1,#0
  749  000017c4  10200060	beqz	r1,L164_LF2
  750  000017c8  54000000	nop; not filled.
  751  000017cc  00012820	add	r5,r0,r1
  752  000017d0          	L165_LF2:
  753  000017d0  00061020	add	r2,r0,r6
  754  000017d4  80df0000	lb	r31,(r6)
  755  000017d8  33e100ff	andi	r1,r31,#0x00ff
  756  000017dc  64210000	snei	r1,r1,#0
  757  000017e0  1020003c	beqz	r1,L163_LF2
  758  000017e4  54000000	nop; not filled.
  759  000017e8  90830000	lbu	r3,(r4)
  760  000017ec          	L169_LF2:
  761  000017ec  33e100ff	andi	r1,r31,#0x00ff
  762  000017f0  00610828	seq	r1,r3,r1
  763  000017f4  10200010	beqz	r1,L168_LF2
  764  000017f8  54000000	nop; not filled.
  765  000017fc  00040820	add	r1,r0,r4
  766  00001800  08000028	j	L173_LF2
  767  00001804  54000000	nop; not filled.
  768  00001808          	L168_LF2:
  769  00001808  20420001	addi	r2,r2,#1
  770  0000180c  805f0000	lb	r31,(r2)
  771  00001810  33e100ff	andi	r1,r31,#0x00ff
  772  00001814  64210000	snei	r1,r1,#0
  773  00001818  1420ffd0	bnez	r1,L169_LF2
  774  0000181c  54000000	nop; not filled.
  775  00001820          	L163_LF2:
  776  00001820  14a0ffac	bnez	r5,L165_LF2
  777  00001824  54000000	nop; not filled.
  778  00001828          	L164_LF2:
  779  00001828  20010000	addi	r1,r0,#0
  780  0000182c          	L173_LF2:
  781  0000182c  8fa20000	lw	r2,0(r29)
  782  00001830  8fa30004	lw	r3,4(r29)
  783  00001834  8fa40008	lw	r4,8(r29)
  784  00001838  8fa5000c	lw	r5,12(r29)
  785  0000183c  8fa60010	lw	r6,16(r29)
  786  00001840  8fdffff8	lw	r31,-8(r30)
  787  00001844  001ee820	add	r29,r0,r30
  788  00001848  8fdefffc	lw	r30,-4(r30)
  789  0000184c  4be00000	jr	r31
  790  00001850  54000000	nop
  791  00001854          	.endproc _dmindex
  792  00001854          	.align 2
  793  00001854          	.proc _dindex
  794  00001854          	.global _dindex
  795  00001854          	_dindex:
  796                      ;  Function 'dindex'; 0 bytes of locals, 2 regs to save.
  797  00001854  afbefffc	sw	-4(r29),r30; push fp
  798  00001858  001df020	add	r30,r0,r29; fp = sp
  799  0000185c  afbffff8	sw	-8(r29),r31; push ret addr
  800  00001860  2fbd0010	subui	r29,r29,#16; alloc local storage
  801  00001864  afa20000	sw	0(r29),r2
  802  00001868  afa30004	sw	4(r29),r3
  803  0000186c  8fc20000	lw	r2,(r30)
  804  00001870  8fc30004	lw	r3,4(r30)
  805  00001874  08000024	j	L187_LF2
  806  00001878  54000000	nop; not filled.
  807  0000187c          	L183_LF2:
  808  0000187c  33e100ff	andi	r1,r31,#0x00ff
  809  00001880  00230828	seq	r1,r1,r3
  810  00001884  10200010	beqz	r1,L184_LF2
  811  00001888  54000000	nop; not filled.
  812  0000188c  00020820	add	r1,r0,r2
  813  00001890  08000020	j	L186_LF2
  814  00001894  54000000	nop; not filled.
  815  00001898          	L184_LF2:
  816  00001898  20420001	addi	r2,r2,#1
  817  0000189c          	L187_LF2:
  818  0000189c  805f0000	lb	r31,(r2)
  819  000018a0  33e100ff	andi	r1,r31,#0x00ff
  820  000018a4  64210000	snei	r1,r1,#0
  821  000018a8  1420ffd0	bnez	r1,L183_LF2
  822  000018ac  54000000	nop; not filled.
  823  000018b0  20010000	addi	r1,r0,#0
  824  000018b4          	L186_LF2:
  825  000018b4  8fa20000	lw	r2,0(r29)
  826  000018b8  8fa30004	lw	r3,4(r29)
  827  000018bc  8fdffff8	lw	r31,-8(r30)
  828  000018c0  001ee820	add	r29,r0,r30
  829  000018c4  8fdefffc	lw	r30,-4(r30)
  830  000018c8  4be00000	jr	r31
  831  000018cc  54000000	nop
  832  000018d0          	.endproc _dindex
  833  000018d0          	.align 2
  834  000018d0          	.proc _ditoa
  835  000018d0          	.global _ditoa
  836  000018d0          	_ditoa:
  837                      ;  Function 'ditoa'; 0 bytes of locals, 5 regs to save.
  838  000018d0  afbefffc	sw	-4(r29),r30; push fp
  839  000018d4  001df020	add	r30,r0,r29; fp = sp
  840  000018d8  afbffff8	sw	-8(r29),r31; push ret addr
  841  000018dc  2fbd0020	subui	r29,r29,#32; alloc local storage
  842  000018e0  afa20000	sw	0(r29),r2
  843  000018e4  afa30004	sw	4(r29),r3
  844  000018e8  afa40008	sw	8(r29),r4
  845  000018ec  afa5000c	sw	12(r29),r5
  846  000018f0  afa60010	sw	16(r29),r6
  847  000018f4  8fc30000	lw	r3,(r30)
  848  000018f8  8fc40004	lw	r4,4(r30)
  849  000018fc  68610000	slti	r1,r3,#0
  850  00001900  10200010	beqz	r1,L203_LF2
  851  00001904  54000000	nop; not filled.
  852  00001908  2006002d	addi	r6,r0,(#0x2d)&0xff
  853  0000190c  08000014	j	L216_LF2
  854  00001910  54000000	nop; not filled.
  855  00001914          	L203_LF2:
  856  00001914  64610000	snei	r1,r3,#0
  857  00001918  14200018	bnez	r1,L205_LF2
  858  0000191c  54000000	nop; not filled.
  859  00001920  20060030	addi	r6,r0,(#0x30)&0xff
  860  00001924          	L216_LF2:
  861  00001924  a0860000	sb	(r4),r6
  862  00001928  20840001	addi	r4,r4,#1
  863  0000192c  0800007c	j	L204_LF2
  864  00001930  54000000	nop; not filled.
  865  00001934          	L205_LF2:
  866  00001934  201f0001	addi	r31,r0,#1
  867  00001938  03e3082c	sle	r1,r31,r3
  868  0000193c  1020001c	beqz	r1,L208_LF2
  869  00001940  54000000	nop; not filled.
  870  00001944          	L209_LF2:
  871  00001944  53e10002	slli	r1,r31,#0x2
  872  00001948  003f0820	add	r1,r1,r31
  873  0000194c  503f0001	slli	r31,r1,#0x1
  874  00001950  03e3082c	sle	r1,r31,r3
  875  00001954  1420ffec	bnez	r1,L209_LF2
  876  00001958  54000000	nop; not filled.
  877  0000195c          	L208_LF2:
  878  0000195c  2005000a	addi	r5,r0,#10
  879  00001960          	L212_LF2:
  880  00001960  03e00035	movi2fp	f0,r31
  881  00001964  00a00835	movi2fp	f1,r5
  882  00001968  0401000f	div	f0,f0,f1
  883  0000196c  0000f834	movfp2i	r31,f0
  884  00001970  00600035	movi2fp	f0,r3
  885  00001974  03e00835	movi2fp	f1,r31
  886  00001978  0401000f	div	f0,f0,f1
  887  0000197c  00001034	movfp2i	r2,f0
  888  00001980  20410030	addi	r1,r2,#48
  889  00001984  a0810000	sb	(r4),r1
  890  00001988  20840001	addi	r4,r4,#1
  891  0000198c  00400035	movi2fp	f0,r2
  892  00001990  03e00835	movi2fp	f1,r31
  893  00001994  0401000e	mult	f0,f0,f1
  894  00001998  00000834	movfp2i	r1,f0
  895  0000199c  00611822	sub	r3,r3,r1
  896  000019a0  6fe10001	sgti	r1,r31,#1
  897  000019a4  1420ffb8	bnez	r1,L212_LF2
  898  000019a8  54000000	nop; not filled.
  899  000019ac          	L204_LF2:
  900  000019ac  20060000	addi	r6,r0,(#0x0)&0xff
  901  000019b0  a0860000	sb	(r4),r6
  902  000019b4  8fa20000	lw	r2,0(r29)
  903  000019b8  8fa30004	lw	r3,4(r29)
  904  000019bc  8fa40008	lw	r4,8(r29)
  905  000019c0  8fa5000c	lw	r5,12(r29)
  906  000019c4  8fa60010	lw	r6,16(r29)
  907  000019c8  8fdffff8	lw	r31,-8(r30)
  908  000019cc  001ee820	add	r29,r0,r30
  909  000019d0  8fdefffc	lw	r30,-4(r30)
  910  000019d4  4be00000	jr	r31
  911  000019d8  54000000	nop
  912  000019dc          	.endproc _ditoa
  913  000019dc          	.align 2
  914  000019dc          	.proc _dstrtol
  915  000019dc          	.global _dstrtol
  916  000019dc          	_dstrtol:
  917                      ;  Function 'dstrtol'; 0 bytes of locals, 5 regs to save.
  918  000019dc  afbefffc	sw	-4(r29),r30; push fp
  919  000019e0  001df020	add	r30,r0,r29; fp = sp
  920  000019e4  afbffff8	sw	-8(r29),r31; push ret addr
  921  000019e8  2fbd0020	subui	r29,r29,#32; alloc local storage
  922  000019ec  afa20000	sw	0(r29),r2
  923  000019f0  afa30004	sw	4(r29),r3
  924  000019f4  afa40008	sw	8(r29),r4
  925  000019f8  afa5000c	sw	12(r29),r5
  926  000019fc  afa60010	sw	16(r29),r6
  927  00001a00  8fc20000	lw	r2,(r30)
  928  00001a04  8fc50004	lw	r5,4(r30)
  929  00001a08  8fc40008	lw	r4,8(r30)
  930  00001a0c  20030000	addi	r3,r0,#0
  931  00001a10  08000008	j	L247_LF2
  932  00001a14  54000000	nop; not filled.
  933  00001a18          	L220_LF2:
  934  00001a18  20420001	addi	r2,r2,#1
  935  00001a1c          	L247_LF2:
  936  00001a1c  805f0000	lb	r31,(r2)
  937  00001a20  33e100ff	andi	r1,r31,#0x00ff
  938  00001a24  60210020	seqi	r1,r1,#32
  939  00001a28  1420ffec	bnez	r1,L220_LF2
  940  00001a2c  54000000	nop; not filled.
  941  00001a30  23e1fff7	addi	r1,r31,#-9
  942  00001a34  302100ff	andi	r1,r1,#0x00ff
  943  00001a38  70210001	sleui	r1,r1,#1
  944  00001a3c  1420ffd8	bnez	r1,L220_LF2
  945  00001a40  54000000	nop; not filled.
  946  00001a44  64a10000	snei	r1,r5,#0
  947  00001a48  10200008	beqz	r1,L222_LF2
  948  00001a4c  54000000	nop; not filled.
  949  00001a50  aca20000	sw	(r5),r2
  950  00001a54          	L222_LF2:
  951  00001a54  905f0000	lbu	r31,(r2)
  952  00001a58  67e10000	snei	r1,r31,#0
  953  00001a5c  10200090	beqz	r1,L248_LF2
  954  00001a60  54000000	nop; not filled.
  955  00001a64  63e1002d	seqi	r1,r31,#45
  956  00001a68  10200014	beqz	r1,L224_LF2
  957  00001a6c  54000000	nop; not filled.
  958  00001a70  2006ffff	addi	r6,r0,#-1
  959  00001a74  20420001	addi	r2,r2,#1
  960  00001a78  08000008	j	L225_LF2
  961  00001a7c  54000000	nop; not filled.
  962  00001a80          	L224_LF2:
  963  00001a80  20060001	addi	r6,r0,#1
  964  00001a84          	L225_LF2:
  965  00001a84  64810000	snei	r1,r4,#0
  966  00001a88  14200054	bnez	r1,L226_LF2
  967  00001a8c  54000000	nop; not filled.
  968  00001a90  90410000	lbu	r1,(r2)
  969  00001a94  60210030	seqi	r1,r1,#48
  970  00001a98  10200040	beqz	r1,L227_LF2
  971  00001a9c  54000000	nop; not filled.
  972  00001aa0  20420001	addi	r2,r2,#1
  973  00001aa4  905f0000	lbu	r31,(r2)
  974  00001aa8  63e10078	seqi	r1,r31,#120
  975  00001aac  14200010	bnez	r1,L229_LF2
  976  00001ab0  54000000	nop; not filled.
  977  00001ab4  63e10058	seqi	r1,r31,#88
  978  00001ab8  10200014	beqz	r1,L228_LF2
  979  00001abc  54000000	nop; not filled.
  980  00001ac0          	L229_LF2:
  981  00001ac0  20040010	addi	r4,r0,#16
  982  00001ac4  20420001	addi	r2,r2,#1
  983  00001ac8  08000014	j	L226_LF2
  984  00001acc  54000000	nop; not filled.
  985  00001ad0          	L228_LF2:
  986  00001ad0  20040008	addi	r4,r0,#8
  987  00001ad4  08000008	j	L226_LF2
  988  00001ad8  54000000	nop; not filled.
  989  00001adc          	L227_LF2:
  990  00001adc  2004000a	addi	r4,r0,#10
  991  00001ae0          	L226_LF2:
  992  00001ae0  2081ffff	addi	r1,r4,#-1
  993  00001ae4  6c21000f	sgtui	r1,r1,#15
  994  00001ae8  10200010	beqz	r1,L233_LF2
  995  00001aec  54000000	nop; not filled.
  996  00001af0          	L248_LF2:
  997  00001af0  00030820	add	r1,r0,r3
  998  00001af4  080000c4	j	L245_LF2
  999  00001af8  54000000	nop; not filled.
 1000  00001afc          	L233_LF2:
 1001  00001afc  805f0000	lb	r31,(r2)
 1002  00001b00  23e1ffd0	addi	r1,r31,#-48
 1003  00001b04  302100ff	andi	r1,r1,#0x00ff
 1004  00001b08  70210009	sleui	r1,r1,#9
 1005  00001b0c  10200014	beqz	r1,L236_LF2
 1006  00001b10  54000000	nop; not filled.
 1007  00001b14  33e100ff	andi	r1,r31,#0x00ff
 1008  00001b18  2021ffd0	addi	r1,r1,#-48
 1009  00001b1c  08000050	j	L237_LF2
 1010  00001b20  54000000	nop; not filled.
 1011  00001b24          	L236_LF2:
 1012  00001b24  23e1ff9f	addi	r1,r31,#-97
 1013  00001b28  302100ff	andi	r1,r1,#0x00ff
 1014  00001b2c  70210019	sleui	r1,r1,#25
 1015  00001b30  10200014	beqz	r1,L238_LF2
 1016  00001b34  54000000	nop; not filled.
 1017  00001b38  33e100ff	andi	r1,r31,#0x00ff
 1018  00001b3c  2021ffa9	addi	r1,r1,#-87
 1019  00001b40  0800002c	j	L237_LF2
 1020  00001b44  54000000	nop; not filled.
 1021  00001b48          	L238_LF2:
 1022  00001b48  23e1ffbf	addi	r1,r31,#-65
 1023  00001b4c  302100ff	andi	r1,r1,#0x00ff
 1024  00001b50  70210019	sleui	r1,r1,#25
 1025  00001b54  10200014	beqz	r1,L240_LF2
 1026  00001b58  54000000	nop; not filled.
 1027  00001b5c  33e100ff	andi	r1,r31,#0x00ff
 1028  00001b60  2021ffc9	addi	r1,r1,#-55
 1029  00001b64  08000008	j	L237_LF2
 1030  00001b68  54000000	nop; not filled.
 1031  00001b6c          	L240_LF2:
 1032  00001b6c  200103e8	addi	r1,r0,#1000
 1033  00001b70          	L237_LF2:
 1034  00001b70  0024f82a	slt	r31,r1,r4
 1035  00001b74  13e00024	beqz	r31,L246_LF2
 1036  00001b78  54000000	nop; not filled.
 1037  00001b7c  00600035	movi2fp	f0,r3
 1038  00001b80  00800835	movi2fp	f1,r4
 1039  00001b84  0401000e	mult	f0,f0,f1
 1040  00001b88  00001834	movfp2i	r3,f0
 1041  00001b8c  00611820	add	r3,r3,r1
 1042  00001b90  20420001	addi	r2,r2,#1
 1043  00001b94  17e0ff64	bnez	r31,L233_LF2
 1044  00001b98  54000000	nop; not filled.
 1045  00001b9c          	L246_LF2:
 1046  00001b9c  64a10000	snei	r1,r5,#0
 1047  00001ba0  10200008	beqz	r1,L244_LF2
 1048  00001ba4  54000000	nop; not filled.
 1049  00001ba8  aca20000	sw	(r5),r2
 1050  00001bac          	L244_LF2:
 1051  00001bac  00600035	movi2fp	f0,r3
 1052  00001bb0  00c00835	movi2fp	f1,r6
 1053  00001bb4  0401000e	mult	f0,f0,f1
 1054  00001bb8  00000834	movfp2i	r1,f0
 1055  00001bbc          	L245_LF2:
 1056  00001bbc  8fa20000	lw	r2,0(r29)
 1057  00001bc0  8fa30004	lw	r3,4(r29)
 1058  00001bc4  8fa40008	lw	r4,8(r29)
 1059  00001bc8  8fa5000c	lw	r5,12(r29)
 1060  00001bcc  8fa60010	lw	r6,16(r29)
 1061  00001bd0  8fdffff8	lw	r31,-8(r30)
 1062  00001bd4  001ee820	add	r29,r0,r30
 1063  00001bd8  8fdefffc	lw	r30,-4(r30)
 1064  00001bdc  4be00000	jr	r31
 1065  00001be0  54000000	nop
 1066  00001be4          	.endproc _dstrtol
 1067  00001be4          	.align 2
 1068  00001be4          	.proc _bcopy
 1069  00001be4          	.global _bcopy
 1070  00001be4          	_bcopy:
 1071                      ;  Function 'bcopy'; 0 bytes of locals, 3 regs to save.
 1072  00001be4  afbefffc	sw	-4(r29),r30; push fp
 1073  00001be8  001df020	add	r30,r0,r29; fp = sp
 1074  00001bec  afbffff8	sw	-8(r29),r31; push ret addr
 1075  00001bf0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1076  00001bf4  afa20000	sw	0(r29),r2
 1077  00001bf8  afa30004	sw	4(r29),r3
 1078  00001bfc  afa40008	sw	8(r29),r4
 1079  00001c00  8fc30000	lw	r3,(r30)
 1080  00001c04  8fc20004	lw	r2,4(r30)
 1081  00001c08  8fdf0008	lw	r31,8(r30)
 1082  00001c0c  08000014	j	L259_LF2
 1083  00001c10  54000000	nop; not filled.
 1084  00001c14          	L257_LF2:
 1085  00001c14  80640000	lb	r4,(r3)
 1086  00001c18  a0440000	sb	(r2),r4
 1087  00001c1c  20630001	addi	r3,r3,#1
 1088  00001c20  20420001	addi	r2,r2,#1
 1089  00001c24          	L259_LF2:
 1090  00001c24  001f0820	add	r1,r0,r31
 1091  00001c28  23ffffff	addi	r31,r31,#-1
 1092  00001c2c  6c210000	sgti	r1,r1,#0
 1093  00001c30  1420ffe0	bnez	r1,L257_LF2
 1094  00001c34  54000000	nop; not filled.
 1095  00001c38  8fa20000	lw	r2,0(r29)
 1096  00001c3c  8fa30004	lw	r3,4(r29)
 1097  00001c40  8fa40008	lw	r4,8(r29)
 1098  00001c44  8fdffff8	lw	r31,-8(r30)
 1099  00001c48  001ee820	add	r29,r0,r30
 1100  00001c4c  8fdefffc	lw	r30,-4(r30)
 1101  00001c50  4be00000	jr	r31
 1102  00001c54  54000000	nop
 1103  00001c58          	.endproc _bcopy
 1104  00001c58          	.align 2
 1105  00001c58          	.proc _bzero
 1106  00001c58          	.global _bzero
 1107  00001c58          	_bzero:
 1108                      ;  Function 'bzero'; 0 bytes of locals, 2 regs to save.
 1109  00001c58  afbefffc	sw	-4(r29),r30; push fp
 1110  00001c5c  001df020	add	r30,r0,r29; fp = sp
 1111  00001c60  afbffff8	sw	-8(r29),r31; push ret addr
 1112  00001c64  2fbd0010	subui	r29,r29,#16; alloc local storage
 1113  00001c68  afa20000	sw	0(r29),r2
 1114  00001c6c  afa30004	sw	4(r29),r3
 1115  00001c70  8fc20000	lw	r2,(r30)
 1116  00001c74  8fdf0004	lw	r31,4(r30)
 1117  00001c78  08000010	j	L270_LF2
 1118  00001c7c  54000000	nop; not filled.
 1119  00001c80          	L268_LF2:
 1120  00001c80  20030000	addi	r3,r0,(#0x0)&0xff
 1121  00001c84  a0430000	sb	(r2),r3
 1122  00001c88  20420001	addi	r2,r2,#1
 1123  00001c8c          	L270_LF2:
 1124  00001c8c  001f0820	add	r1,r0,r31
 1125  00001c90  23ffffff	addi	r31,r31,#-1
 1126  00001c94  6c210000	sgti	r1,r1,#0
 1127  00001c98  1420ffe4	bnez	r1,L268_LF2
 1128  00001c9c  54000000	nop; not filled.
 1129  00001ca0  8fa20000	lw	r2,0(r29)
 1130  00001ca4  8fa30004	lw	r3,4(r29)
 1131  00001ca8  8fdffff8	lw	r31,-8(r30)
 1132  00001cac  001ee820	add	r29,r0,r30
 1133  00001cb0  8fdefffc	lw	r30,-4(r30)
 1134  00001cb4  4be00000	jr	r31
 1135  00001cb8  54000000	nop
 1136  00001cbc          	.endproc _bzero
 1137                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1138                      ;;;
 1139                      ;;; Most of the traps are called in files from libtraps.
 1142  00001cbc          	.align 2
 1143  00001cbc          	.proc _exit
 1144  00001cbc          	.global _exit
 1145  00001cbc          	_exit:
 1146  00001cbc  44000300	trap	#0x300
 1147  00001cc0  4be00000	jr	r31
 1148  00001cc4  54000000	nop
 1149  00001cc8          	.endproc _exit
 1151                      ; for the benefit of gcc.
 1152  00001cc8          	.proc ___main
 1153  00001cc8          	.global ___main
 1154  00001cc8          	___main:
 1155  00001cc8  4be00000	jr	r31
 1156  00001ccc  54000000	nop
 1157  00001cd0          	.endproc ___main
 1158  00001cd0          	.text
 1159  00001cd0          	.global _etext
 1160  00001cd0          	_etext:
 1161  00001cd0          	.align 3
 1162  00001cd0          	.data
 1163  000020ee          	.global _edata
 1164  000020ee          	_edata:
