 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 20480
    3                      ; Data size: 59
    4                      ; Text size: 3420
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x2000
    8                      ; Compiled by GCC
   10  00002000          	.align 2
   11  00002000          	LC0_LF0:
   12  00002000  75736572	.ascii "userprog.dlx.obj\000"
   12  00002004  70726f67	
   12  00002008  2e646c78	
   12  0000200c  2e6f626a	
   12  00002010  00      	
   13  00002011          	.align 2
   14  00002014          	LC1_LF0:
   15  00002014  25632564	.ascii "%c%d\n\000"
   15  00002018  0a00    	
   16  0000201a          	.align 2
   17  0000201c          	LC2_LF0:
   18  0000201c  55736167	.ascii "Usage: \000"
   18  00002020  653a2000	
   19  00002024          	.align 2
   20  00002024          	LC3_LF0:
   21  00002024  206e756d	.ascii " number\n\000"
   21  00002028  6265720a	
   21  0000202c  00      	
   22  0000202d          	.align 2
   23  00002030          	LC4_LF0:
   24  00002030  61726763	.ascii "argc = %d\n\000"
   24  00002034  203d2025	
   24  00002038  640a00  	
   25  0000203b          	.text
   26  00001000          	.align 2
   27  00001000          	.proc _main
   28  00001000          	.global _main
   29  00001000          	_main:
   30                      ;  Function 'main'; 32 bytes of locals, 0 regs to save.
   31  00001000  afbefffc	sw	-4(r29),r30; push fp
   32  00001004  001df020	add	r30,r0,r29; fp = sp
   33  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   34  0000100c  2fbd0028	subui	r29,r29,#40; alloc local storage
   35  00001010  8fc20000	lw	r2,(r30)
   36  00001014  8fc30004	lw	r3,4(r30)
   37  00001018  0c000d38	jal	___main
   38  0000101c  54000000	nop; not filled.
   39  00001020  60410002	seqi	r1,r2,#2
   40  00001024  14200018	bnez	r1,L3_LF0
   41  00001028  54000000	nop; not filled.
   42  0000102c  60410003	seqi	r1,r2,#3
   43  00001030  102001a0	beqz	r1,L20_LF0
   44  00001034  54000000	nop; not filled.
   45  00001038  080000cc	j	L9_LF0
   46  0000103c  54000000	nop; not filled.
   47  00001040          	L3_LF0:
   48  00001040  23bdfff0	addi	r29,r29,#-16
   49  00001044  8c630004	lw	r3,4(r3)
   50  00001048  afa30000	sw	(r29),r3
   51  0000104c  20060000	addi	r6,r0,#0
   52  00001050  afa60004	sw	4(r29),r6
   53  00001054  2006000a	addi	r6,r0,#10
   54  00001058  afa60008	sw	8(r29),r6
   55  0000105c  0c000a08	jal	_dstrtol
   56  00001060  54000000	nop; not filled.
   57  00001064  00012820	add	r5,r0,r1
   58  00001068  20060001	addi	r6,r0,#1
   59  0000106c  afa60000	sw	(r29),r6
   60  00001070  0c000248	jal	_sem_create
   61  00001074  54000000	nop; not filled.
   62  00001078  afa10000	sw	(r29),r1
   63  0000107c  23c4ffd8	addi	r4,r30,#-40
   64  00001080  afa40004	sw	4(r29),r4
   65  00001084  0c0008d4	jal	_ditoa
   66  00001088  54000000	nop; not filled.
   67  0000108c  20030000	addi	r3,r0,#0
   68  00001090  23bd0010	addi	r29,r29,#16
   69  00001094  0065082a	slt	r1,r3,r5
   70  00001098  10200194	beqz	r1,L2_LF0
   71  0000109c  54000000	nop; not filled.
   72  000010a0  23c2ffe8	addi	r2,r30,#-24
   73  000010a4          	L7_LF0:
   74  000010a4  23bdfff8	addi	r29,r29,#-8
   75  000010a8  afa30000	sw	(r29),r3
   76  000010ac  afa20004	sw	4(r29),r2
   77  000010b0  0c0008a8	jal	_ditoa
   78  000010b4  54000000	nop; not filled.
   79  000010b8  23bdfff0	addi	r29,r29,#-16
   80  000010bc  afa30000	sw	(r29),r3
   81  000010c0  20060000	addi	r6,r0,#0
   82  000010c4  afa60004	sw	4(r29),r6
   83  000010c8  3c060000	lhi	r6,((LC0_LF0)>>16)&0xffff
   84  000010cc  24c62000	addui	r6,r6,(LC0_LF0)&0xffff
   85  000010d0  afa60008	sw	8(r29),r6
   86  000010d4  afa2000c	sw	12(r29),r2
   87  000010d8  afa40010	sw	16(r29),r4
   88  000010dc  20060000	addi	r6,r0,#0
   89  000010e0  afa60014	sw	20(r29),r6
   90  000010e4  0c0001b0	jal	_process_create
   91  000010e8  54000000	nop; not filled.
   92  000010ec  23bd0018	addi	r29,r29,#24
   93  000010f0  20630001	addi	r3,r3,#1
   94  000010f4  0065082a	slt	r1,r3,r5
   95  000010f8  10200134	beqz	r1,L2_LF0
   96  000010fc  54000000	nop; not filled.
   97  00001100  0bffffa0	j	L7_LF0
   98  00001104  54000000	nop; not filled.
   99  00001108          	L9_LF0:
  100  00001108  23bdfff0	addi	r29,r29,#-16
  101  0000110c  8c660004	lw	r6,4(r3)
  102  00001110  afa60000	sw	(r29),r6
  103  00001114  20060000	addi	r6,r0,#0
  104  00001118  afa60004	sw	4(r29),r6
  105  0000111c  2006000a	addi	r6,r0,#10
  106  00001120  afa60008	sw	8(r29),r6
  107  00001124  0c000940	jal	_dstrtol
  108  00001128  54000000	nop; not filled.
  109  0000112c  00011020	add	r2,r0,r1
  110  00001130  8c630008	lw	r3,8(r3)
  111  00001134  afa30000	sw	(r29),r3
  112  00001138  20060000	addi	r6,r0,#0
  113  0000113c  afa60004	sw	4(r29),r6
  114  00001140  2006000a	addi	r6,r0,#10
  115  00001144  afa60008	sw	8(r29),r6
  116  00001148  0c00091c	jal	_dstrtol
  117  0000114c  54000000	nop; not filled.
  118  00001150  00012020	add	r4,r0,r1
  119  00001154  20030000	addi	r3,r0,#0
  120  00001158  23bd0010	addi	r29,r29,#16
  121  0000115c  2405c34f	addui	r5,r0,#49999
  122  00001160  20420041	addi	r2,r2,#65
  123  00001164          	L13_LF0:
  124  00001164  23bdfff8	addi	r29,r29,#-8
  125  00001168  afa40000	sw	(r29),r4
  126  0000116c  0c000158	jal	_sem_wait
  127  00001170  54000000	nop; not filled.
  128  00001174  201f0000	addi	r31,r0,#0
  129  00001178  23bd0008	addi	r29,r29,#8
  130  0000117c          	L16_LF0:
  131  0000117c  23ff0001	addi	r31,r31,#1
  132  00001180  03e5082c	sle	r1,r31,r5
  133  00001184  1420fff4	bnez	r1,L16_LF0
  134  00001188  54000000	nop; not filled.
  135  0000118c  23bdfff0	addi	r29,r29,#-16
  136  00001190  3c060000	lhi	r6,((LC1_LF0)>>16)&0xffff
  137  00001194  24c62014	addui	r6,r6,(LC1_LF0)&0xffff
  138  00001198  afa60000	sw	(r29),r6
  139  0000119c  afa20004	sw	4(r29),r2
  140  000011a0  afa30008	sw	8(r29),r3
  141  000011a4  0c0000d8	jal	_Printf
  142  000011a8  54000000	nop; not filled.
  143  000011ac  afa40000	sw	(r29),r4
  144  000011b0  0c000120	jal	_sem_signal
  145  000011b4  54000000	nop; not filled.
  146  000011b8  23bd0010	addi	r29,r29,#16
  147  000011bc  20630001	addi	r3,r3,#1
  148  000011c0  70610063	slei	r1,r3,#99
  149  000011c4  10200068	beqz	r1,L2_LF0
  150  000011c8  54000000	nop; not filled.
  151  000011cc  0bffff94	j	L13_LF0
  152  000011d0  54000000	nop; not filled.
  153  000011d4          	L20_LF0:
  154  000011d4  23bdfff8	addi	r29,r29,#-8
  155  000011d8  3c060000	lhi	r6,((LC2_LF0)>>16)&0xffff
  156  000011dc  24c6201c	addui	r6,r6,(LC2_LF0)&0xffff
  157  000011e0  afa60000	sw	(r29),r6
  158  000011e4  0c000098	jal	_Printf
  159  000011e8  54000000	nop; not filled.
  160  000011ec  8c630000	lw	r3,(r3)
  161  000011f0  afa30000	sw	(r29),r3
  162  000011f4  0c000088	jal	_Printf
  163  000011f8  54000000	nop; not filled.
  164  000011fc  3c060000	lhi	r6,((LC3_LF0)>>16)&0xffff
  165  00001200  24c62024	addui	r6,r6,(LC3_LF0)&0xffff
  166  00001204  afa60000	sw	(r29),r6
  167  00001208  0c000074	jal	_Printf
  168  0000120c  54000000	nop; not filled.
  169  00001210  3c060000	lhi	r6,((LC4_LF0)>>16)&0xffff
  170  00001214  24c62030	addui	r6,r6,(LC4_LF0)&0xffff
  171  00001218  afa60000	sw	(r29),r6
  172  0000121c  afa20004	sw	4(r29),r2
  173  00001220  0c00005c	jal	_Printf
  174  00001224  54000000	nop; not filled.
  175  00001228  0c000b1c	jal	_exit
  176  0000122c  54000000	nop; not filled.
  177  00001230          	L2_LF0:
  178  00001230  0c000b14	jal	_exit
  179  00001234  54000000	nop
  180  00001238          	.endproc _main
  181                      ;;;
  182                      ;;; Stub functions for DLX traps.
  183                      ;;;
  184                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  185                      ;;;
  186                      ;;; The traps such as Open and Close
  187                      ;;; (note the capital letters) are for use by user programs.  The traps
  188                      ;;; with names such as open and close (lower case) are for use by the OS.
  189                      ;;;
  192  00001238          	.align 2
  194                      ;;; The following are the traps to be used by user-level programs
  195                      ;;;
  197  00001238          	.align 2
  198  00001238          	.proc _Open
  199  00001238          	.global _Open
  200  00001238          	_Open:
  201                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  202                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  203                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  204  00001238  44000213	trap	#0x213
  205  0000123c  4be00000	jr	r31
  206  00001240  54000000	nop
  207  00001244          	.endproc _Open
  209  00001244          	.proc _Close
  210  00001244          	.global _Close
  211  00001244          	_Close:
  212  00001244  44000214	trap	#0x214
  213  00001248  4be00000	jr	r31
  214  0000124c  54000000	nop
  215  00001250          	.endproc _Close
  217  00001250          	.proc _Read
  218  00001250          	.global _Read
  219  00001250          	_Read:
  220  00001250  44000210	trap	#0x210
  221  00001254  4be00000	jr	r31
  222  00001258  54000000	nop
  223  0000125c          	.endproc _Read
  225  0000125c          	.proc _Write
  226  0000125c          	.global _Write
  227  0000125c          	_Write:
  228  0000125c  44000211	trap	#0x211
  229  00001260  4be00000	jr	r31
  230  00001264  54000000	nop
  231  00001268          	.endproc _Write
  233  00001268          	.proc _Lseek
  234  00001268          	.global _Lseek
  235  00001268          	_Lseek:
  236  00001268  44000212	trap	#0x212
  237  0000126c  4be00000	jr	r31
  238  00001270  54000000	nop
  239  00001274          	.endproc _Lseek
  241  00001274          	.proc _Putchar
  242  00001274          	.global _Putchar
  243  00001274          	_Putchar:
  244  00001274  44000280	trap	#0x280
  245  00001278  4be00000	jr	r31
  246  0000127c  54000000	nop
  247  00001280          	.endproc _Putchar
  249  00001280          	.proc _Printf
  250  00001280          	.global _Printf
  251  00001280          	_Printf:
  252  00001280  44000201	trap	#0x201
  253  00001284  4be00000	jr	r31
  254  00001288  54000000	nop
  255  0000128c          	.endproc _Printf
  257  0000128c          	.proc _getpid
  258  0000128c          	.global _getpid
  259  0000128c          	_getpid:
  260  0000128c  44000431	trap	#0x431
  261  00001290  4be00000	jr	r31
  262  00001294  54000000	nop
  263  00001298          	.endproc _getpid
  266  00001298          	.proc _process_create
  267  00001298          	.global _process_create
  268  00001298          	_process_create:
  269  00001298  44000432	trap	#0x432
  270  0000129c  4be00000	jr	r31
  271  000012a0  54000000	nop
  272  000012a4          	.endproc _process_create
  274  000012a4          	.proc _shmget
  275  000012a4          	.global _shmget
  276  000012a4          	_shmget:
  277  000012a4  44000440	trap	#0x440
  278  000012a8  4be00000	jr	r31
  279  000012ac  54000000	nop
  280  000012b0          	.endproc _shmget
  282  000012b0          	.proc _shmat
  283  000012b0          	.global _shmat
  284  000012b0          	_shmat:
  285  000012b0  44000441	trap	#0x441
  286  000012b4  4be00000	jr	r31
  287  000012b8  54000000	nop
  288  000012bc          	.endproc _shmat
  290  000012bc          	.proc _sem_create
  291  000012bc          	.global _sem_create
  292  000012bc          	_sem_create:
  293  000012bc  44000450	trap	#0x450
  294  000012c0  4be00000	jr	r31
  295  000012c4  54000000	nop
  296  000012c8          	.endproc _sem_create
  298  000012c8          	.proc _sem_wait
  299  000012c8          	.global _sem_wait
  300  000012c8          	_sem_wait:
  301  000012c8  44000451	trap	#0x451
  302  000012cc  4be00000	jr	r31
  303  000012d0  54000000	nop
  304  000012d4          	.endproc _sem_wait
  306  000012d4          	.proc _sem_signal
  307  000012d4          	.global _sem_signal
  308  000012d4          	_sem_signal:
  309  000012d4  44000452	trap	#0x452
  310  000012d8  4be00000	jr	r31
  311  000012dc  54000000	nop
  312  000012e0          	.endproc _sem_signal
  314  000012e0          	.proc _lock_create
  315  000012e0          	.global _lock_create
  316  000012e0          	_lock_create:
  317  000012e0  44000453	trap	#0x453
  318  000012e4  4be00000	jr	r31
  319  000012e8  54000000	nop
  320  000012ec          	.endproc _lock_create
  322  000012ec          	.proc _lock_acquire
  323  000012ec          	.global _lock_acquire
  324  000012ec          	_lock_acquire:
  325  000012ec  44000454	trap	#0x454
  326  000012f0  4be00000	jr	r31
  327  000012f4  54000000	nop
  328  000012f8          	.endproc _lock_acquire
  330  000012f8          	.proc _lock_release
  331  000012f8          	.global _lock_release
  332  000012f8          	_lock_release:
  333  000012f8  44000455	trap	#0x455
  334  000012fc  4be00000	jr	r31
  335  00001300  54000000	nop
  336  00001304          	.endproc _lock_release
  338  00001304          	.proc _cond_create
  339  00001304          	.global _cond_create
  340  00001304          	_cond_create:
  341  00001304  44000456	trap	#0x456
  342  00001308  4be00000	jr	r31
  343  0000130c  54000000	nop
  344  00001310          	.endproc _cond_create
  346  00001310          	.proc _cond_wait
  347  00001310          	.global _cond_wait
  348  00001310          	_cond_wait:
  349  00001310  44000457	trap	#0x457
  350  00001314  4be00000	jr	r31
  351  00001318  54000000	nop
  352  0000131c          	.endproc _cond_wait
  354  0000131c          	.proc _cond_signal
  355  0000131c          	.global _cond_signal
  356  0000131c          	_cond_signal:
  357  0000131c  44000458	trap	#0x458
  358  00001320  4be00000	jr	r31
  359  00001324  54000000	nop
  360  00001328          	.endproc _cond_signal
  362  00001328          	.proc _cond_broadcast
  363  00001328          	.global _cond_broadcast
  364  00001328          	_cond_broadcast:
  365  00001328  44000455	trap	#0x455
  366  0000132c  4be00000	jr	r31
  367  00001330  54000000	nop
  368  00001334          	.endproc _cond_broadcast
  370  00001334          	.proc _TimerGet
  371  00001334          	.global _TimerGet
  372  00001334          	_TimerGet:
  373  00001334  44000050	trap	#0x50
  374  00001338  4be00000	jr	r31
  375  0000133c  54000000	nop
  376  00001340          	.endproc _TimerGet
  378  00001340          	.proc _yield
  379  00001340          	.global _yield
  380  00001340          	_yield:
  381  00001340  44000433	trap	#0x433
  382  00001344  4be00000	jr	r31
  383  00001348  54000000	nop
  384  0000134c          	.endproc _yield
  385                      ; Compiled by GCC
  387  0000134c          	.align 2
  388  0000134c          	.proc _isspace
  389  0000134c          	.global _isspace
  390  0000134c          	_isspace:
  391                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
  392  0000134c  afbefffc	sw	-4(r29),r30; push fp
  393  00001350  001df020	add	r30,r0,r29; fp = sp
  394  00001354  afbffff8	sw	-8(r29),r31; push ret addr
  395  00001358  2fbd0010	subui	r29,r29,#16; alloc local storage
  396  0000135c  afa20000	sw	0(r29),r2
  397  00001360  83c20003	lb	r2,3(r30)
  398  00001364  201f0000	addi	r31,r0,#0
  399  00001368  304100ff	andi	r1,r2,#0x00ff
  400  0000136c  60210020	seqi	r1,r1,#32
  401  00001370  14200018	bnez	r1,L6_LF2
  402  00001374  54000000	nop; not filled.
  403  00001378  2041fff7	addi	r1,r2,#-9
  404  0000137c  302100ff	andi	r1,r1,#0x00ff
  405  00001380  70210001	sleui	r1,r1,#1
  406  00001384  10200008	beqz	r1,L5_LF2
  407  00001388  54000000	nop; not filled.
  408  0000138c          	L6_LF2:
  409  0000138c  201f0001	addi	r31,r0,#1
  410  00001390          	L5_LF2:
  411  00001390  001f0820	add	r1,r0,r31
  412  00001394  8fa20000	lw	r2,0(r29)
  413  00001398  8fdffff8	lw	r31,-8(r30)
  414  0000139c  001ee820	add	r29,r0,r30
  415  000013a0  8fdefffc	lw	r30,-4(r30)
  416  000013a4  4be00000	jr	r31
  417  000013a8  54000000	nop
  418  000013ac          	.endproc _isspace
  419  000013ac          	.align 2
  420  000013ac          	.proc _isxdigit
  421  000013ac          	.global _isxdigit
  422  000013ac          	_isxdigit:
  423                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
  424  000013ac  afbefffc	sw	-4(r29),r30; push fp
  425  000013b0  001df020	add	r30,r0,r29; fp = sp
  426  000013b4  afbffff8	sw	-8(r29),r31; push ret addr
  427  000013b8  2fbd0010	subui	r29,r29,#16; alloc local storage
  428  000013bc  afa20000	sw	0(r29),r2
  429  000013c0  83df0003	lb	r31,3(r30)
  430  000013c4  20020000	addi	r2,r0,#0
  431  000013c8  23e1ffd0	addi	r1,r31,#-48
  432  000013cc  302100ff	andi	r1,r1,#0x00ff
  433  000013d0  70210009	sleui	r1,r1,#9
  434  000013d4  14200028	bnez	r1,L12_LF2
  435  000013d8  54000000	nop; not filled.
  436  000013dc  23e1ff9f	addi	r1,r31,#-97
  437  000013e0  302100ff	andi	r1,r1,#0x00ff
  438  000013e4  70210005	sleui	r1,r1,#5
  439  000013e8  14200014	bnez	r1,L12_LF2
  440  000013ec  54000000	nop; not filled.
  441  000013f0  33e100ff	andi	r1,r31,#0x00ff
  442  000013f4  64210041	snei	r1,r1,#65
  443  000013f8  14200008	bnez	r1,L11_LF2
  444  000013fc  54000000	nop; not filled.
  445  00001400          	L12_LF2:
  446  00001400  20020001	addi	r2,r0,#1
  447  00001404          	L11_LF2:
  448  00001404  00020820	add	r1,r0,r2
  449  00001408  8fa20000	lw	r2,0(r29)
  450  0000140c  8fdffff8	lw	r31,-8(r30)
  451  00001410  001ee820	add	r29,r0,r30
  452  00001414  8fdefffc	lw	r30,-4(r30)
  453  00001418  4be00000	jr	r31
  454  0000141c  54000000	nop
  455  00001420          	.endproc _isxdigit
  456  00001420          	.align 2
  457  00001420          	.proc _dstrcpy
  458  00001420          	.global _dstrcpy
  459  00001420          	_dstrcpy:
  460                      ;  Function 'dstrcpy'; 0 bytes of locals, 2 regs to save.
  461  00001420  afbefffc	sw	-4(r29),r30; push fp
  462  00001424  001df020	add	r30,r0,r29; fp = sp
  463  00001428  afbffff8	sw	-8(r29),r31; push ret addr
  464  0000142c  2fbd0010	subui	r29,r29,#16; alloc local storage
  465  00001430  afa20000	sw	0(r29),r2
  466  00001434  afa30004	sw	4(r29),r3
  467  00001438  8fdf0000	lw	r31,(r30)
  468  0000143c  8fc20004	lw	r2,4(r30)
  469  00001440  001f1820	add	r3,r0,r31
  470  00001444          	L19_LF2:
  471  00001444  80410000	lb	r1,(r2)
  472  00001448  a3e10000	sb	(r31),r1
  473  0000144c  20420001	addi	r2,r2,#1
  474  00001450  23ff0001	addi	r31,r31,#1
  475  00001454  302100ff	andi	r1,r1,#0x00ff
  476  00001458  64210000	snei	r1,r1,#0
  477  0000145c  1420ffe4	bnez	r1,L19_LF2
  478  00001460  54000000	nop; not filled.
  479  00001464  00030820	add	r1,r0,r3
  480  00001468  8fa20000	lw	r2,0(r29)
  481  0000146c  8fa30004	lw	r3,4(r29)
  482  00001470  8fdffff8	lw	r31,-8(r30)
  483  00001474  001ee820	add	r29,r0,r30
  484  00001478  8fdefffc	lw	r30,-4(r30)
  485  0000147c  4be00000	jr	r31
  486  00001480  54000000	nop
  487  00001484          	.endproc _dstrcpy
  488  00001484          	.align 2
  489  00001484          	.proc _dstrncpy
  490  00001484          	.global _dstrncpy
  491  00001484          	_dstrncpy:
  492                      ;  Function 'dstrncpy'; 0 bytes of locals, 3 regs to save.
  493  00001484  afbefffc	sw	-4(r29),r30; push fp
  494  00001488  001df020	add	r30,r0,r29; fp = sp
  495  0000148c  afbffff8	sw	-8(r29),r31; push ret addr
  496  00001490  2fbd0018	subui	r29,r29,#24; alloc local storage
  497  00001494  afa20000	sw	0(r29),r2
  498  00001498  afa30004	sw	4(r29),r3
  499  0000149c  afa40008	sw	8(r29),r4
  500  000014a0  8fc20000	lw	r2,(r30)
  501  000014a4  8fc30004	lw	r3,4(r30)
  502  000014a8  8fdf0008	lw	r31,8(r30)
  503  000014ac  00022020	add	r4,r0,r2
  504  000014b0  08000024	j	L37_LF2
  505  000014b4  54000000	nop; not filled.
  506  000014b8          	L34_LF2:
  507  000014b8  80610000	lb	r1,(r3)
  508  000014bc  a0410000	sb	(r2),r1
  509  000014c0  20630001	addi	r3,r3,#1
  510  000014c4  20420001	addi	r2,r2,#1
  511  000014c8  302100ff	andi	r1,r1,#0x00ff
  512  000014cc  64210000	snei	r1,r1,#0
  513  000014d0  10200018	beqz	r1,L32_LF2
  514  000014d4  54000000	nop; not filled.
  515  000014d8          	L37_LF2:
  516  000014d8  001f0820	add	r1,r0,r31
  517  000014dc  23ffffff	addi	r31,r31,#-1
  518  000014e0  70210000	slei	r1,r1,#0
  519  000014e4  1020ffd0	beqz	r1,L34_LF2
  520  000014e8  54000000	nop; not filled.
  521  000014ec          	L32_LF2:
  522  000014ec  00040820	add	r1,r0,r4
  523  000014f0  8fa20000	lw	r2,0(r29)
  524  000014f4  8fa30004	lw	r3,4(r29)
  525  000014f8  8fa40008	lw	r4,8(r29)
  526  000014fc  8fdffff8	lw	r31,-8(r30)
  527  00001500  001ee820	add	r29,r0,r30
  528  00001504  8fdefffc	lw	r30,-4(r30)
  529  00001508  4be00000	jr	r31
  530  0000150c  54000000	nop
  531  00001510          	.endproc _dstrncpy
  532  00001510          	.align 2
  533  00001510          	.proc _dstrcat
  534  00001510          	.global _dstrcat
  535  00001510          	_dstrcat:
  536                      ;  Function 'dstrcat'; 0 bytes of locals, 2 regs to save.
  537  00001510  afbefffc	sw	-4(r29),r30; push fp
  538  00001514  001df020	add	r30,r0,r29; fp = sp
  539  00001518  afbffff8	sw	-8(r29),r31; push ret addr
  540  0000151c  2fbd0010	subui	r29,r29,#16; alloc local storage
  541  00001520  afa20000	sw	0(r29),r2
  542  00001524  afa30004	sw	4(r29),r3
  543  00001528  8fdf0000	lw	r31,(r30)
  544  0000152c  001f1820	add	r3,r0,r31
  545  00001530  90610000	lbu	r1,(r3)
  546  00001534  64210000	snei	r1,r1,#0
  547  00001538  10200018	beqz	r1,L50_LF2
  548  0000153c  54000000	nop; not filled.
  549  00001540          	L51_LF2:
  550  00001540  23ff0001	addi	r31,r31,#1
  551  00001544  93e10000	lbu	r1,(r31)
  552  00001548  64210000	snei	r1,r1,#0
  553  0000154c  1420fff0	bnez	r1,L51_LF2
  554  00001550  54000000	nop; not filled.
  555  00001554          	L50_LF2:
  556  00001554  001f1020	add	r2,r0,r31
  557  00001558  8fdf0004	lw	r31,4(r30)
  558  0000155c          	L54_LF2:
  559  0000155c  83e10000	lb	r1,(r31)
  560  00001560  a0410000	sb	(r2),r1
  561  00001564  23ff0001	addi	r31,r31,#1
  562  00001568  20420001	addi	r2,r2,#1
  563  0000156c  302100ff	andi	r1,r1,#0x00ff
  564  00001570  64210000	snei	r1,r1,#0
  565  00001574  1420ffe4	bnez	r1,L54_LF2
  566  00001578  54000000	nop; not filled.
  567  0000157c  00030820	add	r1,r0,r3
  568  00001580  8fa20000	lw	r2,0(r29)
  569  00001584  8fa30004	lw	r3,4(r29)
  570  00001588  8fdffff8	lw	r31,-8(r30)
  571  0000158c  001ee820	add	r29,r0,r30
  572  00001590  8fdefffc	lw	r30,-4(r30)
  573  00001594  4be00000	jr	r31
  574  00001598  54000000	nop
  575  0000159c          	.endproc _dstrcat
  576  0000159c          	.align 2
  577  0000159c          	.proc _dstrncmp
  578  0000159c          	.global _dstrncmp
  579  0000159c          	_dstrncmp:
  580                      ;  Function 'dstrncmp'; 0 bytes of locals, 4 regs to save.
  581  0000159c  afbefffc	sw	-4(r29),r30; push fp
  582  000015a0  001df020	add	r30,r0,r29; fp = sp
  583  000015a4  afbffff8	sw	-8(r29),r31; push ret addr
  584  000015a8  2fbd0018	subui	r29,r29,#24; alloc local storage
  585  000015ac  afa20000	sw	0(r29),r2
  586  000015b0  afa30004	sw	4(r29),r3
  587  000015b4  afa40008	sw	8(r29),r4
  588  000015b8  afa5000c	sw	12(r29),r5
  589  000015bc  8fc30000	lw	r3,(r30)
  590  000015c0  8fc40004	lw	r4,4(r30)
  591  000015c4  8fc50008	lw	r5,8(r30)
  592  000015c8  20020000	addi	r2,r0,#0
  593  000015cc  0045082a	slt	r1,r2,r5
  594  000015d0  1020003c	beqz	r1,L73_LF2
  595  000015d4  54000000	nop; not filled.
  596  000015d8          	L75_LF2:
  597  000015d8  909f0000	lbu	r31,(r4)
  598  000015dc  67e10000	snei	r1,r31,#0
  599  000015e0  10200038	beqz	r1,L86_LF2
  600  000015e4  54000000	nop; not filled.
  601  000015e8  90610000	lbu	r1,(r3)
  602  000015ec  003f0829	sne	r1,r1,r31
  603  000015f0  1420001c	bnez	r1,L73_LF2
  604  000015f4  54000000	nop; not filled.
  605  000015f8  20630001	addi	r3,r3,#1
  606  000015fc  20840001	addi	r4,r4,#1
  607  00001600  20420001	addi	r2,r2,#1
  608  00001604  0045082a	slt	r1,r2,r5
  609  00001608  1420ffcc	bnez	r1,L75_LF2
  610  0000160c  54000000	nop; not filled.
  611  00001610          	L73_LF2:
  612  00001610  00450828	seq	r1,r2,r5
  613  00001614  10200010	beqz	r1,L80_LF2
  614  00001618  54000000	nop; not filled.
  615  0000161c          	L86_LF2:
  616  0000161c  20010000	addi	r1,r0,#0
  617  00001620  08000028	j	L84_LF2
  618  00001624  54000000	nop; not filled.
  619  00001628          	L80_LF2:
  620  00001628  907f0000	lbu	r31,(r3)
  621  0000162c  90830000	lbu	r3,(r4)
  622  00001630  03e30822	sub	r1,r31,r3
  623  00001634  74210000	sgei	r1,r1,#0
  624  00001638  2002ffff	addi	r2,r0,#-1
  625  0000163c  10200008	beqz	r1,L82_LF2
  626  00001640  54000000	nop; not filled.
  627  00001644  03e31029	sne	r2,r31,r3
  628  00001648          	L82_LF2:
  629  00001648  00020820	add	r1,r0,r2
  630  0000164c          	L84_LF2:
  631  0000164c  8fa20000	lw	r2,0(r29)
  632  00001650  8fa30004	lw	r3,4(r29)
  633  00001654  8fa40008	lw	r4,8(r29)
  634  00001658  8fa5000c	lw	r5,12(r29)
  635  0000165c  8fdffff8	lw	r31,-8(r30)
  636  00001660  001ee820	add	r29,r0,r30
  637  00001664  8fdefffc	lw	r30,-4(r30)
  638  00001668  4be00000	jr	r31
  639  0000166c  54000000	nop
  640  00001670          	.endproc _dstrncmp
  641  00001670          	.align 2
  642  00001670          	.proc _dstrlen
  643  00001670          	.global _dstrlen
  644  00001670          	_dstrlen:
  645                      ;  Function 'dstrlen'; 0 bytes of locals, 1 regs to save.
  646  00001670  afbefffc	sw	-4(r29),r30; push fp
  647  00001674  001df020	add	r30,r0,r29; fp = sp
  648  00001678  afbffff8	sw	-8(r29),r31; push ret addr
  649  0000167c  2fbd0010	subui	r29,r29,#16; alloc local storage
  650  00001680  afa20000	sw	0(r29),r2
  651  00001684  8fdf0000	lw	r31,(r30)
  652  00001688  20020000	addi	r2,r0,#0
  653  0000168c  08000008	j	L97_LF2
  654  00001690  54000000	nop; not filled.
  655  00001694          	L95_LF2:
  656  00001694  20420001	addi	r2,r2,#1
  657  00001698          	L97_LF2:
  658  00001698  93e10000	lbu	r1,(r31)
  659  0000169c  23ff0001	addi	r31,r31,#1
  660  000016a0  64210000	snei	r1,r1,#0
  661  000016a4  1420ffec	bnez	r1,L95_LF2
  662  000016a8  54000000	nop; not filled.
  663  000016ac  00020820	add	r1,r0,r2
  664  000016b0  8fa20000	lw	r2,0(r29)
  665  000016b4  8fdffff8	lw	r31,-8(r30)
  666  000016b8  001ee820	add	r29,r0,r30
  667  000016bc  8fdefffc	lw	r30,-4(r30)
  668  000016c0  4be00000	jr	r31
  669  000016c4  54000000	nop
  670  000016c8          	.endproc _dstrlen
  671  000016c8          	.align 2
  672  000016c8          	.proc _dstrstr
  673  000016c8          	.global _dstrstr
  674  000016c8          	_dstrstr:
  675                      ;  Function 'dstrstr'; 0 bytes of locals, 6 regs to save.
  676  000016c8  afbefffc	sw	-4(r29),r30; push fp
  677  000016cc  001df020	add	r30,r0,r29; fp = sp
  678  000016d0  afbffff8	sw	-8(r29),r31; push ret addr
  679  000016d4  2fbd0020	subui	r29,r29,#32; alloc local storage
  680  000016d8  afa20000	sw	0(r29),r2
  681  000016dc  afa30004	sw	4(r29),r3
  682  000016e0  afa40008	sw	8(r29),r4
  683  000016e4  afa5000c	sw	12(r29),r5
  684  000016e8  afa60010	sw	16(r29),r6
  685  000016ec  afa70014	sw	20(r29),r7
  686  000016f0  8fc50000	lw	r5,(r30)
  687  000016f4  8fc70004	lw	r7,4(r30)
  688  000016f8  20030000	addi	r3,r0,#0
  689  000016fc  90e10000	lbu	r1,(r7)
  690  00001700  20e20001	addi	r2,r7,#1
  691  00001704  64210000	snei	r1,r1,#0
  692  00001708  1020001c	beqz	r1,L125_LF2
  693  0000170c  54000000	nop; not filled.
  694  00001710          	L126_LF2:
  695  00001710  20630001	addi	r3,r3,#1
  696  00001714  90410000	lbu	r1,(r2)
  697  00001718  20420001	addi	r2,r2,#1
  698  0000171c  64210000	snei	r1,r1,#0
  699  00001720  1420ffec	bnez	r1,L126_LF2
  700  00001724  54000000	nop; not filled.
  701  00001728          	L125_LF2:
  702  00001728  00033020	add	r6,r0,r3
  703  0000172c  080000ac	j	L149_LF2
  704  00001730  54000000	nop; not filled.
  705  00001734          	L130_LF2:
  706  00001734  00051820	add	r3,r0,r5
  707  00001738  00072020	add	r4,r0,r7
  708  0000173c  20020000	addi	r2,r0,#0
  709  00001740  0046082a	slt	r1,r2,r6
  710  00001744  1020003c	beqz	r1,L134_LF2
  711  00001748  54000000	nop; not filled.
  712  0000174c          	L136_LF2:
  713  0000174c  909f0000	lbu	r31,(r4)
  714  00001750  67e10000	snei	r1,r31,#0
  715  00001754  10200038	beqz	r1,L150_LF2
  716  00001758  54000000	nop; not filled.
  717  0000175c  90610000	lbu	r1,(r3)
  718  00001760  003f0829	sne	r1,r1,r31
  719  00001764  1420001c	bnez	r1,L134_LF2
  720  00001768  54000000	nop; not filled.
  721  0000176c  20630001	addi	r3,r3,#1
  722  00001770  20840001	addi	r4,r4,#1
  723  00001774  20420001	addi	r2,r2,#1
  724  00001778  0046082a	slt	r1,r2,r6
  725  0000177c  1420ffcc	bnez	r1,L136_LF2
  726  00001780  54000000	nop; not filled.
  727  00001784          	L134_LF2:
  728  00001784  00460828	seq	r1,r2,r6
  729  00001788  10200010	beqz	r1,L141_LF2
  730  0000178c  54000000	nop; not filled.
  731  00001790          	L150_LF2:
  732  00001790  20010000	addi	r1,r0,#0
  733  00001794  08000028	j	L132_LF2
  734  00001798  54000000	nop; not filled.
  735  0000179c          	L141_LF2:
  736  0000179c  90630000	lbu	r3,(r3)
  737  000017a0  90820000	lbu	r2,(r4)
  738  000017a4  00620822	sub	r1,r3,r2
  739  000017a8  74210000	sgei	r1,r1,#0
  740  000017ac  201fffff	addi	r31,r0,#-1
  741  000017b0  10200008	beqz	r1,L143_LF2
  742  000017b4  54000000	nop; not filled.
  743  000017b8  0062f829	sne	r31,r3,r2
  744  000017bc          	L143_LF2:
  745  000017bc  001f0820	add	r1,r0,r31
  746  000017c0          	L132_LF2:
  747  000017c0  64210000	snei	r1,r1,#0
  748  000017c4  14200010	bnez	r1,L131_LF2
  749  000017c8  54000000	nop; not filled.
  750  000017cc  00050820	add	r1,r0,r5
  751  000017d0  0800001c	j	L146_LF2
  752  000017d4  54000000	nop; not filled.
  753  000017d8          	L131_LF2:
  754  000017d8  20a50001	addi	r5,r5,#1
  755  000017dc          	L149_LF2:
  756  000017dc  90a10000	lbu	r1,(r5)
  757  000017e0  64210000	snei	r1,r1,#0
  758  000017e4  1420ff4c	bnez	r1,L130_LF2
  759  000017e8  54000000	nop; not filled.
  760  000017ec  20010000	addi	r1,r0,#0
  761  000017f0          	L146_LF2:
  762  000017f0  8fa20000	lw	r2,0(r29)
  763  000017f4  8fa30004	lw	r3,4(r29)
  764  000017f8  8fa40008	lw	r4,8(r29)
  765  000017fc  8fa5000c	lw	r5,12(r29)
  766  00001800  8fa60010	lw	r6,16(r29)
  767  00001804  8fa70014	lw	r7,20(r29)
  768  00001808  8fdffff8	lw	r31,-8(r30)
  769  0000180c  001ee820	add	r29,r0,r30
  770  00001810  8fdefffc	lw	r30,-4(r30)
  771  00001814  4be00000	jr	r31
  772  00001818  54000000	nop
  773  0000181c          	.endproc _dstrstr
  774  0000181c          	.align 2
  775  0000181c          	.proc _dmindex
  776  0000181c          	.global _dmindex
  777  0000181c          	_dmindex:
  778                      ;  Function 'dmindex'; 0 bytes of locals, 5 regs to save.
  779  0000181c  afbefffc	sw	-4(r29),r30; push fp
  780  00001820  001df020	add	r30,r0,r29; fp = sp
  781  00001824  afbffff8	sw	-8(r29),r31; push ret addr
  782  00001828  2fbd0020	subui	r29,r29,#32; alloc local storage
  783  0000182c  afa20000	sw	0(r29),r2
  784  00001830  afa30004	sw	4(r29),r3
  785  00001834  afa40008	sw	8(r29),r4
  786  00001838  afa5000c	sw	12(r29),r5
  787  0000183c  afa60010	sw	16(r29),r6
  788  00001840  8fc40000	lw	r4,(r30)
  789  00001844  8fc60004	lw	r6,4(r30)
  790  00001848  90810000	lbu	r1,(r4)
  791  0000184c  64210000	snei	r1,r1,#0
  792  00001850  10200060	beqz	r1,L164_LF2
  793  00001854  54000000	nop; not filled.
  794  00001858  00012820	add	r5,r0,r1
  795  0000185c          	L165_LF2:
  796  0000185c  00061020	add	r2,r0,r6
  797  00001860  80df0000	lb	r31,(r6)
  798  00001864  33e100ff	andi	r1,r31,#0x00ff
  799  00001868  64210000	snei	r1,r1,#0
  800  0000186c  1020003c	beqz	r1,L163_LF2
  801  00001870  54000000	nop; not filled.
  802  00001874  90830000	lbu	r3,(r4)
  803  00001878          	L169_LF2:
  804  00001878  33e100ff	andi	r1,r31,#0x00ff
  805  0000187c  00610828	seq	r1,r3,r1
  806  00001880  10200010	beqz	r1,L168_LF2
  807  00001884  54000000	nop; not filled.
  808  00001888  00040820	add	r1,r0,r4
  809  0000188c  08000028	j	L173_LF2
  810  00001890  54000000	nop; not filled.
  811  00001894          	L168_LF2:
  812  00001894  20420001	addi	r2,r2,#1
  813  00001898  805f0000	lb	r31,(r2)
  814  0000189c  33e100ff	andi	r1,r31,#0x00ff
  815  000018a0  64210000	snei	r1,r1,#0
  816  000018a4  1420ffd0	bnez	r1,L169_LF2
  817  000018a8  54000000	nop; not filled.
  818  000018ac          	L163_LF2:
  819  000018ac  14a0ffac	bnez	r5,L165_LF2
  820  000018b0  54000000	nop; not filled.
  821  000018b4          	L164_LF2:
  822  000018b4  20010000	addi	r1,r0,#0
  823  000018b8          	L173_LF2:
  824  000018b8  8fa20000	lw	r2,0(r29)
  825  000018bc  8fa30004	lw	r3,4(r29)
  826  000018c0  8fa40008	lw	r4,8(r29)
  827  000018c4  8fa5000c	lw	r5,12(r29)
  828  000018c8  8fa60010	lw	r6,16(r29)
  829  000018cc  8fdffff8	lw	r31,-8(r30)
  830  000018d0  001ee820	add	r29,r0,r30
  831  000018d4  8fdefffc	lw	r30,-4(r30)
  832  000018d8  4be00000	jr	r31
  833  000018dc  54000000	nop
  834  000018e0          	.endproc _dmindex
  835  000018e0          	.align 2
  836  000018e0          	.proc _dindex
  837  000018e0          	.global _dindex
  838  000018e0          	_dindex:
  839                      ;  Function 'dindex'; 0 bytes of locals, 2 regs to save.
  840  000018e0  afbefffc	sw	-4(r29),r30; push fp
  841  000018e4  001df020	add	r30,r0,r29; fp = sp
  842  000018e8  afbffff8	sw	-8(r29),r31; push ret addr
  843  000018ec  2fbd0010	subui	r29,r29,#16; alloc local storage
  844  000018f0  afa20000	sw	0(r29),r2
  845  000018f4  afa30004	sw	4(r29),r3
  846  000018f8  8fc20000	lw	r2,(r30)
  847  000018fc  8fc30004	lw	r3,4(r30)
  848  00001900  08000024	j	L187_LF2
  849  00001904  54000000	nop; not filled.
  850  00001908          	L183_LF2:
  851  00001908  33e100ff	andi	r1,r31,#0x00ff
  852  0000190c  00230828	seq	r1,r1,r3
  853  00001910  10200010	beqz	r1,L184_LF2
  854  00001914  54000000	nop; not filled.
  855  00001918  00020820	add	r1,r0,r2
  856  0000191c  08000020	j	L186_LF2
  857  00001920  54000000	nop; not filled.
  858  00001924          	L184_LF2:
  859  00001924  20420001	addi	r2,r2,#1
  860  00001928          	L187_LF2:
  861  00001928  805f0000	lb	r31,(r2)
  862  0000192c  33e100ff	andi	r1,r31,#0x00ff
  863  00001930  64210000	snei	r1,r1,#0
  864  00001934  1420ffd0	bnez	r1,L183_LF2
  865  00001938  54000000	nop; not filled.
  866  0000193c  20010000	addi	r1,r0,#0
  867  00001940          	L186_LF2:
  868  00001940  8fa20000	lw	r2,0(r29)
  869  00001944  8fa30004	lw	r3,4(r29)
  870  00001948  8fdffff8	lw	r31,-8(r30)
  871  0000194c  001ee820	add	r29,r0,r30
  872  00001950  8fdefffc	lw	r30,-4(r30)
  873  00001954  4be00000	jr	r31
  874  00001958  54000000	nop
  875  0000195c          	.endproc _dindex
  876  0000195c          	.align 2
  877  0000195c          	.proc _ditoa
  878  0000195c          	.global _ditoa
  879  0000195c          	_ditoa:
  880                      ;  Function 'ditoa'; 0 bytes of locals, 5 regs to save.
  881  0000195c  afbefffc	sw	-4(r29),r30; push fp
  882  00001960  001df020	add	r30,r0,r29; fp = sp
  883  00001964  afbffff8	sw	-8(r29),r31; push ret addr
  884  00001968  2fbd0020	subui	r29,r29,#32; alloc local storage
  885  0000196c  afa20000	sw	0(r29),r2
  886  00001970  afa30004	sw	4(r29),r3
  887  00001974  afa40008	sw	8(r29),r4
  888  00001978  afa5000c	sw	12(r29),r5
  889  0000197c  afa60010	sw	16(r29),r6
  890  00001980  8fc30000	lw	r3,(r30)
  891  00001984  8fc40004	lw	r4,4(r30)
  892  00001988  68610000	slti	r1,r3,#0
  893  0000198c  10200010	beqz	r1,L203_LF2
  894  00001990  54000000	nop; not filled.
  895  00001994  2006002d	addi	r6,r0,(#0x2d)&0xff
  896  00001998  08000014	j	L216_LF2
  897  0000199c  54000000	nop; not filled.
  898  000019a0          	L203_LF2:
  899  000019a0  64610000	snei	r1,r3,#0
  900  000019a4  14200018	bnez	r1,L205_LF2
  901  000019a8  54000000	nop; not filled.
  902  000019ac  20060030	addi	r6,r0,(#0x30)&0xff
  903  000019b0          	L216_LF2:
  904  000019b0  a0860000	sb	(r4),r6
  905  000019b4  20840001	addi	r4,r4,#1
  906  000019b8  0800007c	j	L204_LF2
  907  000019bc  54000000	nop; not filled.
  908  000019c0          	L205_LF2:
  909  000019c0  201f0001	addi	r31,r0,#1
  910  000019c4  03e3082c	sle	r1,r31,r3
  911  000019c8  1020001c	beqz	r1,L208_LF2
  912  000019cc  54000000	nop; not filled.
  913  000019d0          	L209_LF2:
  914  000019d0  53e10002	slli	r1,r31,#0x2
  915  000019d4  003f0820	add	r1,r1,r31
  916  000019d8  503f0001	slli	r31,r1,#0x1
  917  000019dc  03e3082c	sle	r1,r31,r3
  918  000019e0  1420ffec	bnez	r1,L209_LF2
  919  000019e4  54000000	nop; not filled.
  920  000019e8          	L208_LF2:
  921  000019e8  2005000a	addi	r5,r0,#10
  922  000019ec          	L212_LF2:
  923  000019ec  03e00035	movi2fp	f0,r31
  924  000019f0  00a00835	movi2fp	f1,r5
  925  000019f4  0401000f	div	f0,f0,f1
  926  000019f8  0000f834	movfp2i	r31,f0
  927  000019fc  00600035	movi2fp	f0,r3
  928  00001a00  03e00835	movi2fp	f1,r31
  929  00001a04  0401000f	div	f0,f0,f1
  930  00001a08  00001034	movfp2i	r2,f0
  931  00001a0c  20410030	addi	r1,r2,#48
  932  00001a10  a0810000	sb	(r4),r1
  933  00001a14  20840001	addi	r4,r4,#1
  934  00001a18  00400035	movi2fp	f0,r2
  935  00001a1c  03e00835	movi2fp	f1,r31
  936  00001a20  0401000e	mult	f0,f0,f1
  937  00001a24  00000834	movfp2i	r1,f0
  938  00001a28  00611822	sub	r3,r3,r1
  939  00001a2c  6fe10001	sgti	r1,r31,#1
  940  00001a30  1420ffb8	bnez	r1,L212_LF2
  941  00001a34  54000000	nop; not filled.
  942  00001a38          	L204_LF2:
  943  00001a38  20060000	addi	r6,r0,(#0x0)&0xff
  944  00001a3c  a0860000	sb	(r4),r6
  945  00001a40  8fa20000	lw	r2,0(r29)
  946  00001a44  8fa30004	lw	r3,4(r29)
  947  00001a48  8fa40008	lw	r4,8(r29)
  948  00001a4c  8fa5000c	lw	r5,12(r29)
  949  00001a50  8fa60010	lw	r6,16(r29)
  950  00001a54  8fdffff8	lw	r31,-8(r30)
  951  00001a58  001ee820	add	r29,r0,r30
  952  00001a5c  8fdefffc	lw	r30,-4(r30)
  953  00001a60  4be00000	jr	r31
  954  00001a64  54000000	nop
  955  00001a68          	.endproc _ditoa
  956  00001a68          	.align 2
  957  00001a68          	.proc _dstrtol
  958  00001a68          	.global _dstrtol
  959  00001a68          	_dstrtol:
  960                      ;  Function 'dstrtol'; 0 bytes of locals, 5 regs to save.
  961  00001a68  afbefffc	sw	-4(r29),r30; push fp
  962  00001a6c  001df020	add	r30,r0,r29; fp = sp
  963  00001a70  afbffff8	sw	-8(r29),r31; push ret addr
  964  00001a74  2fbd0020	subui	r29,r29,#32; alloc local storage
  965  00001a78  afa20000	sw	0(r29),r2
  966  00001a7c  afa30004	sw	4(r29),r3
  967  00001a80  afa40008	sw	8(r29),r4
  968  00001a84  afa5000c	sw	12(r29),r5
  969  00001a88  afa60010	sw	16(r29),r6
  970  00001a8c  8fc20000	lw	r2,(r30)
  971  00001a90  8fc50004	lw	r5,4(r30)
  972  00001a94  8fc40008	lw	r4,8(r30)
  973  00001a98  20030000	addi	r3,r0,#0
  974  00001a9c  08000008	j	L247_LF2
  975  00001aa0  54000000	nop; not filled.
  976  00001aa4          	L220_LF2:
  977  00001aa4  20420001	addi	r2,r2,#1
  978  00001aa8          	L247_LF2:
  979  00001aa8  805f0000	lb	r31,(r2)
  980  00001aac  33e100ff	andi	r1,r31,#0x00ff
  981  00001ab0  60210020	seqi	r1,r1,#32
  982  00001ab4  1420ffec	bnez	r1,L220_LF2
  983  00001ab8  54000000	nop; not filled.
  984  00001abc  23e1fff7	addi	r1,r31,#-9
  985  00001ac0  302100ff	andi	r1,r1,#0x00ff
  986  00001ac4  70210001	sleui	r1,r1,#1
  987  00001ac8  1420ffd8	bnez	r1,L220_LF2
  988  00001acc  54000000	nop; not filled.
  989  00001ad0  64a10000	snei	r1,r5,#0
  990  00001ad4  10200008	beqz	r1,L222_LF2
  991  00001ad8  54000000	nop; not filled.
  992  00001adc  aca20000	sw	(r5),r2
  993  00001ae0          	L222_LF2:
  994  00001ae0  905f0000	lbu	r31,(r2)
  995  00001ae4  67e10000	snei	r1,r31,#0
  996  00001ae8  10200090	beqz	r1,L248_LF2
  997  00001aec  54000000	nop; not filled.
  998  00001af0  63e1002d	seqi	r1,r31,#45
  999  00001af4  10200014	beqz	r1,L224_LF2
 1000  00001af8  54000000	nop; not filled.
 1001  00001afc  2006ffff	addi	r6,r0,#-1
 1002  00001b00  20420001	addi	r2,r2,#1
 1003  00001b04  08000008	j	L225_LF2
 1004  00001b08  54000000	nop; not filled.
 1005  00001b0c          	L224_LF2:
 1006  00001b0c  20060001	addi	r6,r0,#1
 1007  00001b10          	L225_LF2:
 1008  00001b10  64810000	snei	r1,r4,#0
 1009  00001b14  14200054	bnez	r1,L226_LF2
 1010  00001b18  54000000	nop; not filled.
 1011  00001b1c  90410000	lbu	r1,(r2)
 1012  00001b20  60210030	seqi	r1,r1,#48
 1013  00001b24  10200040	beqz	r1,L227_LF2
 1014  00001b28  54000000	nop; not filled.
 1015  00001b2c  20420001	addi	r2,r2,#1
 1016  00001b30  905f0000	lbu	r31,(r2)
 1017  00001b34  63e10078	seqi	r1,r31,#120
 1018  00001b38  14200010	bnez	r1,L229_LF2
 1019  00001b3c  54000000	nop; not filled.
 1020  00001b40  63e10058	seqi	r1,r31,#88
 1021  00001b44  10200014	beqz	r1,L228_LF2
 1022  00001b48  54000000	nop; not filled.
 1023  00001b4c          	L229_LF2:
 1024  00001b4c  20040010	addi	r4,r0,#16
 1025  00001b50  20420001	addi	r2,r2,#1
 1026  00001b54  08000014	j	L226_LF2
 1027  00001b58  54000000	nop; not filled.
 1028  00001b5c          	L228_LF2:
 1029  00001b5c  20040008	addi	r4,r0,#8
 1030  00001b60  08000008	j	L226_LF2
 1031  00001b64  54000000	nop; not filled.
 1032  00001b68          	L227_LF2:
 1033  00001b68  2004000a	addi	r4,r0,#10
 1034  00001b6c          	L226_LF2:
 1035  00001b6c  2081ffff	addi	r1,r4,#-1
 1036  00001b70  6c21000f	sgtui	r1,r1,#15
 1037  00001b74  10200010	beqz	r1,L233_LF2
 1038  00001b78  54000000	nop; not filled.
 1039  00001b7c          	L248_LF2:
 1040  00001b7c  00030820	add	r1,r0,r3
 1041  00001b80  080000c4	j	L245_LF2
 1042  00001b84  54000000	nop; not filled.
 1043  00001b88          	L233_LF2:
 1044  00001b88  805f0000	lb	r31,(r2)
 1045  00001b8c  23e1ffd0	addi	r1,r31,#-48
 1046  00001b90  302100ff	andi	r1,r1,#0x00ff
 1047  00001b94  70210009	sleui	r1,r1,#9
 1048  00001b98  10200014	beqz	r1,L236_LF2
 1049  00001b9c  54000000	nop; not filled.
 1050  00001ba0  33e100ff	andi	r1,r31,#0x00ff
 1051  00001ba4  2021ffd0	addi	r1,r1,#-48
 1052  00001ba8  08000050	j	L237_LF2
 1053  00001bac  54000000	nop; not filled.
 1054  00001bb0          	L236_LF2:
 1055  00001bb0  23e1ff9f	addi	r1,r31,#-97
 1056  00001bb4  302100ff	andi	r1,r1,#0x00ff
 1057  00001bb8  70210019	sleui	r1,r1,#25
 1058  00001bbc  10200014	beqz	r1,L238_LF2
 1059  00001bc0  54000000	nop; not filled.
 1060  00001bc4  33e100ff	andi	r1,r31,#0x00ff
 1061  00001bc8  2021ffa9	addi	r1,r1,#-87
 1062  00001bcc  0800002c	j	L237_LF2
 1063  00001bd0  54000000	nop; not filled.
 1064  00001bd4          	L238_LF2:
 1065  00001bd4  23e1ffbf	addi	r1,r31,#-65
 1066  00001bd8  302100ff	andi	r1,r1,#0x00ff
 1067  00001bdc  70210019	sleui	r1,r1,#25
 1068  00001be0  10200014	beqz	r1,L240_LF2
 1069  00001be4  54000000	nop; not filled.
 1070  00001be8  33e100ff	andi	r1,r31,#0x00ff
 1071  00001bec  2021ffc9	addi	r1,r1,#-55
 1072  00001bf0  08000008	j	L237_LF2
 1073  00001bf4  54000000	nop; not filled.
 1074  00001bf8          	L240_LF2:
 1075  00001bf8  200103e8	addi	r1,r0,#1000
 1076  00001bfc          	L237_LF2:
 1077  00001bfc  0024f82a	slt	r31,r1,r4
 1078  00001c00  13e00024	beqz	r31,L246_LF2
 1079  00001c04  54000000	nop; not filled.
 1080  00001c08  00600035	movi2fp	f0,r3
 1081  00001c0c  00800835	movi2fp	f1,r4
 1082  00001c10  0401000e	mult	f0,f0,f1
 1083  00001c14  00001834	movfp2i	r3,f0
 1084  00001c18  00611820	add	r3,r3,r1
 1085  00001c1c  20420001	addi	r2,r2,#1
 1086  00001c20  17e0ff64	bnez	r31,L233_LF2
 1087  00001c24  54000000	nop; not filled.
 1088  00001c28          	L246_LF2:
 1089  00001c28  64a10000	snei	r1,r5,#0
 1090  00001c2c  10200008	beqz	r1,L244_LF2
 1091  00001c30  54000000	nop; not filled.
 1092  00001c34  aca20000	sw	(r5),r2
 1093  00001c38          	L244_LF2:
 1094  00001c38  00600035	movi2fp	f0,r3
 1095  00001c3c  00c00835	movi2fp	f1,r6
 1096  00001c40  0401000e	mult	f0,f0,f1
 1097  00001c44  00000834	movfp2i	r1,f0
 1098  00001c48          	L245_LF2:
 1099  00001c48  8fa20000	lw	r2,0(r29)
 1100  00001c4c  8fa30004	lw	r3,4(r29)
 1101  00001c50  8fa40008	lw	r4,8(r29)
 1102  00001c54  8fa5000c	lw	r5,12(r29)
 1103  00001c58  8fa60010	lw	r6,16(r29)
 1104  00001c5c  8fdffff8	lw	r31,-8(r30)
 1105  00001c60  001ee820	add	r29,r0,r30
 1106  00001c64  8fdefffc	lw	r30,-4(r30)
 1107  00001c68  4be00000	jr	r31
 1108  00001c6c  54000000	nop
 1109  00001c70          	.endproc _dstrtol
 1110  00001c70          	.align 2
 1111  00001c70          	.proc _bcopy
 1112  00001c70          	.global _bcopy
 1113  00001c70          	_bcopy:
 1114                      ;  Function 'bcopy'; 0 bytes of locals, 3 regs to save.
 1115  00001c70  afbefffc	sw	-4(r29),r30; push fp
 1116  00001c74  001df020	add	r30,r0,r29; fp = sp
 1117  00001c78  afbffff8	sw	-8(r29),r31; push ret addr
 1118  00001c7c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1119  00001c80  afa20000	sw	0(r29),r2
 1120  00001c84  afa30004	sw	4(r29),r3
 1121  00001c88  afa40008	sw	8(r29),r4
 1122  00001c8c  8fc30000	lw	r3,(r30)
 1123  00001c90  8fc20004	lw	r2,4(r30)
 1124  00001c94  8fdf0008	lw	r31,8(r30)
 1125  00001c98  08000014	j	L259_LF2
 1126  00001c9c  54000000	nop; not filled.
 1127  00001ca0          	L257_LF2:
 1128  00001ca0  80640000	lb	r4,(r3)
 1129  00001ca4  a0440000	sb	(r2),r4
 1130  00001ca8  20630001	addi	r3,r3,#1
 1131  00001cac  20420001	addi	r2,r2,#1
 1132  00001cb0          	L259_LF2:
 1133  00001cb0  001f0820	add	r1,r0,r31
 1134  00001cb4  23ffffff	addi	r31,r31,#-1
 1135  00001cb8  6c210000	sgti	r1,r1,#0
 1136  00001cbc  1420ffe0	bnez	r1,L257_LF2
 1137  00001cc0  54000000	nop; not filled.
 1138  00001cc4  8fa20000	lw	r2,0(r29)
 1139  00001cc8  8fa30004	lw	r3,4(r29)
 1140  00001ccc  8fa40008	lw	r4,8(r29)
 1141  00001cd0  8fdffff8	lw	r31,-8(r30)
 1142  00001cd4  001ee820	add	r29,r0,r30
 1143  00001cd8  8fdefffc	lw	r30,-4(r30)
 1144  00001cdc  4be00000	jr	r31
 1145  00001ce0  54000000	nop
 1146  00001ce4          	.endproc _bcopy
 1147  00001ce4          	.align 2
 1148  00001ce4          	.proc _bzero
 1149  00001ce4          	.global _bzero
 1150  00001ce4          	_bzero:
 1151                      ;  Function 'bzero'; 0 bytes of locals, 2 regs to save.
 1152  00001ce4  afbefffc	sw	-4(r29),r30; push fp
 1153  00001ce8  001df020	add	r30,r0,r29; fp = sp
 1154  00001cec  afbffff8	sw	-8(r29),r31; push ret addr
 1155  00001cf0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1156  00001cf4  afa20000	sw	0(r29),r2
 1157  00001cf8  afa30004	sw	4(r29),r3
 1158  00001cfc  8fc20000	lw	r2,(r30)
 1159  00001d00  8fdf0004	lw	r31,4(r30)
 1160  00001d04  08000010	j	L270_LF2
 1161  00001d08  54000000	nop; not filled.
 1162  00001d0c          	L268_LF2:
 1163  00001d0c  20030000	addi	r3,r0,(#0x0)&0xff
 1164  00001d10  a0430000	sb	(r2),r3
 1165  00001d14  20420001	addi	r2,r2,#1
 1166  00001d18          	L270_LF2:
 1167  00001d18  001f0820	add	r1,r0,r31
 1168  00001d1c  23ffffff	addi	r31,r31,#-1
 1169  00001d20  6c210000	sgti	r1,r1,#0
 1170  00001d24  1420ffe4	bnez	r1,L268_LF2
 1171  00001d28  54000000	nop; not filled.
 1172  00001d2c  8fa20000	lw	r2,0(r29)
 1173  00001d30  8fa30004	lw	r3,4(r29)
 1174  00001d34  8fdffff8	lw	r31,-8(r30)
 1175  00001d38  001ee820	add	r29,r0,r30
 1176  00001d3c  8fdefffc	lw	r30,-4(r30)
 1177  00001d40  4be00000	jr	r31
 1178  00001d44  54000000	nop
 1179  00001d48          	.endproc _bzero
 1180                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1181                      ;;;
 1182                      ;;; Most of the traps are called in files from libtraps.
 1185  00001d48          	.align 2
 1186  00001d48          	.proc _exit
 1187  00001d48          	.global _exit
 1188  00001d48          	_exit:
 1189  00001d48  44000300	trap	#0x300
 1190  00001d4c  4be00000	jr	r31
 1191  00001d50  54000000	nop
 1192  00001d54          	.endproc _exit
 1194                      ; for the benefit of gcc.
 1195  00001d54          	.proc ___main
 1196  00001d54          	.global ___main
 1197  00001d54          	___main:
 1198  00001d54  4be00000	jr	r31
 1199  00001d58  54000000	nop
 1200  00001d5c          	.endproc ___main
 1201  00001d5c          	.text
 1202  00001d5c          	.global _etext
 1203  00001d5c          	_etext:
 1204  00001d5c          	.align 3
 1205  00001d60          	.data
 1206  0000203b          	.global _edata
 1207  0000203b          	_edata:
